// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Matrix_Vector_Activa_5 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        reps_dout,
        reps_empty_n,
        reps_read,
        reps_out_din,
        reps_out_full_n,
        reps_out_write,
        weights6_m_weights_V_address0,
        weights6_m_weights_V_ce0,
        weights6_m_weights_V_q0,
        threshs6_m_threshold_address0,
        threshs6_m_threshold_ce0,
        threshs6_m_threshold_q0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state8 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [3:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [0:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] reps_dout;
input   reps_empty_n;
output   reps_read;
output  [31:0] reps_out_din;
input   reps_out_full_n;
output   reps_out_write;
output  [14:0] weights6_m_weights_V_address0;
output   weights6_m_weights_V_ce0;
input  [3:0] weights6_m_weights_V_q0;
output  [8:0] threshs6_m_threshold_address0;
output   threshs6_m_threshold_ce0;
input  [15:0] threshs6_m_threshold_q0;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;
reg reps_read;
reg reps_out_write;
reg weights6_m_weights_V_ce0;
reg threshs6_m_threshold_ce0;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln122_reg_2048;
reg   [0:0] icmp_ln125_reg_2057;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter5;
reg   [0:0] icmp_ln159_reg_2075;
reg   [0:0] icmp_ln159_reg_2075_pp0_iter4_reg;
reg    reps_blk_n;
reg    reps_out_blk_n;
reg   [31:0] i_0_i_reg_527;
wire   [31:0] shl_ln122_fu_678_p2;
reg   [31:0] shl_ln122_reg_2043;
reg    ap_block_state1;
wire   [0:0] icmp_ln122_fu_694_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_predicate_op178_read_state3;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_state7_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] i_fu_699_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln125_fu_708_p2;
wire   [3:0] inElem_V_4_fu_913_p66;
reg   [3:0] inElem_V_4_reg_2061;
wire   [5:0] trunc_ln321_fu_1047_p1;
reg   [5:0] trunc_ln321_reg_2066;
wire   [0:0] icmp_ln137_fu_1054_p2;
reg   [0:0] icmp_ln137_reg_2070;
reg   [0:0] icmp_ln137_reg_2070_pp0_iter1_reg;
reg   [0:0] icmp_ln137_reg_2070_pp0_iter2_reg;
wire   [0:0] icmp_ln159_fu_1066_p2;
reg   [0:0] icmp_ln159_reg_2075_pp0_iter1_reg;
reg   [0:0] icmp_ln159_reg_2075_pp0_iter2_reg;
reg   [0:0] icmp_ln159_reg_2075_pp0_iter3_reg;
reg   [31:0] nf_assign_load_reg_2079;
reg   [31:0] nf_assign_load_reg_2079_pp0_iter1_reg;
reg   [31:0] nf_assign_load_reg_2079_pp0_iter2_reg;
wire   [31:0] nf_fu_1080_p2;
reg   [31:0] nf_reg_2084;
wire   [0:0] xor_ln879_1342_fu_1477_p2;
reg   [0:0] xor_ln879_1342_reg_2163;
wire   [0:0] xor_ln879_1344_fu_1505_p2;
reg   [0:0] xor_ln879_1344_reg_2168;
reg   [0:0] xor_ln879_1344_reg_2168_pp0_iter3_reg;
wire   [0:0] xor_ln879_1346_fu_1533_p2;
reg   [0:0] xor_ln879_1346_reg_2173;
wire   [0:0] xor_ln879_1348_fu_1561_p2;
reg   [0:0] xor_ln879_1348_reg_2178;
wire   [15:0] res_V_fu_1570_p3;
reg   [15:0] res_V_reg_2183;
wire   [1:0] add_ln700_671_fu_1592_p2;
reg   [1:0] add_ln700_671_reg_2188;
wire   [15:0] add_ln700_672_fu_1613_p2;
reg   [15:0] add_ln700_672_reg_2198;
reg   [15:0] threshs6_m_threshold_2_reg_2203;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
wire   [3:0] ap_phi_reg_pp0_iter0_act_m_val_V_reg_538;
reg   [3:0] ap_phi_reg_pp0_iter1_act_m_val_V_reg_538;
reg   [3:0] ap_phi_reg_pp0_iter2_act_m_val_V_reg_538;
wire   [63:0] zext_ln89_fu_1409_p1;
wire   [63:0] zext_ln142_fu_1598_p1;
reg   [15:0] accu_V_0_0_0_i_fu_202;
reg   [15:0] ap_sig_allocacmp_accu_V_0_0_0_i_load;
reg   [31:0] tile_assign_fu_206;
wire   [31:0] tile_fu_1414_p2;
wire   [31:0] tile_2_fu_1437_p3;
reg   [31:0] sf_4_fu_210;
wire   [31:0] sf_fu_1060_p2;
reg   [3:0] tmp_V_fu_214;
reg   [3:0] ap_sig_allocacmp_tmp_V_load;
reg   [3:0] tmp_V_175_fu_218;
reg   [3:0] ap_sig_allocacmp_tmp_V_175_load;
reg   [3:0] tmp_V_176_fu_222;
reg   [3:0] ap_sig_allocacmp_tmp_V_176_load;
reg   [3:0] tmp_V_177_fu_226;
reg   [3:0] ap_sig_allocacmp_tmp_V_177_load;
reg   [3:0] tmp_V_178_fu_230;
reg   [3:0] ap_sig_allocacmp_tmp_V_178_load;
reg   [3:0] tmp_V_179_fu_234;
reg   [3:0] ap_sig_allocacmp_tmp_V_179_load;
reg   [3:0] tmp_V_180_fu_238;
reg   [3:0] ap_sig_allocacmp_tmp_V_180_load;
reg   [3:0] tmp_V_181_fu_242;
reg   [3:0] ap_sig_allocacmp_tmp_V_181_load;
reg   [3:0] tmp_V_182_fu_246;
reg   [3:0] ap_sig_allocacmp_tmp_V_182_load;
reg   [3:0] tmp_V_183_fu_250;
reg   [3:0] ap_sig_allocacmp_tmp_V_183_load;
reg   [3:0] tmp_V_184_fu_254;
reg   [3:0] ap_sig_allocacmp_tmp_V_184_load;
reg   [3:0] tmp_V_185_fu_258;
reg   [3:0] ap_sig_allocacmp_tmp_V_185_load;
reg   [3:0] tmp_V_186_fu_262;
reg   [3:0] ap_sig_allocacmp_tmp_V_186_load;
reg   [3:0] tmp_V_187_fu_266;
reg   [3:0] ap_sig_allocacmp_tmp_V_187_load;
reg   [3:0] tmp_V_188_fu_270;
reg   [3:0] ap_sig_allocacmp_tmp_V_188_load;
reg   [3:0] tmp_V_189_fu_274;
reg   [3:0] ap_sig_allocacmp_tmp_V_189_load;
reg   [3:0] tmp_V_190_fu_278;
reg   [3:0] ap_sig_allocacmp_tmp_V_190_load;
reg   [3:0] tmp_V_191_fu_282;
reg   [3:0] ap_sig_allocacmp_tmp_V_191_load;
reg   [3:0] tmp_V_192_fu_286;
reg   [3:0] ap_sig_allocacmp_tmp_V_192_load;
reg   [3:0] tmp_V_193_fu_290;
reg   [3:0] ap_sig_allocacmp_tmp_V_193_load;
reg   [3:0] tmp_V_194_fu_294;
reg   [3:0] ap_sig_allocacmp_tmp_V_194_load;
reg   [3:0] tmp_V_195_fu_298;
reg   [3:0] ap_sig_allocacmp_tmp_V_195_load;
reg   [3:0] tmp_V_196_fu_302;
reg   [3:0] ap_sig_allocacmp_tmp_V_196_load;
reg   [3:0] tmp_V_197_fu_306;
reg   [3:0] ap_sig_allocacmp_tmp_V_197_load;
reg   [3:0] tmp_V_198_fu_310;
reg   [3:0] ap_sig_allocacmp_tmp_V_198_load;
reg   [3:0] tmp_V_199_fu_314;
reg   [3:0] ap_sig_allocacmp_tmp_V_199_load;
reg   [3:0] tmp_V_200_fu_318;
reg   [3:0] ap_sig_allocacmp_tmp_V_200_load;
reg   [3:0] tmp_V_201_fu_322;
reg   [3:0] ap_sig_allocacmp_tmp_V_201_load;
reg   [3:0] tmp_V_202_fu_326;
reg   [3:0] ap_sig_allocacmp_tmp_V_202_load;
reg   [3:0] tmp_V_203_fu_330;
reg   [3:0] ap_sig_allocacmp_tmp_V_203_load;
reg   [3:0] tmp_V_204_fu_334;
reg   [3:0] ap_sig_allocacmp_tmp_V_204_load;
reg   [3:0] tmp_V_205_fu_338;
reg   [3:0] ap_sig_allocacmp_tmp_V_205_load;
reg   [3:0] tmp_V_206_fu_342;
reg   [3:0] ap_sig_allocacmp_tmp_V_206_load;
reg   [3:0] tmp_V_207_fu_346;
reg   [3:0] ap_sig_allocacmp_tmp_V_207_load;
reg   [3:0] tmp_V_208_fu_350;
reg   [3:0] ap_sig_allocacmp_tmp_V_208_load;
reg   [3:0] tmp_V_209_fu_354;
reg   [3:0] ap_sig_allocacmp_tmp_V_209_load;
reg   [3:0] tmp_V_210_fu_358;
reg   [3:0] ap_sig_allocacmp_tmp_V_210_load;
reg   [3:0] tmp_V_211_fu_362;
reg   [3:0] ap_sig_allocacmp_tmp_V_211_load;
reg   [3:0] tmp_V_212_fu_366;
reg   [3:0] ap_sig_allocacmp_tmp_V_212_load;
reg   [3:0] tmp_V_213_fu_370;
reg   [3:0] ap_sig_allocacmp_tmp_V_213_load;
reg   [3:0] tmp_V_214_fu_374;
reg   [3:0] ap_sig_allocacmp_tmp_V_214_load;
reg   [3:0] tmp_V_215_fu_378;
reg   [3:0] ap_sig_allocacmp_tmp_V_215_load;
reg   [3:0] tmp_V_216_fu_382;
reg   [3:0] ap_sig_allocacmp_tmp_V_216_load;
reg   [3:0] tmp_V_217_fu_386;
reg   [3:0] ap_sig_allocacmp_tmp_V_217_load;
reg   [3:0] tmp_V_218_fu_390;
reg   [3:0] ap_sig_allocacmp_tmp_V_218_load;
reg   [3:0] tmp_V_219_fu_394;
reg   [3:0] ap_sig_allocacmp_tmp_V_219_load;
reg   [3:0] tmp_V_220_fu_398;
reg   [3:0] ap_sig_allocacmp_tmp_V_220_load;
reg   [3:0] tmp_V_221_fu_402;
reg   [3:0] ap_sig_allocacmp_tmp_V_221_load;
reg   [3:0] tmp_V_222_fu_406;
reg   [3:0] ap_sig_allocacmp_tmp_V_222_load;
reg   [3:0] tmp_V_223_fu_410;
reg   [3:0] ap_sig_allocacmp_tmp_V_223_load;
reg   [3:0] tmp_V_224_fu_414;
reg   [3:0] ap_sig_allocacmp_tmp_V_224_load;
reg   [3:0] tmp_V_225_fu_418;
reg   [3:0] ap_sig_allocacmp_tmp_V_225_load;
reg   [3:0] tmp_V_226_fu_422;
reg   [3:0] ap_sig_allocacmp_tmp_V_226_load;
reg   [3:0] tmp_V_227_fu_426;
reg   [3:0] ap_sig_allocacmp_tmp_V_227_load;
reg   [3:0] tmp_V_228_fu_430;
reg   [3:0] ap_sig_allocacmp_tmp_V_228_load;
reg   [3:0] tmp_V_229_fu_434;
reg   [3:0] ap_sig_allocacmp_tmp_V_229_load;
reg   [3:0] tmp_V_230_fu_438;
reg   [3:0] ap_sig_allocacmp_tmp_V_230_load;
reg   [3:0] tmp_V_231_fu_442;
reg   [3:0] ap_sig_allocacmp_tmp_V_231_load;
reg   [3:0] tmp_V_232_fu_446;
reg   [3:0] ap_sig_allocacmp_tmp_V_232_load;
reg   [3:0] tmp_V_233_fu_450;
reg   [3:0] ap_sig_allocacmp_tmp_V_233_load;
reg   [3:0] tmp_V_234_fu_454;
reg   [3:0] ap_sig_allocacmp_tmp_V_234_load;
reg   [3:0] tmp_V_235_fu_458;
reg   [3:0] ap_sig_allocacmp_tmp_V_235_load;
reg   [3:0] tmp_V_236_fu_462;
reg   [3:0] ap_sig_allocacmp_tmp_V_236_load;
reg   [3:0] tmp_V_237_fu_466;
reg   [3:0] ap_sig_allocacmp_tmp_V_237_load;
reg   [31:0] nf_assign_fu_470;
wire   [31:0] nf_2_fu_1430_p3;
reg   [31:0] ap_sig_allocacmp_nf_assign_load_4;
reg   [31:0] ap_sig_allocacmp_nf_assign_load;
reg    ap_block_pp0_stage0_01001;
wire   [5:0] inElem_V_4_fu_913_p65;
wire   [0:0] icmp_ln173_fu_1425_p2;
wire   [0:0] p_Result_9_i_fu_1463_p3;
wire   [0:0] p_Result_i_fu_1455_p3;
wire   [0:0] xor_ln879_fu_1471_p2;
wire   [0:0] p_Result_9_1_i_fu_1491_p3;
wire   [0:0] p_Result_1_i_fu_1483_p3;
wire   [0:0] xor_ln879_1343_fu_1499_p2;
wire   [0:0] p_Result_9_2_i_fu_1519_p3;
wire   [0:0] p_Result_2_i_fu_1511_p3;
wire   [0:0] xor_ln879_1345_fu_1527_p2;
wire   [0:0] p_Result_9_3_i_fu_1547_p3;
wire   [0:0] p_Result_3_i_fu_1539_p3;
wire   [0:0] xor_ln879_1347_fu_1555_p2;
wire   [1:0] zext_ln170_fu_1577_p1;
wire   [1:0] zext_ln700_586_fu_1583_p1;
wire   [1:0] add_ln700_670_fu_1586_p2;
wire   [1:0] zext_ln170_628_fu_1580_p1;
wire   [15:0] zext_ln700_fu_1602_p1;
wire   [15:0] zext_ln700_587_fu_1610_p1;
wire   [15:0] add_ln700_fu_1605_p2;
wire    ap_CS_fsm_state8;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

BlackBoxJam_mux_6OgC #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .din3_WIDTH( 4 ),
    .din4_WIDTH( 4 ),
    .din5_WIDTH( 4 ),
    .din6_WIDTH( 4 ),
    .din7_WIDTH( 4 ),
    .din8_WIDTH( 4 ),
    .din9_WIDTH( 4 ),
    .din10_WIDTH( 4 ),
    .din11_WIDTH( 4 ),
    .din12_WIDTH( 4 ),
    .din13_WIDTH( 4 ),
    .din14_WIDTH( 4 ),
    .din15_WIDTH( 4 ),
    .din16_WIDTH( 4 ),
    .din17_WIDTH( 4 ),
    .din18_WIDTH( 4 ),
    .din19_WIDTH( 4 ),
    .din20_WIDTH( 4 ),
    .din21_WIDTH( 4 ),
    .din22_WIDTH( 4 ),
    .din23_WIDTH( 4 ),
    .din24_WIDTH( 4 ),
    .din25_WIDTH( 4 ),
    .din26_WIDTH( 4 ),
    .din27_WIDTH( 4 ),
    .din28_WIDTH( 4 ),
    .din29_WIDTH( 4 ),
    .din30_WIDTH( 4 ),
    .din31_WIDTH( 4 ),
    .din32_WIDTH( 4 ),
    .din33_WIDTH( 4 ),
    .din34_WIDTH( 4 ),
    .din35_WIDTH( 4 ),
    .din36_WIDTH( 4 ),
    .din37_WIDTH( 4 ),
    .din38_WIDTH( 4 ),
    .din39_WIDTH( 4 ),
    .din40_WIDTH( 4 ),
    .din41_WIDTH( 4 ),
    .din42_WIDTH( 4 ),
    .din43_WIDTH( 4 ),
    .din44_WIDTH( 4 ),
    .din45_WIDTH( 4 ),
    .din46_WIDTH( 4 ),
    .din47_WIDTH( 4 ),
    .din48_WIDTH( 4 ),
    .din49_WIDTH( 4 ),
    .din50_WIDTH( 4 ),
    .din51_WIDTH( 4 ),
    .din52_WIDTH( 4 ),
    .din53_WIDTH( 4 ),
    .din54_WIDTH( 4 ),
    .din55_WIDTH( 4 ),
    .din56_WIDTH( 4 ),
    .din57_WIDTH( 4 ),
    .din58_WIDTH( 4 ),
    .din59_WIDTH( 4 ),
    .din60_WIDTH( 4 ),
    .din61_WIDTH( 4 ),
    .din62_WIDTH( 4 ),
    .din63_WIDTH( 4 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 4 ))
BlackBoxJam_mux_6OgC_U361(
    .din0(ap_sig_allocacmp_tmp_V_load),
    .din1(ap_sig_allocacmp_tmp_V_175_load),
    .din2(ap_sig_allocacmp_tmp_V_176_load),
    .din3(ap_sig_allocacmp_tmp_V_177_load),
    .din4(ap_sig_allocacmp_tmp_V_178_load),
    .din5(ap_sig_allocacmp_tmp_V_179_load),
    .din6(ap_sig_allocacmp_tmp_V_180_load),
    .din7(ap_sig_allocacmp_tmp_V_181_load),
    .din8(ap_sig_allocacmp_tmp_V_182_load),
    .din9(ap_sig_allocacmp_tmp_V_183_load),
    .din10(ap_sig_allocacmp_tmp_V_184_load),
    .din11(ap_sig_allocacmp_tmp_V_185_load),
    .din12(ap_sig_allocacmp_tmp_V_186_load),
    .din13(ap_sig_allocacmp_tmp_V_187_load),
    .din14(ap_sig_allocacmp_tmp_V_188_load),
    .din15(ap_sig_allocacmp_tmp_V_189_load),
    .din16(ap_sig_allocacmp_tmp_V_190_load),
    .din17(ap_sig_allocacmp_tmp_V_191_load),
    .din18(ap_sig_allocacmp_tmp_V_192_load),
    .din19(ap_sig_allocacmp_tmp_V_193_load),
    .din20(ap_sig_allocacmp_tmp_V_194_load),
    .din21(ap_sig_allocacmp_tmp_V_195_load),
    .din22(ap_sig_allocacmp_tmp_V_196_load),
    .din23(ap_sig_allocacmp_tmp_V_197_load),
    .din24(ap_sig_allocacmp_tmp_V_198_load),
    .din25(ap_sig_allocacmp_tmp_V_199_load),
    .din26(ap_sig_allocacmp_tmp_V_200_load),
    .din27(ap_sig_allocacmp_tmp_V_201_load),
    .din28(ap_sig_allocacmp_tmp_V_202_load),
    .din29(ap_sig_allocacmp_tmp_V_203_load),
    .din30(ap_sig_allocacmp_tmp_V_204_load),
    .din31(ap_sig_allocacmp_tmp_V_205_load),
    .din32(ap_sig_allocacmp_tmp_V_206_load),
    .din33(ap_sig_allocacmp_tmp_V_207_load),
    .din34(ap_sig_allocacmp_tmp_V_208_load),
    .din35(ap_sig_allocacmp_tmp_V_209_load),
    .din36(ap_sig_allocacmp_tmp_V_210_load),
    .din37(ap_sig_allocacmp_tmp_V_211_load),
    .din38(ap_sig_allocacmp_tmp_V_212_load),
    .din39(ap_sig_allocacmp_tmp_V_213_load),
    .din40(ap_sig_allocacmp_tmp_V_214_load),
    .din41(ap_sig_allocacmp_tmp_V_215_load),
    .din42(ap_sig_allocacmp_tmp_V_216_load),
    .din43(ap_sig_allocacmp_tmp_V_217_load),
    .din44(ap_sig_allocacmp_tmp_V_218_load),
    .din45(ap_sig_allocacmp_tmp_V_219_load),
    .din46(ap_sig_allocacmp_tmp_V_220_load),
    .din47(ap_sig_allocacmp_tmp_V_221_load),
    .din48(ap_sig_allocacmp_tmp_V_222_load),
    .din49(ap_sig_allocacmp_tmp_V_223_load),
    .din50(ap_sig_allocacmp_tmp_V_224_load),
    .din51(ap_sig_allocacmp_tmp_V_225_load),
    .din52(ap_sig_allocacmp_tmp_V_226_load),
    .din53(ap_sig_allocacmp_tmp_V_227_load),
    .din54(ap_sig_allocacmp_tmp_V_228_load),
    .din55(ap_sig_allocacmp_tmp_V_229_load),
    .din56(ap_sig_allocacmp_tmp_V_230_load),
    .din57(ap_sig_allocacmp_tmp_V_231_load),
    .din58(ap_sig_allocacmp_tmp_V_232_load),
    .din59(ap_sig_allocacmp_tmp_V_233_load),
    .din60(ap_sig_allocacmp_tmp_V_234_load),
    .din61(ap_sig_allocacmp_tmp_V_235_load),
    .din62(ap_sig_allocacmp_tmp_V_236_load),
    .din63(ap_sig_allocacmp_tmp_V_237_load),
    .din64(inElem_V_4_fu_913_p65),
    .dout(inElem_V_4_fu_913_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end else if ((~((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd0) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_act_m_val_V_reg_538 <= inElem_V_4_reg_2061;
    end else if ((((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd2) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd3) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd4) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd5) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd6) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd7) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd8) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd9) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd10) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd11) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd12) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd13) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd14) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd15) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd16) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd17) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd18) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd19) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd20) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd21) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd22) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd23) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd24) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd25) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd26) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd27) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd28) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd29) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd30) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd31) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd32) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd33) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd34) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd35) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd36) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd37) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd38) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd39) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd40) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd41) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd42) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd43) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd44) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd45) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd46) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd47) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd48) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd49) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd50) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd51) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd52) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd53) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd54) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd55) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd56) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd57) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd58) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd59) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd60) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd61) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd62) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd63) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        ap_phi_reg_pp0_iter2_act_m_val_V_reg_538 <= in_V_V_dout;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter2_act_m_val_V_reg_538 <= ap_phi_reg_pp0_iter1_act_m_val_V_reg_538;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_694_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_i_reg_527 <= i_fu_699_p2;
    end else if ((~((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_527 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_reg_2075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nf_assign_fu_470 <= nf_2_fu_1430_p3;
    end else if ((~((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_470 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_fu_1066_p2 == 1'd0) & (icmp_ln122_fu_694_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sf_4_fu_210 <= sf_fu_1060_p2;
    end else if ((((icmp_ln159_fu_1066_p2 == 1'd1) & (icmp_ln122_fu_694_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        sf_4_fu_210 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_reg_2075 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tile_assign_fu_206 <= tile_2_fu_1437_p3;
    end else if (((icmp_ln159_reg_2075 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tile_assign_fu_206 <= tile_fu_1414_p2;
    end else if ((~((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tile_assign_fu_206 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accu_V_0_0_0_i_fu_202 <= add_ln700_672_fu_1613_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln700_671_reg_2188 <= add_ln700_671_fu_1592_p2;
        add_ln700_672_reg_2198 <= add_ln700_672_fu_1613_p2;
        icmp_ln137_reg_2070_pp0_iter2_reg <= icmp_ln137_reg_2070_pp0_iter1_reg;
        icmp_ln159_reg_2075_pp0_iter2_reg <= icmp_ln159_reg_2075_pp0_iter1_reg;
        icmp_ln159_reg_2075_pp0_iter3_reg <= icmp_ln159_reg_2075_pp0_iter2_reg;
        icmp_ln159_reg_2075_pp0_iter4_reg <= icmp_ln159_reg_2075_pp0_iter3_reg;
        nf_assign_load_reg_2079_pp0_iter2_reg <= nf_assign_load_reg_2079_pp0_iter1_reg;
        res_V_reg_2183 <= res_V_fu_1570_p3;
        xor_ln879_1342_reg_2163 <= xor_ln879_1342_fu_1477_p2;
        xor_ln879_1344_reg_2168 <= xor_ln879_1344_fu_1505_p2;
        xor_ln879_1344_reg_2168_pp0_iter3_reg <= xor_ln879_1344_reg_2168;
        xor_ln879_1346_reg_2173 <= xor_ln879_1346_fu_1533_p2;
        xor_ln879_1348_reg_2178 <= xor_ln879_1348_fu_1561_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter1_act_m_val_V_reg_538 <= ap_phi_reg_pp0_iter0_act_m_val_V_reg_538;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln122_reg_2048 <= icmp_ln122_fu_694_p2;
        icmp_ln137_reg_2070_pp0_iter1_reg <= icmp_ln137_reg_2070;
        icmp_ln159_reg_2075_pp0_iter1_reg <= icmp_ln159_reg_2075;
        nf_assign_load_reg_2079_pp0_iter1_reg <= nf_assign_load_reg_2079;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln122_fu_694_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln125_reg_2057 <= icmp_ln125_fu_708_p2;
        icmp_ln137_reg_2070 <= icmp_ln137_fu_1054_p2;
        icmp_ln159_reg_2075 <= icmp_ln159_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_fu_708_p2 == 1'd0) & (icmp_ln122_fu_694_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inElem_V_4_reg_2061 <= inElem_V_4_fu_913_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_fu_1066_p2 == 1'd1) & (icmp_ln122_fu_694_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        nf_assign_load_reg_2079 <= ap_sig_allocacmp_nf_assign_load;
        nf_reg_2084 <= nf_fu_1080_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        shl_ln122_reg_2043[31 : 15] <= shl_ln122_fu_678_p2[31 : 15];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln159_reg_2075_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs6_m_threshold_2_reg_2203 <= threshs6_m_threshold_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_175_fu_218 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_176_fu_222 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_177_fu_226 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd4) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_178_fu_230 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd5) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_179_fu_234 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd6) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_180_fu_238 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd7) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_181_fu_242 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd8) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_182_fu_246 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd9) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_183_fu_250 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd10) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_184_fu_254 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd11) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_185_fu_258 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd12) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_186_fu_262 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd13) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_187_fu_266 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd14) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_188_fu_270 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd15) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_189_fu_274 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd16) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_190_fu_278 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd17) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_191_fu_282 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd18) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_192_fu_286 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd19) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_193_fu_290 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd20) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_194_fu_294 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd21) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_195_fu_298 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd22) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_196_fu_302 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd23) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_197_fu_306 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd24) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_198_fu_310 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd25) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_199_fu_314 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd26) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_200_fu_318 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd27) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_201_fu_322 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd28) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_202_fu_326 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd29) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_203_fu_330 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd30) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_204_fu_334 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd31) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_205_fu_338 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd32) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_206_fu_342 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd33) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_207_fu_346 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd34) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_208_fu_350 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd35) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_209_fu_354 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd36) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_210_fu_358 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd37) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_211_fu_362 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd38) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_212_fu_366 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd39) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_213_fu_370 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd40) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_214_fu_374 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd41) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_215_fu_378 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd42) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_216_fu_382 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd43) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_217_fu_386 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd44) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_218_fu_390 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd45) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_219_fu_394 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd46) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_220_fu_398 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd47) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_221_fu_402 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd48) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_222_fu_406 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd49) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_223_fu_410 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd50) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_224_fu_414 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd51) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_225_fu_418 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd52) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_226_fu_422 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd53) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_227_fu_426 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd54) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_228_fu_430 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd55) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_229_fu_434 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd56) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_230_fu_438 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd57) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_231_fu_442 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd58) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_232_fu_446 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd59) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_233_fu_450 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd60) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_234_fu_454 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd61) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_235_fu_458 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd62) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_236_fu_462 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd63) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_237_fu_466 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_V_fu_214 <= in_V_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln125_fu_708_p2 == 1'd1) & (icmp_ln122_fu_694_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln321_reg_2066 <= trunc_ln321_fu_1047_p1;
    end
end

always @ (*) begin
    if ((icmp_ln122_fu_694_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_0_0_i_load = add_ln700_672_fu_1613_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_0_0_i_load = accu_V_0_0_0_i_fu_202;
    end
end

always @ (*) begin
    if (((icmp_ln159_reg_2075 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_nf_assign_load = nf_2_fu_1430_p3;
    end else begin
        ap_sig_allocacmp_nf_assign_load = nf_assign_fu_470;
    end
end

always @ (*) begin
    if (((icmp_ln159_reg_2075 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_nf_assign_load_4 = nf_2_fu_1430_p3;
    end else begin
        ap_sig_allocacmp_nf_assign_load_4 = nf_assign_fu_470;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd1))) begin
        ap_sig_allocacmp_tmp_V_175_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_175_load = tmp_V_175_fu_218;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd2))) begin
        ap_sig_allocacmp_tmp_V_176_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_176_load = tmp_V_176_fu_222;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd3))) begin
        ap_sig_allocacmp_tmp_V_177_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_177_load = tmp_V_177_fu_226;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd4))) begin
        ap_sig_allocacmp_tmp_V_178_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_178_load = tmp_V_178_fu_230;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd5))) begin
        ap_sig_allocacmp_tmp_V_179_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_179_load = tmp_V_179_fu_234;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd6))) begin
        ap_sig_allocacmp_tmp_V_180_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_180_load = tmp_V_180_fu_238;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd7))) begin
        ap_sig_allocacmp_tmp_V_181_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_181_load = tmp_V_181_fu_242;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd8))) begin
        ap_sig_allocacmp_tmp_V_182_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_182_load = tmp_V_182_fu_246;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd9))) begin
        ap_sig_allocacmp_tmp_V_183_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_183_load = tmp_V_183_fu_250;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd10))) begin
        ap_sig_allocacmp_tmp_V_184_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_184_load = tmp_V_184_fu_254;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd11))) begin
        ap_sig_allocacmp_tmp_V_185_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_185_load = tmp_V_185_fu_258;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd12))) begin
        ap_sig_allocacmp_tmp_V_186_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_186_load = tmp_V_186_fu_262;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd13))) begin
        ap_sig_allocacmp_tmp_V_187_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_187_load = tmp_V_187_fu_266;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd14))) begin
        ap_sig_allocacmp_tmp_V_188_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_188_load = tmp_V_188_fu_270;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd15))) begin
        ap_sig_allocacmp_tmp_V_189_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_189_load = tmp_V_189_fu_274;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd16))) begin
        ap_sig_allocacmp_tmp_V_190_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_190_load = tmp_V_190_fu_278;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd17))) begin
        ap_sig_allocacmp_tmp_V_191_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_191_load = tmp_V_191_fu_282;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd18))) begin
        ap_sig_allocacmp_tmp_V_192_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_192_load = tmp_V_192_fu_286;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd19))) begin
        ap_sig_allocacmp_tmp_V_193_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_193_load = tmp_V_193_fu_290;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd20))) begin
        ap_sig_allocacmp_tmp_V_194_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_194_load = tmp_V_194_fu_294;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd21))) begin
        ap_sig_allocacmp_tmp_V_195_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_195_load = tmp_V_195_fu_298;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd22))) begin
        ap_sig_allocacmp_tmp_V_196_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_196_load = tmp_V_196_fu_302;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd23))) begin
        ap_sig_allocacmp_tmp_V_197_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_197_load = tmp_V_197_fu_306;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd24))) begin
        ap_sig_allocacmp_tmp_V_198_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_198_load = tmp_V_198_fu_310;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd25))) begin
        ap_sig_allocacmp_tmp_V_199_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_199_load = tmp_V_199_fu_314;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd26))) begin
        ap_sig_allocacmp_tmp_V_200_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_200_load = tmp_V_200_fu_318;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd27))) begin
        ap_sig_allocacmp_tmp_V_201_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_201_load = tmp_V_201_fu_322;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd28))) begin
        ap_sig_allocacmp_tmp_V_202_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_202_load = tmp_V_202_fu_326;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd29))) begin
        ap_sig_allocacmp_tmp_V_203_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_203_load = tmp_V_203_fu_330;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd30))) begin
        ap_sig_allocacmp_tmp_V_204_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_204_load = tmp_V_204_fu_334;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd31))) begin
        ap_sig_allocacmp_tmp_V_205_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_205_load = tmp_V_205_fu_338;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd32))) begin
        ap_sig_allocacmp_tmp_V_206_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_206_load = tmp_V_206_fu_342;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd33))) begin
        ap_sig_allocacmp_tmp_V_207_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_207_load = tmp_V_207_fu_346;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd34))) begin
        ap_sig_allocacmp_tmp_V_208_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_208_load = tmp_V_208_fu_350;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd35))) begin
        ap_sig_allocacmp_tmp_V_209_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_209_load = tmp_V_209_fu_354;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd36))) begin
        ap_sig_allocacmp_tmp_V_210_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_210_load = tmp_V_210_fu_358;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd37))) begin
        ap_sig_allocacmp_tmp_V_211_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_211_load = tmp_V_211_fu_362;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd38))) begin
        ap_sig_allocacmp_tmp_V_212_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_212_load = tmp_V_212_fu_366;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd39))) begin
        ap_sig_allocacmp_tmp_V_213_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_213_load = tmp_V_213_fu_370;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd40))) begin
        ap_sig_allocacmp_tmp_V_214_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_214_load = tmp_V_214_fu_374;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd41))) begin
        ap_sig_allocacmp_tmp_V_215_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_215_load = tmp_V_215_fu_378;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd42))) begin
        ap_sig_allocacmp_tmp_V_216_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_216_load = tmp_V_216_fu_382;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd43))) begin
        ap_sig_allocacmp_tmp_V_217_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_217_load = tmp_V_217_fu_386;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd44))) begin
        ap_sig_allocacmp_tmp_V_218_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_218_load = tmp_V_218_fu_390;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd45))) begin
        ap_sig_allocacmp_tmp_V_219_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_219_load = tmp_V_219_fu_394;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd46))) begin
        ap_sig_allocacmp_tmp_V_220_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_220_load = tmp_V_220_fu_398;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd47))) begin
        ap_sig_allocacmp_tmp_V_221_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_221_load = tmp_V_221_fu_402;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd48))) begin
        ap_sig_allocacmp_tmp_V_222_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_222_load = tmp_V_222_fu_406;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd49))) begin
        ap_sig_allocacmp_tmp_V_223_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_223_load = tmp_V_223_fu_410;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd50))) begin
        ap_sig_allocacmp_tmp_V_224_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_224_load = tmp_V_224_fu_414;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd51))) begin
        ap_sig_allocacmp_tmp_V_225_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_225_load = tmp_V_225_fu_418;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd52))) begin
        ap_sig_allocacmp_tmp_V_226_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_226_load = tmp_V_226_fu_422;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd53))) begin
        ap_sig_allocacmp_tmp_V_227_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_227_load = tmp_V_227_fu_426;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd54))) begin
        ap_sig_allocacmp_tmp_V_228_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_228_load = tmp_V_228_fu_430;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd55))) begin
        ap_sig_allocacmp_tmp_V_229_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_229_load = tmp_V_229_fu_434;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd56))) begin
        ap_sig_allocacmp_tmp_V_230_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_230_load = tmp_V_230_fu_438;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd57))) begin
        ap_sig_allocacmp_tmp_V_231_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_231_load = tmp_V_231_fu_442;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd58))) begin
        ap_sig_allocacmp_tmp_V_232_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_232_load = tmp_V_232_fu_446;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd59))) begin
        ap_sig_allocacmp_tmp_V_233_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_233_load = tmp_V_233_fu_450;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd60))) begin
        ap_sig_allocacmp_tmp_V_234_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_234_load = tmp_V_234_fu_454;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd61))) begin
        ap_sig_allocacmp_tmp_V_235_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_235_load = tmp_V_235_fu_458;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd62))) begin
        ap_sig_allocacmp_tmp_V_236_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_236_load = tmp_V_236_fu_462;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd63))) begin
        ap_sig_allocacmp_tmp_V_237_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_237_load = tmp_V_237_fu_466;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln321_reg_2066 == 6'd0))) begin
        ap_sig_allocacmp_tmp_V_load = in_V_V_dout;
    end else begin
        ap_sig_allocacmp_tmp_V_load = tmp_V_fu_214;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op178_read_state3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln159_reg_2075_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln159_reg_2075_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reps_blk_n = reps_empty_n;
    end else begin
        reps_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reps_out_blk_n = reps_out_full_n;
    end else begin
        reps_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reps_out_write = 1'b1;
    end else begin
        reps_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        reps_read = 1'b1;
    end else begin
        reps_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        threshs6_m_threshold_ce0 = 1'b1;
    end else begin
        threshs6_m_threshold_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weights6_m_weights_V_ce0 = 1'b1;
    end else begin
        weights6_m_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln122_fu_694_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter4 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((icmp_ln122_fu_694_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln700_670_fu_1586_p2 = (zext_ln170_fu_1577_p1 + zext_ln700_586_fu_1583_p1);

assign add_ln700_671_fu_1592_p2 = (add_ln700_670_fu_1586_p2 + zext_ln170_628_fu_1580_p1);

assign add_ln700_672_fu_1613_p2 = (zext_ln700_587_fu_1610_p1 + add_ln700_fu_1605_p2);

assign add_ln700_fu_1605_p2 = (res_V_reg_2183 + zext_ln700_fu_1602_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln159_reg_2075_pp0_iter4_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op178_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln159_reg_2075_pp0_iter4_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op178_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln159_reg_2075_pp0_iter4_reg == 1'd1) & (out_V_V_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op178_read_state3 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (reps_out_full_n == 1'b0) | (reps_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op178_read_state3 == 1'b1));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter5 = ((icmp_ln159_reg_2075_pp0_iter4_reg == 1'd1) & (out_V_V_full_n == 1'b0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_act_m_val_V_reg_538 = 'bx;

always @ (*) begin
    ap_predicate_op178_read_state3 = ((icmp_ln125_reg_2057 == 1'd1) & (icmp_ln122_reg_2048 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign i_fu_699_p2 = (i_0_i_reg_527 + 32'd1);

assign icmp_ln122_fu_694_p2 = ((i_0_i_reg_527 == shl_ln122_reg_2043) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_708_p2 = ((ap_sig_allocacmp_nf_assign_load_4 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_1054_p2 = ((sf_4_fu_210 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln159_fu_1066_p2 = ((sf_fu_1060_p2 == 32'd64) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_1425_p2 = ((nf_reg_2084 == 32'd512) ? 1'b1 : 1'b0);

assign inElem_V_4_fu_913_p65 = sf_4_fu_210[5:0];

assign nf_2_fu_1430_p3 = ((icmp_ln173_fu_1425_p2[0:0] === 1'b1) ? 32'd0 : nf_reg_2084);

assign nf_fu_1080_p2 = (ap_sig_allocacmp_nf_assign_load + 32'd1);

assign out_V_V_din = (($signed(threshs6_m_threshold_2_reg_2203) < $signed(add_ln700_672_reg_2198)) ? 1'b1 : 1'b0);

assign p_Result_1_i_fu_1483_p3 = weights6_m_weights_V_q0[4'd1];

assign p_Result_2_i_fu_1511_p3 = weights6_m_weights_V_q0[4'd2];

assign p_Result_3_i_fu_1539_p3 = weights6_m_weights_V_q0[4'd3];

assign p_Result_9_1_i_fu_1491_p3 = ap_phi_reg_pp0_iter2_act_m_val_V_reg_538[4'd1];

assign p_Result_9_2_i_fu_1519_p3 = ap_phi_reg_pp0_iter2_act_m_val_V_reg_538[4'd2];

assign p_Result_9_3_i_fu_1547_p3 = ap_phi_reg_pp0_iter2_act_m_val_V_reg_538[4'd3];

assign p_Result_9_i_fu_1463_p3 = ap_phi_reg_pp0_iter2_act_m_val_V_reg_538[4'd0];

assign p_Result_i_fu_1455_p3 = weights6_m_weights_V_q0[4'd0];

assign reps_out_din = reps_dout;

assign res_V_fu_1570_p3 = ((icmp_ln137_reg_2070_pp0_iter2_reg[0:0] === 1'b1) ? 16'd0 : ap_sig_allocacmp_accu_V_0_0_0_i_load);

assign sf_fu_1060_p2 = (sf_4_fu_210 + 32'd1);

assign shl_ln122_fu_678_p2 = reps_dout << 32'd15;

assign start_out = real_start;

assign threshs6_m_threshold_address0 = zext_ln142_fu_1598_p1;

assign tile_2_fu_1437_p3 = ((icmp_ln173_fu_1425_p2[0:0] === 1'b1) ? 32'd0 : tile_fu_1414_p2);

assign tile_fu_1414_p2 = (tile_assign_fu_206 + 32'd1);

assign trunc_ln321_fu_1047_p1 = sf_4_fu_210[5:0];

assign weights6_m_weights_V_address0 = zext_ln89_fu_1409_p1;

assign xor_ln879_1342_fu_1477_p2 = (xor_ln879_fu_1471_p2 ^ 1'd1);

assign xor_ln879_1343_fu_1499_p2 = (p_Result_9_1_i_fu_1491_p3 ^ p_Result_1_i_fu_1483_p3);

assign xor_ln879_1344_fu_1505_p2 = (xor_ln879_1343_fu_1499_p2 ^ 1'd1);

assign xor_ln879_1345_fu_1527_p2 = (p_Result_9_2_i_fu_1519_p3 ^ p_Result_2_i_fu_1511_p3);

assign xor_ln879_1346_fu_1533_p2 = (xor_ln879_1345_fu_1527_p2 ^ 1'd1);

assign xor_ln879_1347_fu_1555_p2 = (p_Result_9_3_i_fu_1547_p3 ^ p_Result_3_i_fu_1539_p3);

assign xor_ln879_1348_fu_1561_p2 = (xor_ln879_1347_fu_1555_p2 ^ 1'd1);

assign xor_ln879_fu_1471_p2 = (p_Result_i_fu_1455_p3 ^ p_Result_9_i_fu_1463_p3);

assign zext_ln142_fu_1598_p1 = nf_assign_load_reg_2079_pp0_iter2_reg;

assign zext_ln170_628_fu_1580_p1 = xor_ln879_1346_reg_2173;

assign zext_ln170_fu_1577_p1 = xor_ln879_1342_reg_2163;

assign zext_ln700_586_fu_1583_p1 = xor_ln879_1348_reg_2178;

assign zext_ln700_587_fu_1610_p1 = add_ln700_671_reg_2188;

assign zext_ln700_fu_1602_p1 = xor_ln879_1344_reg_2168_pp0_iter3_reg;

assign zext_ln89_fu_1409_p1 = tile_assign_fu_206;

always @ (posedge ap_clk) begin
    shl_ln122_reg_2043[14:0] <= 15'b000000000000000;
end

endmodule //Matrix_Vector_Activa_5
