// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ConvolutionInputGene_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        numReps_dout,
        numReps_empty_n,
        numReps_read,
        numReps_out_din,
        numReps_out_full_n,
        numReps_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [23:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] numReps_dout;
input   numReps_empty_n;
output   numReps_read;
output  [31:0] numReps_out_din;
input   numReps_out_full_n;
output   numReps_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_read;
reg out_V_V_write;
reg numReps_read;
reg numReps_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln107_reg_1003;
reg   [0:0] and_ln153_reg_1047;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln107_reg_1003_pp0_iter3_reg;
reg   [0:0] icmp_ln123_reg_1007;
reg   [0:0] icmp_ln123_reg_1007_pp0_iter3_reg;
reg    numReps_blk_n;
reg    numReps_out_blk_n;
reg   [45:0] indvar_flatten_reg_307;
reg   [13:0] i_0_i_reg_318;
reg   [31:0] reg_396;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op167_read_state5;
reg    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_predicate_op221_write_state7;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln107_fu_497_p2;
wire   [0:0] and_ln153_fu_664_p2;
reg   [31:0] numReps_read_reg_973;
reg    ap_block_state1;
wire   [45:0] bound_fu_442_p2;
reg   [45:0] bound_reg_979;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln104_fu_448_p2;
reg   [0:0] icmp_ln104_reg_984;
wire   [45:0] add_ln104_fu_453_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln105_fu_459_p2;
reg   [0:0] icmp_ln105_reg_993;
wire   [13:0] i_fu_471_p3;
reg   [0:0] icmp_ln107_reg_1003_pp0_iter2_reg;
wire   [0:0] icmp_ln123_fu_506_p2;
reg   [0:0] icmp_ln123_reg_1007_pp0_iter2_reg;
wire   [1:0] trunc_ln124_fu_524_p1;
reg   [1:0] trunc_ln124_reg_1011;
wire   [31:0] current_line_in_bloc_fu_540_p2;
reg   [31:0] current_line_in_bloc_reg_1016;
wire   [0:0] icmp_ln132_fu_552_p2;
reg   [0:0] icmp_ln132_reg_1021;
wire   [0:0] icmp_ln135_fu_569_p2;
reg   [0:0] icmp_ln135_reg_1025;
wire   [0:0] icmp_ln138_fu_580_p2;
reg   [0:0] icmp_ln138_reg_1029;
wire   [0:0] icmp_ln141_fu_600_p2;
reg   [0:0] icmp_ln141_reg_1033;
wire   [31:0] ofm_y_fu_614_p2;
reg   [31:0] ofm_y_reg_1037;
wire   [0:0] icmp_ln144_fu_620_p2;
reg   [0:0] icmp_ln144_reg_1042;
wire   [0:0] icmp_ln160_fu_378_p2;
reg   [0:0] icmp_ln160_reg_1051;
wire   [0:0] icmp_ln113_fu_384_p2;
reg   [0:0] icmp_ln113_reg_1056;
wire   [1:0] add_ln129_fu_778_p2;
reg   [1:0] add_ln129_reg_1060;
wire   [23:0] outElem_V_fu_878_p6;
reg   [23:0] outElem_V_reg_1091;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter3;
wire   [4:0] inputBuf_0_V_address0;
reg    inputBuf_0_V_ce0;
wire   [23:0] inputBuf_0_V_q0;
reg   [4:0] inputBuf_0_V_address1;
reg    inputBuf_0_V_ce1;
reg    inputBuf_0_V_we1;
wire   [4:0] inputBuf_1_V_address0;
reg    inputBuf_1_V_ce0;
wire   [23:0] inputBuf_1_V_q0;
reg   [4:0] inputBuf_1_V_address1;
reg    inputBuf_1_V_ce1;
reg    inputBuf_1_V_we1;
wire   [4:0] inputBuf_2_V_address0;
reg    inputBuf_2_V_ce0;
wire   [23:0] inputBuf_2_V_q0;
reg   [4:0] inputBuf_2_V_address1;
reg    inputBuf_2_V_ce1;
reg    inputBuf_2_V_we1;
wire   [4:0] inputBuf_3_V_address0;
reg    inputBuf_3_V_ce0;
wire   [23:0] inputBuf_3_V_q0;
reg   [4:0] inputBuf_3_V_address1;
reg    inputBuf_3_V_ce1;
reg    inputBuf_3_V_we1;
wire   [63:0] zext_ln129_fu_765_p1;
wire   [63:0] zext_ln156_fu_794_p1;
wire   [63:0] zext_ln110_fu_841_p1;
reg   [31:0] read_block_8_fu_100;
wire   [31:0] select_ln105_fu_485_p3;
wire   [31:0] zext_ln160_fu_692_p1;
wire   [31:0] read_block_fu_750_p2;
reg   [31:0] ofm_y_1_i_fu_104;
wire   [31:0] select_ln144_3_fu_783_p3;
reg   [31:0] ap_sig_allocacmp_ofm_y_1_i_load;
reg   [31:0] ofm_x_4_fu_108;
wire   [31:0] ofm_x_fu_594_p2;
reg   [31:0] k_y_4_fu_112;
wire   [31:0] k_y_fu_528_p2;
reg   [31:0] inp_4_fu_116;
wire   [31:0] select_ln144_fu_626_p3;
wire   [31:0] inp_fu_734_p2;
reg   [31:0] k_x_4_fu_120;
wire   [31:0] k_x_fu_563_p2;
reg   [31:0] count_simd_4_fu_124;
wire   [31:0] count_simd_fu_546_p2;
reg   [31:0] current_block_write_20_fu_128;
wire   [31:0] current_block_write_24_fu_829_p3;
wire   [31:0] current_block_write_21_fu_865_p3;
reg   [31:0] current_line_8_fu_132;
wire   [31:0] select_ln160_fu_676_p3;
wire   [31:0] grp_fu_372_p2;
reg   [31:0] counter_internal_blo_fu_136;
wire   [31:0] select_ln172_fu_721_p3;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] trunc_ln321_18_fu_802_p1;
wire   [1:0] trunc_ln321_fu_849_p1;
wire   [44:0] tmp_fu_420_p3;
wire   [33:0] tmp_s_fu_431_p3;
wire   [45:0] p_shl_fu_427_p1;
wire   [45:0] p_shl70_fu_438_p1;
wire   [13:0] add_ln105_fu_465_p2;
wire   [31:0] add_ln128_fu_534_p2;
wire   [26:0] tmp_1_fu_648_p4;
wire   [0:0] icmp_ln153_fu_642_p2;
wire   [0:0] icmp_ln153_4_fu_658_p2;
wire   [5:0] trunc_ln105_fu_493_p1;
wire   [5:0] add_ln163_fu_670_p2;
wire   [5:0] read_block_9_fu_684_p3;
wire   [31:0] counter_internal_blo_16_fu_709_p2;
wire   [0:0] icmp_ln172_fu_715_p2;
wire   [1:0] trunc_ln124_4_fu_761_p1;
wire   [1:0] add_ln129_3_fu_772_p2;
wire   [31:0] current_block_write_22_fu_809_p2;
wire   [0:0] icmp_ln165_fu_815_p2;
wire   [31:0] current_block_write_23_fu_821_p3;
wire   [31:0] current_block_write_fu_853_p2;
wire   [0:0] icmp_ln116_fu_859_p2;
wire    ap_CS_fsm_state8;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op175_store_state5;
reg    ap_enable_operation_175;
reg    ap_enable_state5_pp0_iter2_stage0;
reg    ap_predicate_op159_load_state5;
reg    ap_enable_operation_159;
reg    ap_predicate_op218_load_state6;
reg    ap_enable_operation_218;
reg    ap_enable_state6_pp0_iter3_stage0;
reg    ap_predicate_op202_store_state5;
reg    ap_enable_operation_202;
reg    ap_predicate_op177_store_state5;
reg    ap_enable_operation_177;
reg    ap_predicate_op157_load_state5;
reg    ap_enable_operation_157;
reg    ap_predicate_op217_load_state6;
reg    ap_enable_operation_217;
reg    ap_predicate_op204_store_state5;
reg    ap_enable_operation_204;
reg    ap_predicate_op179_store_state5;
reg    ap_enable_operation_179;
reg    ap_predicate_op155_load_state5;
reg    ap_enable_operation_155;
reg    ap_predicate_op216_load_state6;
reg    ap_enable_operation_216;
reg    ap_predicate_op206_store_state5;
reg    ap_enable_operation_206;
reg    ap_predicate_op181_store_state5;
reg    ap_enable_operation_181;
reg    ap_predicate_op161_load_state5;
reg    ap_enable_operation_161;
reg    ap_predicate_op219_load_state6;
reg    ap_enable_operation_219;
reg    ap_predicate_op208_store_state5;
reg    ap_enable_operation_208;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_438;
reg    ap_condition_450;
reg    ap_condition_461;
reg    ap_condition_472;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

ConvolutionInputGbkb #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
inputBuf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_0_V_address0),
    .ce0(inputBuf_0_V_ce0),
    .q0(inputBuf_0_V_q0),
    .address1(inputBuf_0_V_address1),
    .ce1(inputBuf_0_V_ce1),
    .we1(inputBuf_0_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGbkb #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
inputBuf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_1_V_address0),
    .ce0(inputBuf_1_V_ce0),
    .q0(inputBuf_1_V_q0),
    .address1(inputBuf_1_V_address1),
    .ce1(inputBuf_1_V_ce1),
    .we1(inputBuf_1_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGbkb #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
inputBuf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_2_V_address0),
    .ce0(inputBuf_2_V_ce0),
    .q0(inputBuf_2_V_q0),
    .address1(inputBuf_2_V_address1),
    .ce1(inputBuf_2_V_ce1),
    .we1(inputBuf_2_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGbkb #(
    .DataWidth( 24 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
inputBuf_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_3_V_address0),
    .ce0(inputBuf_3_V_ce0),
    .q0(inputBuf_3_V_q0),
    .address1(inputBuf_3_V_address1),
    .ce1(inputBuf_3_V_ce1),
    .we1(inputBuf_3_V_we1),
    .d1(in_V_V_dout)
);

BlackBoxJam_mux_4fYi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mux_4fYi_U33(
    .din0(inputBuf_0_V_q0),
    .din1(inputBuf_1_V_q0),
    .din2(inputBuf_2_V_q0),
    .din3(inputBuf_3_V_q0),
    .din4(add_ln129_reg_1060),
    .dout(outElem_V_fu_878_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_552_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        count_simd_4_fu_124 <= count_simd_fu_546_p2;
    end else if ((((icmp_ln135_fu_569_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln138_fu_580_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln141_fu_600_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln138_fu_580_p2 == 1'd1) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln141_fu_600_p2 == 1'd1) & (icmp_ln138_fu_580_p2 == 1'd1) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        count_simd_4_fu_124 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_497_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        counter_internal_blo_fu_136 <= select_ln172_fu_721_p3;
    end else if ((((icmp_ln113_fu_384_p2 == 1'd1) & (icmp_ln107_fu_497_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        counter_internal_blo_fu_136 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_reg_1056 == 1'd1) & (icmp_ln107_reg_1003 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_block_write_20_fu_128 <= current_block_write_21_fu_865_p3;
    end else if (((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_block_write_20_fu_128 <= current_block_write_24_fu_829_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        current_block_write_20_fu_128 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_384_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_8_fu_132 <= grp_fu_372_p2;
    end else if (((icmp_ln107_fu_497_p2 == 1'd0) & (1'd1 == and_ln153_fu_664_p2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_8_fu_132 <= select_ln160_fu_676_p3;
    end else if ((((icmp_ln113_fu_384_p2 == 1'd1) & (icmp_ln107_fu_497_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        current_line_8_fu_132 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_448_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_i_reg_318 <= i_fu_471_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_0_i_reg_318 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_448_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_307 <= add_ln104_fu_453_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_307 <= 46'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_497_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_4_fu_116 <= inp_fu_734_p2;
    end else if (((icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln141_fu_600_p2 == 1'd1) & (icmp_ln138_fu_580_p2 == 1'd1) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_4_fu_116 <= select_ln144_fu_626_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inp_4_fu_116 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_fu_569_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_x_4_fu_120 <= k_x_fu_563_p2;
    end else if ((((icmp_ln138_fu_580_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln141_fu_600_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln138_fu_580_p2 == 1'd1) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln141_fu_600_p2 == 1'd1) & (icmp_ln138_fu_580_p2 == 1'd1) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_x_4_fu_120 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln138_fu_580_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_y_4_fu_112 <= k_y_fu_528_p2;
    end else if ((((icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln138_fu_580_p2 == 1'd1) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_y_4_fu_112 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln141_fu_600_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln138_fu_580_p2 == 1'd1) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ofm_x_4_fu_108 <= ofm_x_fu_594_p2;
    end else if ((((icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln141_fu_600_p2 == 1'd1) & (icmp_ln138_fu_580_p2 == 1'd1) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        ofm_x_4_fu_108 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_1007 == 1'd1) & (icmp_ln141_reg_1033 == 1'd1) & (icmp_ln138_reg_1029 == 1'd1) & (icmp_ln135_reg_1025 == 1'd1) & (icmp_ln132_reg_1021 == 1'd1) & (icmp_ln107_reg_1003 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ofm_y_1_i_fu_104 <= select_ln144_3_fu_783_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ofm_y_1_i_fu_104 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_384_p2 == 1'd1) & (icmp_ln107_fu_497_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        read_block_8_fu_100 <= read_block_fu_750_p2;
    end else if (((icmp_ln107_fu_497_p2 == 1'd0) & (1'd1 == and_ln153_fu_664_p2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        read_block_8_fu_100 <= zext_ln160_fu_692_p1;
    end else if ((((icmp_ln113_fu_384_p2 == 1'd0) & (icmp_ln107_fu_497_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'd0 == and_ln153_fu_664_p2) & (icmp_ln107_fu_497_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        read_block_8_fu_100 <= select_ln105_fu_485_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        read_block_8_fu_100 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_1007 == 1'd1) & (icmp_ln107_reg_1003 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln129_reg_1060 <= add_ln129_fu_778_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_497_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln153_reg_1047 <= and_ln153_fu_664_p2;
        icmp_ln123_reg_1007 <= icmp_ln123_fu_506_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_979[45 : 2] <= bound_fu_442_p2[45 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln123_fu_506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_in_bloc_reg_1016 <= current_line_in_bloc_fu_540_p2;
        icmp_ln132_reg_1021 <= icmp_ln132_fu_552_p2;
        trunc_ln124_reg_1011 <= trunc_ln124_fu_524_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln104_reg_984 <= icmp_ln104_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_448_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln105_reg_993 <= icmp_ln105_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_reg_984 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln107_reg_1003 <= icmp_ln107_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln107_reg_1003_pp0_iter2_reg <= icmp_ln107_reg_1003;
        icmp_ln107_reg_1003_pp0_iter3_reg <= icmp_ln107_reg_1003_pp0_iter2_reg;
        icmp_ln123_reg_1007_pp0_iter2_reg <= icmp_ln123_reg_1007;
        icmp_ln123_reg_1007_pp0_iter3_reg <= icmp_ln123_reg_1007_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln113_reg_1056 <= icmp_ln113_fu_384_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln135_reg_1025 <= icmp_ln135_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln138_reg_1029 <= icmp_ln138_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln138_fu_580_p2 == 1'd1) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln141_reg_1033 <= icmp_ln141_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_497_p2 == 1'd0) & (icmp_ln141_fu_600_p2 == 1'd1) & (icmp_ln138_fu_580_p2 == 1'd1) & (icmp_ln135_fu_569_p2 == 1'd1) & (icmp_ln132_fu_552_p2 == 1'd1) & (icmp_ln123_fu_506_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln144_reg_1042 <= icmp_ln144_fu_620_p2;
        ofm_y_reg_1037 <= ofm_y_fu_614_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_497_p2 == 1'd0) & (1'd1 == and_ln153_fu_664_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln160_reg_1051 <= icmp_ln160_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read_reg_973 <= numReps_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_reg_1003_pp0_iter2_reg == 1'd0) & (icmp_ln123_reg_1007_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outElem_V_reg_1091 <= outElem_V_fu_878_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln107_fu_497_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_497_p2 == 1'd0) & (1'd1 == and_ln153_fu_664_p2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_396 <= current_line_8_fu_132;
    end
end

always @ (*) begin
    if ((icmp_ln104_fu_448_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln123_reg_1007 == 1'd1) & (icmp_ln141_reg_1033 == 1'd1) & (icmp_ln138_reg_1029 == 1'd1) & (icmp_ln135_reg_1025 == 1'd1) & (icmp_ln132_reg_1021 == 1'd1) & (icmp_ln107_reg_1003 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_ofm_y_1_i_load = select_ln144_3_fu_783_p3;
    end else begin
        ap_sig_allocacmp_ofm_y_1_i_load = ofm_y_1_i_fu_104;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_1003 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op167_read_state5 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1003 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd0))) begin
            inputBuf_0_V_address1 = zext_ln110_fu_841_p1;
        end else if ((1'b1 == ap_condition_438)) begin
            inputBuf_0_V_address1 = zext_ln156_fu_794_p1;
        end else begin
            inputBuf_0_V_address1 = 'bx;
        end
    end else begin
        inputBuf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_0_V_ce0 = 1'b1;
    end else begin
        inputBuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_0_V_ce1 = 1'b1;
    end else begin
        inputBuf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_0_V_we1 = 1'b1;
    end else begin
        inputBuf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd1))) begin
            inputBuf_1_V_address1 = zext_ln110_fu_841_p1;
        end else if ((1'b1 == ap_condition_450)) begin
            inputBuf_1_V_address1 = zext_ln156_fu_794_p1;
        end else begin
            inputBuf_1_V_address1 = 'bx;
        end
    end else begin
        inputBuf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_1_V_ce0 = 1'b1;
    end else begin
        inputBuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_1_V_ce1 = 1'b1;
    end else begin
        inputBuf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_1_V_we1 = 1'b1;
    end else begin
        inputBuf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd2))) begin
            inputBuf_2_V_address1 = zext_ln110_fu_841_p1;
        end else if ((1'b1 == ap_condition_461)) begin
            inputBuf_2_V_address1 = zext_ln156_fu_794_p1;
        end else begin
            inputBuf_2_V_address1 = 'bx;
        end
    end else begin
        inputBuf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_2_V_ce0 = 1'b1;
    end else begin
        inputBuf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_2_V_ce1 = 1'b1;
    end else begin
        inputBuf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_2_V_we1 = 1'b1;
    end else begin
        inputBuf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd3))) begin
            inputBuf_3_V_address1 = zext_ln110_fu_841_p1;
        end else if ((1'b1 == ap_condition_472)) begin
            inputBuf_3_V_address1 = zext_ln156_fu_794_p1;
        end else begin
            inputBuf_3_V_address1 = 'bx;
        end
    end else begin
        inputBuf_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_3_V_ce0 = 1'b1;
    end else begin
        inputBuf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_3_V_ce1 = 1'b1;
    end else begin
        inputBuf_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_3_V_we1 = 1'b1;
    end else begin
        inputBuf_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_blk_n = numReps_empty_n;
    end else begin
        numReps_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_blk_n = numReps_out_full_n;
    end else begin
        numReps_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_write = 1'b1;
    end else begin
        numReps_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read = 1'b1;
    end else begin
        numReps_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_1003_pp0_iter3_reg == 1'd0) & (icmp_ln123_reg_1007_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op221_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln104_fu_448_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln104_fu_448_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln104_fu_453_p2 = (indvar_flatten_reg_307 + 46'd1);

assign add_ln105_fu_465_p2 = (i_0_i_reg_318 + 14'd1);

assign add_ln128_fu_534_p2 = (ofm_x_4_fu_108 + count_simd_4_fu_124);

assign add_ln129_3_fu_772_p2 = (2'd1 + trunc_ln124_4_fu_761_p1);

assign add_ln129_fu_778_p2 = (add_ln129_3_fu_772_p2 + trunc_ln124_reg_1011);

assign add_ln163_fu_670_p2 = (trunc_ln105_fu_493_p1 + 6'd1);

assign and_ln153_fu_664_p2 = (icmp_ln153_fu_642_p2 & icmp_ln153_4_fu_658_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op221_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op167_read_state5 == 1'b1)) | ((icmp_ln107_reg_1003 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op221_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op167_read_state5 == 1'b1)) | ((icmp_ln107_reg_1003 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (ap_predicate_op221_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op167_read_state5 == 1'b1)) | ((icmp_ln107_reg_1003 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = (((in_V_V_empty_n == 1'b0) & (ap_predicate_op167_read_state5 == 1'b1)) | ((icmp_ln107_reg_1003 == 1'd1) & (in_V_V_empty_n == 1'b0)));
end

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op221_write_state7 == 1'b1));
end

always @ (*) begin
    ap_condition_438 = ((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd0));
end

always @ (*) begin
    ap_condition_450 = ((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd1));
end

always @ (*) begin
    ap_condition_461 = ((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd2));
end

always @ (*) begin
    ap_condition_472 = ((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd3));
end

always @ (*) begin
    ap_enable_operation_155 = (ap_predicate_op155_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_157 = (ap_predicate_op157_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_159 = (ap_predicate_op159_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_161 = (ap_predicate_op161_load_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_175 = (ap_predicate_op175_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_177 = (ap_predicate_op177_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_179 = (ap_predicate_op179_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_181 = (ap_predicate_op181_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_202 = (ap_predicate_op202_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_204 = (ap_predicate_op204_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_206 = (ap_predicate_op206_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_208 = (ap_predicate_op208_store_state5 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_216 = (ap_predicate_op216_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_217 = (ap_predicate_op217_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_218 = (ap_predicate_op218_load_state6 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_219 = (ap_predicate_op219_load_state6 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state5_pp0_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_state6_pp0_iter3_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_predicate_op155_load_state5 = ((icmp_ln123_reg_1007 == 1'd1) & (icmp_ln107_reg_1003 == 1'd0));
end

always @ (*) begin
    ap_predicate_op157_load_state5 = ((icmp_ln123_reg_1007 == 1'd1) & (icmp_ln107_reg_1003 == 1'd0));
end

always @ (*) begin
    ap_predicate_op159_load_state5 = ((icmp_ln123_reg_1007 == 1'd1) & (icmp_ln107_reg_1003 == 1'd0));
end

always @ (*) begin
    ap_predicate_op161_load_state5 = ((icmp_ln123_reg_1007 == 1'd1) & (icmp_ln107_reg_1003 == 1'd0));
end

always @ (*) begin
    ap_predicate_op167_read_state5 = ((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0));
end

always @ (*) begin
    ap_predicate_op175_store_state5 = ((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op177_store_state5 = ((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op179_store_state5 = ((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op181_store_state5 = ((1'd1 == and_ln153_reg_1047) & (icmp_ln107_reg_1003 == 1'd0) & (trunc_ln321_18_fu_802_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op202_store_state5 = ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op204_store_state5 = ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op206_store_state5 = ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op208_store_state5 = ((icmp_ln107_reg_1003 == 1'd1) & (trunc_ln321_fu_849_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op216_load_state6 = ((icmp_ln107_reg_1003_pp0_iter2_reg == 1'd0) & (icmp_ln123_reg_1007_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op217_load_state6 = ((icmp_ln107_reg_1003_pp0_iter2_reg == 1'd0) & (icmp_ln123_reg_1007_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op218_load_state6 = ((icmp_ln107_reg_1003_pp0_iter2_reg == 1'd0) & (icmp_ln123_reg_1007_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op219_load_state6 = ((icmp_ln107_reg_1003_pp0_iter2_reg == 1'd0) & (icmp_ln123_reg_1007_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op221_write_state7 = ((icmp_ln107_reg_1003_pp0_iter3_reg == 1'd0) & (icmp_ln123_reg_1007_pp0_iter3_reg == 1'd1));
end

assign bound_fu_442_p2 = (p_shl_fu_427_p1 + p_shl70_fu_438_p1);

assign count_simd_fu_546_p2 = (32'd1 + count_simd_4_fu_124);

assign counter_internal_blo_16_fu_709_p2 = (counter_internal_blo_fu_136 + 32'd1);

assign current_block_write_21_fu_865_p3 = ((icmp_ln116_fu_859_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_fu_853_p2);

assign current_block_write_22_fu_809_p2 = (current_block_write_20_fu_128 + 32'd1);

assign current_block_write_23_fu_821_p3 = ((icmp_ln165_fu_815_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_22_fu_809_p2);

assign current_block_write_24_fu_829_p3 = ((icmp_ln160_reg_1051[0:0] === 1'b1) ? current_block_write_23_fu_821_p3 : current_block_write_20_fu_128);

assign current_block_write_fu_853_p2 = (current_block_write_20_fu_128 + 32'd1);

assign current_line_in_bloc_fu_540_p2 = (add_ln128_fu_534_p2 + k_x_4_fu_120);

assign grp_fu_372_p2 = (current_line_8_fu_132 + 32'd1);

assign i_fu_471_p3 = ((icmp_ln105_fu_459_p2[0:0] === 1'b1) ? 14'd1 : add_ln105_fu_465_p2);

assign icmp_ln104_fu_448_p2 = ((indvar_flatten_reg_307 == bound_reg_979) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_459_p2 = ((i_0_i_reg_318 == 14'd8196) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_497_p2 = ((inp_4_fu_116 < 32'd96) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_384_p2 = ((grp_fu_372_p2 == 32'd32) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_859_p2 = ((current_block_write_fu_853_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_506_p2 = ((counter_internal_blo_fu_136 < 32'd269) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_552_p2 = ((count_simd_4_fu_124 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_569_p2 = ((k_x_fu_563_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_580_p2 = ((k_y_fu_528_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_600_p2 = ((ofm_x_fu_594_p2 == 32'd30) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_620_p2 = ((ofm_y_fu_614_p2 == 32'd30) ? 1'b1 : 1'b0);

assign icmp_ln153_4_fu_658_p2 = ((tmp_1_fu_648_p4 == 27'd0) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_642_p2 = ((counter_internal_blo_fu_136 < 32'd31) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_378_p2 = ((grp_fu_372_p2 == 32'd32) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_815_p2 = ((current_block_write_22_fu_809_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_715_p2 = ((counter_internal_blo_16_fu_709_p2 == 32'd269) ? 1'b1 : 1'b0);

assign inp_fu_734_p2 = (inp_4_fu_116 + 32'd1);

assign inputBuf_0_V_address0 = zext_ln129_fu_765_p1;

assign inputBuf_1_V_address0 = zext_ln129_fu_765_p1;

assign inputBuf_2_V_address0 = zext_ln129_fu_765_p1;

assign inputBuf_3_V_address0 = zext_ln129_fu_765_p1;

assign k_x_fu_563_p2 = (k_x_4_fu_120 + 32'd1);

assign k_y_fu_528_p2 = (32'd1 + k_y_4_fu_112);

assign numReps_out_din = numReps_dout;

assign ofm_x_fu_594_p2 = (ofm_x_4_fu_108 + 32'd1);

assign ofm_y_fu_614_p2 = (ap_sig_allocacmp_ofm_y_1_i_load + 32'd1);

assign out_V_V_din = outElem_V_reg_1091;

assign p_shl70_fu_438_p1 = tmp_s_fu_431_p3;

assign p_shl_fu_427_p1 = tmp_fu_420_p3;

assign read_block_9_fu_684_p3 = ((icmp_ln160_fu_378_p2[0:0] === 1'b1) ? add_ln163_fu_670_p2 : trunc_ln105_fu_493_p1);

assign read_block_fu_750_p2 = (select_ln105_fu_485_p3 + 32'd1);

assign select_ln105_fu_485_p3 = ((icmp_ln105_reg_993[0:0] === 1'b1) ? 32'd0 : read_block_8_fu_100);

assign select_ln144_3_fu_783_p3 = ((icmp_ln144_reg_1042[0:0] === 1'b1) ? 32'd0 : ofm_y_reg_1037);

assign select_ln144_fu_626_p3 = ((icmp_ln144_fu_620_p2[0:0] === 1'b1) ? 32'd0 : inp_4_fu_116);

assign select_ln160_fu_676_p3 = ((icmp_ln160_fu_378_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_372_p2);

assign select_ln172_fu_721_p3 = ((icmp_ln172_fu_715_p2[0:0] === 1'b1) ? 32'd0 : counter_internal_blo_16_fu_709_p2);

assign tmp_1_fu_648_p4 = {{select_ln105_fu_485_p3[31:5]}};

assign tmp_fu_420_p3 = {{numReps_read_reg_973}, {13'd0}};

assign tmp_s_fu_431_p3 = {{numReps_read_reg_973}, {2'd0}};

assign trunc_ln105_fu_493_p1 = select_ln105_fu_485_p3[5:0];

assign trunc_ln124_4_fu_761_p1 = current_block_write_20_fu_128[1:0];

assign trunc_ln124_fu_524_p1 = k_y_4_fu_112[1:0];

assign trunc_ln321_18_fu_802_p1 = current_block_write_20_fu_128[1:0];

assign trunc_ln321_fu_849_p1 = current_block_write_20_fu_128[1:0];

assign zext_ln110_fu_841_p1 = reg_396;

assign zext_ln129_fu_765_p1 = current_line_in_bloc_reg_1016;

assign zext_ln156_fu_794_p1 = reg_396;

assign zext_ln160_fu_692_p1 = read_block_9_fu_684_p3;

always @ (posedge ap_clk) begin
    bound_reg_979[1:0] <= 2'b00;
end

endmodule //ConvolutionInputGene_2
