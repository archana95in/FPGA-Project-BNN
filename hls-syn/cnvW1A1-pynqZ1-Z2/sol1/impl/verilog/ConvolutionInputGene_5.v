// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ConvolutionInputGene_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        numReps_dout,
        numReps_empty_n,
        numReps_read,
        numReps_out_din,
        numReps_out_full_n,
        numReps_out_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_pp0_stage0 = 8'd64;
parameter    ap_ST_fsm_state10 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] numReps_dout;
input   numReps_empty_n;
output   numReps_read;
output  [31:0] numReps_out_din;
input   numReps_out_full_n;
output   numReps_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_read;
reg out_V_V_write;
reg numReps_read;
reg numReps_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln107_reg_981;
reg   [0:0] and_ln153_reg_1040;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln107_reg_981_pp0_iter1_reg;
reg   [0:0] icmp_ln123_reg_985;
reg   [0:0] icmp_ln123_reg_985_pp0_iter1_reg;
reg    numReps_blk_n;
reg    numReps_out_blk_n;
reg   [43:0] indvar_flatten_reg_301;
reg   [11:0] i_0_i_reg_312;
reg   [31:0] reg_390;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state7_pp0_stage0_iter0;
reg    ap_predicate_op177_read_state8;
reg    ap_block_state8_pp0_stage0_iter1;
reg    ap_predicate_op226_write_state9;
reg    ap_block_state9_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln104_fu_423_p2;
wire   [0:0] icmp_ln107_fu_459_p2;
wire   [0:0] and_ln153_fu_640_p2;
reg   [31:0] numReps_read_reg_957;
reg    ap_block_state1;
wire    ap_CS_fsm_state2;
wire   [43:0] grp_fu_417_p2;
reg   [43:0] bound_reg_967;
wire    ap_CS_fsm_state6;
wire   [43:0] add_ln104_fu_428_p2;
wire   [0:0] icmp_ln123_fu_468_p2;
wire   [1:0] trunc_ln124_fu_486_p1;
reg   [1:0] trunc_ln124_reg_989;
wire   [0:0] icmp_ln132_fu_538_p2;
reg   [0:0] icmp_ln132_reg_1014;
wire   [0:0] icmp_ln135_fu_555_p2;
reg   [0:0] icmp_ln135_reg_1018;
wire   [0:0] icmp_ln138_fu_566_p2;
reg   [0:0] icmp_ln138_reg_1022;
wire   [0:0] icmp_ln141_fu_586_p2;
reg   [0:0] icmp_ln141_reg_1026;
wire   [31:0] ofm_y_fu_600_p2;
reg   [31:0] ofm_y_reg_1030;
wire   [0:0] icmp_ln144_fu_606_p2;
reg   [0:0] icmp_ln144_reg_1035;
wire   [0:0] icmp_ln160_fu_372_p2;
reg   [0:0] icmp_ln160_reg_1044;
wire   [0:0] icmp_ln113_fu_378_p2;
reg   [0:0] icmp_ln113_reg_1049;
wire   [11:0] i_fu_743_p3;
wire   [31:0] outElem_V_fu_766_p6;
reg   [31:0] outElem_V_reg_1058;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
wire   [5:0] inputBuf_0_V_address0;
reg    inputBuf_0_V_ce0;
wire   [31:0] inputBuf_0_V_q0;
reg   [5:0] inputBuf_0_V_address1;
reg    inputBuf_0_V_ce1;
reg    inputBuf_0_V_we1;
wire   [5:0] inputBuf_1_V_address0;
reg    inputBuf_1_V_ce0;
wire   [31:0] inputBuf_1_V_q0;
reg   [5:0] inputBuf_1_V_address1;
reg    inputBuf_1_V_ce1;
reg    inputBuf_1_V_we1;
wire   [5:0] inputBuf_2_V_address0;
reg    inputBuf_2_V_ce0;
wire   [31:0] inputBuf_2_V_q0;
reg   [5:0] inputBuf_2_V_address1;
reg    inputBuf_2_V_ce1;
reg    inputBuf_2_V_we1;
wire   [5:0] inputBuf_3_V_address0;
reg    inputBuf_3_V_ce0;
wire   [31:0] inputBuf_3_V_q0;
reg   [5:0] inputBuf_3_V_address1;
reg    inputBuf_3_V_ce1;
reg    inputBuf_3_V_we1;
wire   [63:0] zext_ln129_fu_524_p1;
wire   [63:0] zext_ln156_fu_791_p1;
wire   [63:0] zext_ln110_fu_838_p1;
reg   [31:0] read_block_2_fu_94;
wire   [31:0] select_ln105_fu_446_p3;
wire   [31:0] zext_ln160_fu_668_p1;
wire   [31:0] read_block_fu_726_p2;
reg   [31:0] ofm_y_1_i_fu_98;
wire   [31:0] select_ln144_1_fu_780_p3;
reg   [31:0] ap_sig_allocacmp_ofm_y_1_i_load;
reg   [31:0] ofm_x_1_fu_102;
wire   [31:0] ofm_x_fu_580_p2;
reg   [31:0] k_y_1_fu_106;
wire   [31:0] k_y_fu_490_p2;
reg   [31:0] inp_1_fu_110;
wire   [31:0] select_ln144_fu_612_p3;
wire   [31:0] inp_fu_710_p2;
reg   [31:0] k_x_1_fu_114;
wire   [31:0] k_x_fu_549_p2;
reg   [31:0] count_simd_1_fu_118;
wire   [31:0] count_simd_fu_532_p2;
reg   [31:0] current_block_write_5_fu_122;
wire   [31:0] current_block_write_9_fu_826_p3;
wire   [31:0] current_block_write_6_fu_862_p3;
reg   [31:0] current_line_2_fu_126;
wire   [31:0] select_ln160_fu_652_p3;
wire   [31:0] grp_fu_366_p2;
reg   [31:0] counter_internal_blo_fu_130;
wire   [31:0] select_ln172_fu_697_p3;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] trunc_ln321_15_fu_799_p1;
wire   [1:0] trunc_ln321_fu_846_p1;
wire   [31:0] grp_fu_417_p0;
wire   [12:0] grp_fu_417_p1;
wire   [0:0] icmp_ln105_fu_440_p2;
wire   [29:0] trunc_ln128_1_fu_500_p1;
wire   [29:0] trunc_ln128_fu_496_p1;
wire   [29:0] add_ln128_fu_504_p2;
wire   [31:0] shl_ln_fu_510_p3;
wire   [31:0] current_line_in_bloc_fu_518_p2;
wire   [0:0] icmp_ln153_fu_628_p2;
wire   [0:0] icmp_ln153_1_fu_634_p2;
wire   [3:0] trunc_ln105_fu_455_p1;
wire   [3:0] add_ln163_fu_646_p2;
wire   [3:0] read_block_3_fu_660_p3;
wire   [31:0] counter_internal_blo_4_fu_685_p2;
wire   [0:0] icmp_ln172_fu_691_p2;
wire   [11:0] add_ln105_fu_737_p2;
wire   [1:0] trunc_ln124_1_fu_751_p1;
wire   [1:0] add_ln129_1_fu_755_p2;
wire   [1:0] outElem_V_fu_766_p5;
wire   [31:0] current_block_write_7_fu_806_p2;
wire   [0:0] icmp_ln165_fu_812_p2;
wire   [31:0] current_block_write_8_fu_818_p3;
wire   [31:0] current_block_write_fu_850_p2;
wire   [0:0] icmp_ln116_fu_856_p2;
wire    ap_CS_fsm_state10;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op79_load_state7;
reg    ap_enable_operation_79;
reg    ap_enable_state7_pp0_iter0_stage0;
reg    ap_predicate_op167_load_state8;
reg    ap_enable_operation_167;
reg    ap_enable_state8_pp0_iter1_stage0;
reg    ap_predicate_op189_store_state8;
reg    ap_enable_operation_189;
reg    ap_predicate_op216_store_state8;
reg    ap_enable_operation_216;
reg    ap_predicate_op81_load_state7;
reg    ap_enable_operation_81;
reg    ap_predicate_op168_load_state8;
reg    ap_enable_operation_168;
reg    ap_predicate_op187_store_state8;
reg    ap_enable_operation_187;
reg    ap_predicate_op214_store_state8;
reg    ap_enable_operation_214;
reg    ap_predicate_op83_load_state7;
reg    ap_enable_operation_83;
reg    ap_predicate_op169_load_state8;
reg    ap_enable_operation_169;
reg    ap_predicate_op185_store_state8;
reg    ap_enable_operation_185;
reg    ap_predicate_op212_store_state8;
reg    ap_enable_operation_212;
reg    ap_predicate_op85_load_state7;
reg    ap_enable_operation_85;
reg    ap_predicate_op170_load_state8;
reg    ap_enable_operation_170;
reg    ap_predicate_op191_store_state8;
reg    ap_enable_operation_191;
reg    ap_predicate_op218_store_state8;
reg    ap_enable_operation_218;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [43:0] grp_fu_417_p00;
reg    ap_condition_426;
reg    ap_condition_59;
reg    ap_condition_438;
reg    ap_condition_449;
reg    ap_condition_460;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

ConvolutionInputGyd2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
inputBuf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_0_V_address0),
    .ce0(inputBuf_0_V_ce0),
    .q0(inputBuf_0_V_q0),
    .address1(inputBuf_0_V_address1),
    .ce1(inputBuf_0_V_ce1),
    .we1(inputBuf_0_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGyd2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
inputBuf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_1_V_address0),
    .ce0(inputBuf_1_V_ce0),
    .q0(inputBuf_1_V_q0),
    .address1(inputBuf_1_V_address1),
    .ce1(inputBuf_1_V_ce1),
    .we1(inputBuf_1_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGyd2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
inputBuf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_2_V_address0),
    .ce0(inputBuf_2_V_ce0),
    .q0(inputBuf_2_V_q0),
    .address1(inputBuf_2_V_address1),
    .ce1(inputBuf_2_V_ce1),
    .we1(inputBuf_2_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGyd2 #(
    .DataWidth( 32 ),
    .AddressRange( 48 ),
    .AddressWidth( 6 ))
inputBuf_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_3_V_address0),
    .ce0(inputBuf_3_V_ce0),
    .q0(inputBuf_3_V_q0),
    .address1(inputBuf_3_V_address1),
    .ce1(inputBuf_3_V_ce1),
    .we1(inputBuf_3_V_we1),
    .d1(in_V_V_dout)
);

BlackBoxJam_mul_3xdS #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 13 ),
    .dout_WIDTH( 44 ))
BlackBoxJam_mul_3xdS_U246(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_417_p0),
    .din1(grp_fu_417_p1),
    .ce(1'b1),
    .dout(grp_fu_417_p2)
);

BlackBoxJam_mux_4pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
BlackBoxJam_mux_4pcA_U247(
    .din0(inputBuf_0_V_q0),
    .din1(inputBuf_1_V_q0),
    .din2(inputBuf_2_V_q0),
    .din3(inputBuf_3_V_q0),
    .din4(outElem_V_fu_766_p5),
    .dout(outElem_V_fu_766_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state7))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state7)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_538_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        count_simd_1_fu_118 <= count_simd_fu_532_p2;
    end else if ((((icmp_ln135_fu_555_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln138_fu_566_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln141_fu_586_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln138_fu_566_p2 == 1'd1) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln141_fu_586_p2 == 1'd1) & (icmp_ln138_fu_566_p2 == 1'd1) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        count_simd_1_fu_118 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        counter_internal_blo_fu_130 <= select_ln172_fu_697_p3;
    end else if ((((icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln113_fu_378_p2 == 1'd1) & (icmp_ln107_fu_459_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        counter_internal_blo_fu_130 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_reg_1049 == 1'd1) & (icmp_ln107_reg_981 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_block_write_5_fu_122 <= current_block_write_6_fu_862_p3;
    end else if (((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_block_write_5_fu_122 <= current_block_write_9_fu_826_p3;
    end else if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        current_block_write_5_fu_122 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_378_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_2_fu_126 <= grp_fu_366_p2;
    end else if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (1'd1 == and_ln153_fu_640_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_2_fu_126 <= select_ln160_fu_652_p3;
    end else if ((((icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln113_fu_378_p2 == 1'd1) & (icmp_ln107_fu_459_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        current_line_2_fu_126 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_423_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_i_reg_312 <= i_fu_743_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_i_reg_312 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_423_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_301 <= add_ln104_fu_428_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten_reg_301 <= 44'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_1_fu_110 <= inp_fu_710_p2;
    end else if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln141_fu_586_p2 == 1'd1) & (icmp_ln138_fu_566_p2 == 1'd1) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_1_fu_110 <= select_ln144_fu_612_p3;
    end else if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inp_1_fu_110 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_fu_555_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_x_1_fu_114 <= k_x_fu_549_p2;
    end else if ((((icmp_ln138_fu_566_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln141_fu_586_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln138_fu_566_p2 == 1'd1) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln141_fu_586_p2 == 1'd1) & (icmp_ln138_fu_566_p2 == 1'd1) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_x_1_fu_114 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln138_fu_566_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_y_1_fu_106 <= k_y_fu_490_p2;
    end else if ((((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln138_fu_566_p2 == 1'd1) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_y_1_fu_106 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln141_fu_586_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln138_fu_566_p2 == 1'd1) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ofm_x_1_fu_102 <= ofm_x_fu_580_p2;
    end else if ((((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln141_fu_586_p2 == 1'd1) & (icmp_ln138_fu_566_p2 == 1'd1) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        ofm_x_1_fu_102 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_985 == 1'd1) & (icmp_ln141_reg_1026 == 1'd1) & (icmp_ln138_reg_1022 == 1'd1) & (icmp_ln135_reg_1018 == 1'd1) & (icmp_ln132_reg_1014 == 1'd1) & (icmp_ln107_reg_981 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ofm_y_1_i_fu_98 <= select_ln144_1_fu_780_p3;
    end else if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ofm_y_1_i_fu_98 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln113_fu_378_p2 == 1'd1) & (icmp_ln107_fu_459_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        read_block_2_fu_94 <= read_block_fu_726_p2;
    end else if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (1'd1 == and_ln153_fu_640_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        read_block_2_fu_94 <= zext_ln160_fu_668_p1;
    end else if ((((icmp_ln113_fu_378_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'd0 == and_ln153_fu_640_p2) & (icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        read_block_2_fu_94 <= select_ln105_fu_446_p3;
    end else if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        read_block_2_fu_94 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln153_reg_1040 <= and_ln153_fu_640_p2;
        icmp_ln123_reg_985 <= icmp_ln123_fu_468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bound_reg_967 <= grp_fu_417_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_423_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln107_reg_981 <= icmp_ln107_fu_459_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln107_reg_981_pp0_iter1_reg <= icmp_ln107_reg_981;
        icmp_ln123_reg_985_pp0_iter1_reg <= icmp_ln123_reg_985;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln113_reg_1049 <= icmp_ln113_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln123_fu_468_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln132_reg_1014 <= icmp_ln132_fu_538_p2;
        trunc_ln124_reg_989 <= trunc_ln124_fu_486_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln135_reg_1018 <= icmp_ln135_fu_555_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln138_reg_1022 <= icmp_ln138_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln138_fu_566_p2 == 1'd1) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln141_reg_1026 <= icmp_ln141_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln141_fu_586_p2 == 1'd1) & (icmp_ln138_fu_566_p2 == 1'd1) & (icmp_ln135_fu_555_p2 == 1'd1) & (icmp_ln132_fu_538_p2 == 1'd1) & (icmp_ln123_fu_468_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln144_reg_1035 <= icmp_ln144_fu_606_p2;
        ofm_y_reg_1030 <= ofm_y_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (1'd1 == and_ln153_fu_640_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln160_reg_1044 <= icmp_ln160_fu_372_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read_reg_957 <= numReps_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_985 == 1'd1) & (icmp_ln107_reg_981 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outElem_V_reg_1058 <= outElem_V_fu_766_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln107_fu_459_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (1'd1 == and_ln153_fu_640_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_390 <= current_line_2_fu_126;
    end
end

always @ (*) begin
    if ((icmp_ln104_fu_423_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln123_reg_985 == 1'd1) & (icmp_ln141_reg_1026 == 1'd1) & (icmp_ln138_reg_1022 == 1'd1) & (icmp_ln135_reg_1018 == 1'd1) & (icmp_ln132_reg_1014 == 1'd1) & (icmp_ln107_reg_981 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ofm_y_1_i_load = select_ln144_1_fu_780_p3;
    end else begin
        ap_sig_allocacmp_ofm_y_1_i_load = ofm_y_1_i_fu_98;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln107_reg_981 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_981 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op177_read_state8 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_59)) begin
        if (((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd0))) begin
            inputBuf_0_V_address1 = zext_ln110_fu_838_p1;
        end else if ((1'b1 == ap_condition_426)) begin
            inputBuf_0_V_address1 = zext_ln156_fu_791_p1;
        end else begin
            inputBuf_0_V_address1 = 'bx;
        end
    end else begin
        inputBuf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_0_V_ce0 = 1'b1;
    end else begin
        inputBuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_0_V_ce1 = 1'b1;
    end else begin
        inputBuf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_0_V_we1 = 1'b1;
    end else begin
        inputBuf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_59)) begin
        if (((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd1))) begin
            inputBuf_1_V_address1 = zext_ln110_fu_838_p1;
        end else if ((1'b1 == ap_condition_438)) begin
            inputBuf_1_V_address1 = zext_ln156_fu_791_p1;
        end else begin
            inputBuf_1_V_address1 = 'bx;
        end
    end else begin
        inputBuf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_1_V_ce0 = 1'b1;
    end else begin
        inputBuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_1_V_ce1 = 1'b1;
    end else begin
        inputBuf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_1_V_we1 = 1'b1;
    end else begin
        inputBuf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_59)) begin
        if (((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd2))) begin
            inputBuf_2_V_address1 = zext_ln110_fu_838_p1;
        end else if ((1'b1 == ap_condition_449)) begin
            inputBuf_2_V_address1 = zext_ln156_fu_791_p1;
        end else begin
            inputBuf_2_V_address1 = 'bx;
        end
    end else begin
        inputBuf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_2_V_ce0 = 1'b1;
    end else begin
        inputBuf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_2_V_ce1 = 1'b1;
    end else begin
        inputBuf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_2_V_we1 = 1'b1;
    end else begin
        inputBuf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_59)) begin
        if (((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd3))) begin
            inputBuf_3_V_address1 = zext_ln110_fu_838_p1;
        end else if ((1'b1 == ap_condition_460)) begin
            inputBuf_3_V_address1 = zext_ln156_fu_791_p1;
        end else begin
            inputBuf_3_V_address1 = 'bx;
        end
    end else begin
        inputBuf_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_3_V_ce0 = 1'b1;
    end else begin
        inputBuf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_3_V_ce1 = 1'b1;
    end else begin
        inputBuf_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_3_V_we1 = 1'b1;
    end else begin
        inputBuf_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_blk_n = numReps_empty_n;
    end else begin
        numReps_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_blk_n = numReps_out_full_n;
    end else begin
        numReps_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_write = 1'b1;
    end else begin
        numReps_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read = 1'b1;
    end else begin
        numReps_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_981_pp0_iter1_reg == 1'd0) & (icmp_ln123_reg_985_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op226_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln104_fu_423_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln104_fu_423_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln104_fu_428_p2 = (indvar_flatten_reg_301 + 44'd1);

assign add_ln105_fu_737_p2 = (i_0_i_reg_312 + 12'd1);

assign add_ln128_fu_504_p2 = (trunc_ln128_1_fu_500_p1 + trunc_ln128_fu_496_p1);

assign add_ln129_1_fu_755_p2 = (2'd1 + trunc_ln124_1_fu_751_p1);

assign add_ln163_fu_646_p2 = (trunc_ln105_fu_455_p1 + 4'd1);

assign and_ln153_fu_640_p2 = (icmp_ln153_fu_628_p2 & icmp_ln153_1_fu_634_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op226_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op177_read_state8 == 1'b1)) | ((icmp_ln107_reg_981 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op226_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op177_read_state8 == 1'b1)) | ((icmp_ln107_reg_981 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (ap_predicate_op226_write_state9 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op177_read_state8 == 1'b1)) | ((icmp_ln107_reg_981 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp0_stage0_iter1 = (((in_V_V_empty_n == 1'b0) & (ap_predicate_op177_read_state8 == 1'b1)) | ((icmp_ln107_reg_981 == 1'd1) & (in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state9_pp0_stage0_iter2 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op226_write_state9 == 1'b1));
end

always @ (*) begin
    ap_condition_426 = ((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd0));
end

always @ (*) begin
    ap_condition_438 = ((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd1));
end

always @ (*) begin
    ap_condition_449 = ((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd2));
end

always @ (*) begin
    ap_condition_460 = ((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd3));
end

always @ (*) begin
    ap_condition_59 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_167 = (ap_predicate_op167_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_168 = (ap_predicate_op168_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_169 = (ap_predicate_op169_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_170 = (ap_predicate_op170_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_185 = (ap_predicate_op185_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_187 = (ap_predicate_op187_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_189 = (ap_predicate_op189_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_191 = (ap_predicate_op191_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_212 = (ap_predicate_op212_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_214 = (ap_predicate_op214_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_216 = (ap_predicate_op216_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_218 = (ap_predicate_op218_store_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_79 = (ap_predicate_op79_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_81 = (ap_predicate_op81_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_83 = (ap_predicate_op83_load_state7 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_85 = (ap_predicate_op85_load_state7 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state7_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state8_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op167_load_state8 = ((icmp_ln123_reg_985 == 1'd1) & (icmp_ln107_reg_981 == 1'd0));
end

always @ (*) begin
    ap_predicate_op168_load_state8 = ((icmp_ln123_reg_985 == 1'd1) & (icmp_ln107_reg_981 == 1'd0));
end

always @ (*) begin
    ap_predicate_op169_load_state8 = ((icmp_ln123_reg_985 == 1'd1) & (icmp_ln107_reg_981 == 1'd0));
end

always @ (*) begin
    ap_predicate_op170_load_state8 = ((icmp_ln123_reg_985 == 1'd1) & (icmp_ln107_reg_981 == 1'd0));
end

always @ (*) begin
    ap_predicate_op177_read_state8 = ((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0));
end

always @ (*) begin
    ap_predicate_op185_store_state8 = ((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op187_store_state8 = ((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op189_store_state8 = ((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op191_store_state8 = ((1'd1 == and_ln153_reg_1040) & (icmp_ln107_reg_981 == 1'd0) & (trunc_ln321_15_fu_799_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op212_store_state8 = ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op214_store_state8 = ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op216_store_state8 = ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op218_store_state8 = ((icmp_ln107_reg_981 == 1'd1) & (trunc_ln321_fu_846_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op226_write_state9 = ((icmp_ln107_reg_981_pp0_iter1_reg == 1'd0) & (icmp_ln123_reg_985_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op79_load_state7 = ((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln123_fu_468_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op81_load_state7 = ((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln123_fu_468_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op83_load_state7 = ((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln123_fu_468_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op85_load_state7 = ((icmp_ln107_fu_459_p2 == 1'd0) & (icmp_ln104_fu_423_p2 == 1'd0) & (icmp_ln123_fu_468_p2 == 1'd1));
end

assign count_simd_fu_532_p2 = (32'd1 + count_simd_1_fu_118);

assign counter_internal_blo_4_fu_685_p2 = (counter_internal_blo_fu_130 + 32'd1);

assign current_block_write_6_fu_862_p3 = ((icmp_ln116_fu_856_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_fu_850_p2);

assign current_block_write_7_fu_806_p2 = (current_block_write_5_fu_122 + 32'd1);

assign current_block_write_8_fu_818_p3 = ((icmp_ln165_fu_812_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_7_fu_806_p2);

assign current_block_write_9_fu_826_p3 = ((icmp_ln160_reg_1044[0:0] === 1'b1) ? current_block_write_8_fu_818_p3 : current_block_write_5_fu_122);

assign current_block_write_fu_850_p2 = (current_block_write_5_fu_122 + 32'd1);

assign current_line_in_bloc_fu_518_p2 = (shl_ln_fu_510_p3 + count_simd_1_fu_118);

assign grp_fu_366_p2 = (current_line_2_fu_126 + 32'd1);

assign grp_fu_417_p0 = grp_fu_417_p00;

assign grp_fu_417_p00 = numReps_read_reg_957;

assign grp_fu_417_p1 = 44'd3744;

assign i_fu_743_p3 = ((icmp_ln105_fu_440_p2[0:0] === 1'b1) ? 12'd1 : add_ln105_fu_737_p2);

assign icmp_ln104_fu_423_p2 = ((indvar_flatten_reg_301 == bound_reg_967) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_440_p2 = ((i_0_i_reg_312 == 12'd3744) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_459_p2 = ((inp_1_fu_110 < 32'd144) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_378_p2 = ((grp_fu_366_p2 == 32'd48) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_856_p2 = ((current_block_write_fu_850_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_468_p2 = ((counter_internal_blo_fu_130 < 32'd359) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_538_p2 = ((count_simd_fu_532_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_555_p2 = ((k_x_fu_549_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_566_p2 = ((k_y_fu_490_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_586_p2 = ((ofm_x_fu_580_p2 == 32'd10) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_606_p2 = ((ofm_y_fu_600_p2 == 32'd10) ? 1'b1 : 1'b0);

assign icmp_ln153_1_fu_634_p2 = ((select_ln105_fu_446_p3 < 32'd12) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_628_p2 = ((counter_internal_blo_fu_130 < 32'd47) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_372_p2 = ((grp_fu_366_p2 == 32'd48) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_812_p2 = ((current_block_write_7_fu_806_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_691_p2 = ((counter_internal_blo_4_fu_685_p2 == 32'd359) ? 1'b1 : 1'b0);

assign inp_fu_710_p2 = (inp_1_fu_110 + 32'd1);

assign inputBuf_0_V_address0 = zext_ln129_fu_524_p1;

assign inputBuf_1_V_address0 = zext_ln129_fu_524_p1;

assign inputBuf_2_V_address0 = zext_ln129_fu_524_p1;

assign inputBuf_3_V_address0 = zext_ln129_fu_524_p1;

assign k_x_fu_549_p2 = (k_x_1_fu_114 + 32'd1);

assign k_y_fu_490_p2 = (32'd1 + k_y_1_fu_106);

assign numReps_out_din = numReps_dout;

assign ofm_x_fu_580_p2 = (ofm_x_1_fu_102 + 32'd1);

assign ofm_y_fu_600_p2 = (ap_sig_allocacmp_ofm_y_1_i_load + 32'd1);

assign outElem_V_fu_766_p5 = (add_ln129_1_fu_755_p2 + trunc_ln124_reg_989);

assign out_V_V_din = outElem_V_reg_1058;

assign read_block_3_fu_660_p3 = ((icmp_ln160_fu_372_p2[0:0] === 1'b1) ? add_ln163_fu_646_p2 : trunc_ln105_fu_455_p1);

assign read_block_fu_726_p2 = (select_ln105_fu_446_p3 + 32'd1);

assign select_ln105_fu_446_p3 = ((icmp_ln105_fu_440_p2[0:0] === 1'b1) ? 32'd0 : read_block_2_fu_94);

assign select_ln144_1_fu_780_p3 = ((icmp_ln144_reg_1035[0:0] === 1'b1) ? 32'd0 : ofm_y_reg_1030);

assign select_ln144_fu_612_p3 = ((icmp_ln144_fu_606_p2[0:0] === 1'b1) ? 32'd0 : inp_1_fu_110);

assign select_ln160_fu_652_p3 = ((icmp_ln160_fu_372_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_366_p2);

assign select_ln172_fu_697_p3 = ((icmp_ln172_fu_691_p2[0:0] === 1'b1) ? 32'd0 : counter_internal_blo_4_fu_685_p2);

assign shl_ln_fu_510_p3 = {{add_ln128_fu_504_p2}, {2'd0}};

assign trunc_ln105_fu_455_p1 = select_ln105_fu_446_p3[3:0];

assign trunc_ln124_1_fu_751_p1 = current_block_write_5_fu_122[1:0];

assign trunc_ln124_fu_486_p1 = k_y_1_fu_106[1:0];

assign trunc_ln128_1_fu_500_p1 = ofm_x_1_fu_102[29:0];

assign trunc_ln128_fu_496_p1 = k_x_1_fu_114[29:0];

assign trunc_ln321_15_fu_799_p1 = current_block_write_5_fu_122[1:0];

assign trunc_ln321_fu_846_p1 = current_block_write_5_fu_122[1:0];

assign zext_ln110_fu_838_p1 = reg_390;

assign zext_ln129_fu_524_p1 = current_line_in_bloc_fu_518_p2;

assign zext_ln156_fu_791_p1 = reg_390;

assign zext_ln160_fu_668_p1 = read_block_3_fu_660_p3;

endmodule //ConvolutionInputGene_5
