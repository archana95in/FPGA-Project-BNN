// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ConvolutionInputGene_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        numReps_dout,
        numReps_empty_n,
        numReps_read,
        numReps_out_din,
        numReps_out_full_n,
        numReps_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] numReps_dout;
input   numReps_empty_n;
output   numReps_read;
output  [31:0] numReps_out_din;
input   numReps_out_full_n;
output   numReps_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_read;
reg out_V_V_write;
reg numReps_read;
reg numReps_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln107_reg_994;
reg   [0:0] and_ln153_reg_1053;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln107_reg_994_pp0_iter1_reg;
reg   [0:0] icmp_ln123_reg_998;
reg   [0:0] icmp_ln123_reg_998_pp0_iter1_reg;
reg    numReps_blk_n;
reg    numReps_out_blk_n;
reg   [40:0] indvar_flatten_reg_303;
reg   [8:0] i_0_i_reg_314;
reg   [31:0] reg_392;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op171_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op220_write_state5;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln104_fu_440_p2;
wire   [0:0] icmp_ln107_fu_476_p2;
wire   [0:0] and_ln153_fu_657_p2;
reg   [31:0] numReps_read_reg_974;
reg    ap_block_state1;
wire   [40:0] bound_fu_434_p2;
reg   [40:0] bound_reg_980;
wire    ap_CS_fsm_state2;
wire   [40:0] add_ln104_fu_445_p2;
wire   [0:0] icmp_ln123_fu_485_p2;
wire   [1:0] trunc_ln124_fu_503_p1;
reg   [1:0] trunc_ln124_reg_1002;
wire   [0:0] icmp_ln132_fu_555_p2;
reg   [0:0] icmp_ln132_reg_1027;
wire   [0:0] icmp_ln135_fu_572_p2;
reg   [0:0] icmp_ln135_reg_1031;
wire   [0:0] icmp_ln138_fu_583_p2;
reg   [0:0] icmp_ln138_reg_1035;
wire   [0:0] icmp_ln141_fu_603_p2;
reg   [0:0] icmp_ln141_reg_1039;
wire   [31:0] ofm_y_fu_617_p2;
reg   [31:0] ofm_y_reg_1043;
wire   [0:0] icmp_ln144_fu_623_p2;
reg   [0:0] icmp_ln144_reg_1048;
wire   [0:0] icmp_ln160_fu_374_p2;
reg   [0:0] icmp_ln160_reg_1057;
wire   [0:0] icmp_ln113_fu_380_p2;
reg   [0:0] icmp_ln113_reg_1062;
wire   [8:0] i_fu_760_p3;
wire   [31:0] outElem_V_fu_783_p6;
reg   [31:0] outElem_V_reg_1071;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire   [4:0] inputBuf_0_V_address0;
reg    inputBuf_0_V_ce0;
wire   [31:0] inputBuf_0_V_q0;
reg   [4:0] inputBuf_0_V_address1;
reg    inputBuf_0_V_ce1;
reg    inputBuf_0_V_we1;
wire   [4:0] inputBuf_1_V_address0;
reg    inputBuf_1_V_ce0;
wire   [31:0] inputBuf_1_V_q0;
reg   [4:0] inputBuf_1_V_address1;
reg    inputBuf_1_V_ce1;
reg    inputBuf_1_V_we1;
wire   [4:0] inputBuf_2_V_address0;
reg    inputBuf_2_V_ce0;
wire   [31:0] inputBuf_2_V_q0;
reg   [4:0] inputBuf_2_V_address1;
reg    inputBuf_2_V_ce1;
reg    inputBuf_2_V_we1;
wire   [4:0] inputBuf_3_V_address0;
reg    inputBuf_3_V_ce0;
wire   [31:0] inputBuf_3_V_q0;
reg   [4:0] inputBuf_3_V_address1;
reg    inputBuf_3_V_ce1;
reg    inputBuf_3_V_we1;
wire   [63:0] zext_ln129_fu_541_p1;
wire   [63:0] zext_ln156_fu_808_p1;
wire   [63:0] zext_ln110_fu_855_p1;
reg   [31:0] read_block_4_fu_96;
wire   [31:0] select_ln105_fu_463_p3;
wire   [31:0] zext_ln160_fu_685_p1;
wire   [31:0] read_block_fu_743_p2;
reg   [31:0] ofm_y_1_i_fu_100;
wire   [31:0] select_ln144_2_fu_797_p3;
reg   [31:0] ap_sig_allocacmp_ofm_y_1_i_load;
reg   [31:0] ofm_x_2_fu_104;
wire   [31:0] ofm_x_fu_597_p2;
reg   [31:0] k_y_2_fu_108;
wire   [31:0] k_y_fu_507_p2;
reg   [31:0] inp_2_fu_112;
wire   [31:0] select_ln144_fu_629_p3;
wire   [31:0] inp_fu_727_p2;
reg   [31:0] k_x_2_fu_116;
wire   [31:0] k_x_fu_566_p2;
reg   [31:0] count_simd_2_fu_120;
wire   [31:0] count_simd_fu_549_p2;
reg   [31:0] current_block_write_10_fu_124;
wire   [31:0] current_block_write_14_fu_843_p3;
wire   [31:0] current_block_write_11_fu_879_p3;
reg   [31:0] current_line_4_fu_128;
wire   [31:0] select_ln160_fu_669_p3;
wire   [31:0] grp_fu_368_p2;
reg   [31:0] counter_internal_blo_fu_132;
wire   [31:0] select_ln172_fu_714_p3;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] trunc_ln321_16_fu_816_p1;
wire   [1:0] trunc_ln321_fu_863_p1;
wire   [38:0] tmp_fu_423_p3;
wire   [40:0] p_shl_fu_416_p3;
wire   [40:0] p_shl70_fu_430_p1;
wire   [0:0] icmp_ln105_fu_457_p2;
wire   [29:0] trunc_ln128_2_fu_517_p1;
wire   [29:0] trunc_ln128_fu_513_p1;
wire   [29:0] add_ln128_fu_521_p2;
wire   [31:0] shl_ln_fu_527_p3;
wire   [31:0] current_line_in_bloc_fu_535_p2;
wire   [0:0] icmp_ln153_fu_645_p2;
wire   [0:0] icmp_ln153_2_fu_651_p2;
wire   [2:0] trunc_ln105_fu_472_p1;
wire   [2:0] add_ln163_fu_663_p2;
wire   [2:0] read_block_5_fu_677_p3;
wire   [31:0] counter_internal_blo_8_fu_702_p2;
wire   [0:0] icmp_ln172_fu_708_p2;
wire   [8:0] add_ln105_fu_754_p2;
wire   [1:0] trunc_ln124_2_fu_768_p1;
wire   [1:0] add_ln129_2_fu_772_p2;
wire   [1:0] outElem_V_fu_783_p5;
wire   [31:0] current_block_write_12_fu_823_p2;
wire   [0:0] icmp_ln165_fu_829_p2;
wire   [31:0] current_block_write_13_fu_835_p3;
wire   [31:0] current_block_write_fu_867_p2;
wire   [0:0] icmp_ln116_fu_873_p2;
wire    ap_CS_fsm_state6;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op73_load_state3;
reg    ap_enable_operation_73;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_predicate_op161_load_state4;
reg    ap_enable_operation_161;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op183_store_state4;
reg    ap_enable_operation_183;
reg    ap_predicate_op210_store_state4;
reg    ap_enable_operation_210;
reg    ap_predicate_op75_load_state3;
reg    ap_enable_operation_75;
reg    ap_predicate_op162_load_state4;
reg    ap_enable_operation_162;
reg    ap_predicate_op181_store_state4;
reg    ap_enable_operation_181;
reg    ap_predicate_op208_store_state4;
reg    ap_enable_operation_208;
reg    ap_predicate_op77_load_state3;
reg    ap_enable_operation_77;
reg    ap_predicate_op163_load_state4;
reg    ap_enable_operation_163;
reg    ap_predicate_op179_store_state4;
reg    ap_enable_operation_179;
reg    ap_predicate_op206_store_state4;
reg    ap_enable_operation_206;
reg    ap_predicate_op79_load_state3;
reg    ap_enable_operation_79;
reg    ap_predicate_op164_load_state4;
reg    ap_enable_operation_164;
reg    ap_predicate_op185_store_state4;
reg    ap_enable_operation_185;
reg    ap_predicate_op212_store_state4;
reg    ap_enable_operation_212;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_415;
reg    ap_condition_55;
reg    ap_condition_427;
reg    ap_condition_438;
reg    ap_condition_449;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

ConvolutionInputGFfa #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
inputBuf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_0_V_address0),
    .ce0(inputBuf_0_V_ce0),
    .q0(inputBuf_0_V_q0),
    .address1(inputBuf_0_V_address1),
    .ce1(inputBuf_0_V_ce1),
    .we1(inputBuf_0_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGFfa #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
inputBuf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_1_V_address0),
    .ce0(inputBuf_1_V_ce0),
    .q0(inputBuf_1_V_q0),
    .address1(inputBuf_1_V_address1),
    .ce1(inputBuf_1_V_ce1),
    .we1(inputBuf_1_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGFfa #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
inputBuf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_2_V_address0),
    .ce0(inputBuf_2_V_ce0),
    .q0(inputBuf_2_V_q0),
    .address1(inputBuf_2_V_address1),
    .ce1(inputBuf_2_V_ce1),
    .we1(inputBuf_2_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGFfa #(
    .DataWidth( 32 ),
    .AddressRange( 20 ),
    .AddressWidth( 5 ))
inputBuf_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_3_V_address0),
    .ce0(inputBuf_3_V_ce0),
    .q0(inputBuf_3_V_q0),
    .address1(inputBuf_3_V_address1),
    .ce1(inputBuf_3_V_ce1),
    .we1(inputBuf_3_V_we1),
    .d1(in_V_V_dout)
);

BlackBoxJam_mux_4pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
BlackBoxJam_mux_4pcA_U311(
    .din0(inputBuf_0_V_q0),
    .din1(inputBuf_1_V_q0),
    .din2(inputBuf_2_V_q0),
    .din3(inputBuf_3_V_q0),
    .din4(outElem_V_fu_783_p5),
    .dout(outElem_V_fu_783_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_555_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        count_simd_2_fu_120 <= count_simd_fu_549_p2;
    end else if ((((icmp_ln135_fu_572_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln138_fu_583_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln141_fu_603_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln138_fu_583_p2 == 1'd1) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln141_fu_603_p2 == 1'd1) & (icmp_ln138_fu_583_p2 == 1'd1) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        count_simd_2_fu_120 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        counter_internal_blo_fu_132 <= select_ln172_fu_714_p3;
    end else if ((((icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln113_fu_380_p2 == 1'd1) & (icmp_ln107_fu_476_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        counter_internal_blo_fu_132 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_reg_1062 == 1'd1) & (icmp_ln107_reg_994 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_block_write_10_fu_124 <= current_block_write_11_fu_879_p3;
    end else if (((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_block_write_10_fu_124 <= current_block_write_14_fu_843_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        current_block_write_10_fu_124 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_380_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_4_fu_128 <= grp_fu_368_p2;
    end else if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (1'd1 == and_ln153_fu_657_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_4_fu_128 <= select_ln160_fu_669_p3;
    end else if ((((icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln113_fu_380_p2 == 1'd1) & (icmp_ln107_fu_476_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        current_line_4_fu_128 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_440_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_i_reg_314 <= i_fu_760_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_0_i_reg_314 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_440_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_303 <= add_ln104_fu_445_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_303 <= 41'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_2_fu_112 <= inp_fu_727_p2;
    end else if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln141_fu_603_p2 == 1'd1) & (icmp_ln138_fu_583_p2 == 1'd1) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_2_fu_112 <= select_ln144_fu_629_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inp_2_fu_112 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_fu_572_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_x_2_fu_116 <= k_x_fu_566_p2;
    end else if ((((icmp_ln138_fu_583_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln141_fu_603_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln138_fu_583_p2 == 1'd1) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln141_fu_603_p2 == 1'd1) & (icmp_ln138_fu_583_p2 == 1'd1) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_x_2_fu_116 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln138_fu_583_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_y_2_fu_108 <= k_y_fu_507_p2;
    end else if ((((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln138_fu_583_p2 == 1'd1) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_y_2_fu_108 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln141_fu_603_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln138_fu_583_p2 == 1'd1) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ofm_x_2_fu_104 <= ofm_x_fu_597_p2;
    end else if ((((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln141_fu_603_p2 == 1'd1) & (icmp_ln138_fu_583_p2 == 1'd1) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        ofm_x_2_fu_104 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_998 == 1'd1) & (icmp_ln141_reg_1039 == 1'd1) & (icmp_ln138_reg_1035 == 1'd1) & (icmp_ln135_reg_1031 == 1'd1) & (icmp_ln132_reg_1027 == 1'd1) & (icmp_ln107_reg_994 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ofm_y_1_i_fu_100 <= select_ln144_2_fu_797_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ofm_y_1_i_fu_100 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln113_fu_380_p2 == 1'd1) & (icmp_ln107_fu_476_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        read_block_4_fu_96 <= read_block_fu_743_p2;
    end else if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (1'd1 == and_ln153_fu_657_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        read_block_4_fu_96 <= zext_ln160_fu_685_p1;
    end else if ((((icmp_ln113_fu_380_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'd0 == and_ln153_fu_657_p2) & (icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        read_block_4_fu_96 <= select_ln105_fu_463_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        read_block_4_fu_96 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln153_reg_1053 <= and_ln153_fu_657_p2;
        icmp_ln123_reg_998 <= icmp_ln123_fu_485_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_980[40 : 7] <= bound_fu_434_p2[40 : 7];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_440_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln107_reg_994 <= icmp_ln107_fu_476_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln107_reg_994_pp0_iter1_reg <= icmp_ln107_reg_994;
        icmp_ln123_reg_998_pp0_iter1_reg <= icmp_ln123_reg_998;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln113_reg_1062 <= icmp_ln113_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln123_fu_485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln132_reg_1027 <= icmp_ln132_fu_555_p2;
        trunc_ln124_reg_1002 <= trunc_ln124_fu_503_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln135_reg_1031 <= icmp_ln135_fu_572_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln138_reg_1035 <= icmp_ln138_fu_583_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln138_fu_583_p2 == 1'd1) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln141_reg_1039 <= icmp_ln141_fu_603_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln141_fu_603_p2 == 1'd1) & (icmp_ln138_fu_583_p2 == 1'd1) & (icmp_ln135_fu_572_p2 == 1'd1) & (icmp_ln132_fu_555_p2 == 1'd1) & (icmp_ln123_fu_485_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln144_reg_1048 <= icmp_ln144_fu_623_p2;
        ofm_y_reg_1043 <= ofm_y_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (1'd1 == and_ln153_fu_657_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln160_reg_1057 <= icmp_ln160_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read_reg_974 <= numReps_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_998 == 1'd1) & (icmp_ln107_reg_994 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outElem_V_reg_1071 <= outElem_V_fu_783_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln107_fu_476_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (1'd1 == and_ln153_fu_657_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_392 <= current_line_4_fu_128;
    end
end

always @ (*) begin
    if ((icmp_ln104_fu_440_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln123_reg_998 == 1'd1) & (icmp_ln141_reg_1039 == 1'd1) & (icmp_ln138_reg_1035 == 1'd1) & (icmp_ln135_reg_1031 == 1'd1) & (icmp_ln132_reg_1027 == 1'd1) & (icmp_ln107_reg_994 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ofm_y_1_i_load = select_ln144_2_fu_797_p3;
    end else begin
        ap_sig_allocacmp_ofm_y_1_i_load = ofm_y_1_i_fu_100;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln107_reg_994 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op171_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_994 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_55)) begin
        if (((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd0))) begin
            inputBuf_0_V_address1 = zext_ln110_fu_855_p1;
        end else if ((1'b1 == ap_condition_415)) begin
            inputBuf_0_V_address1 = zext_ln156_fu_808_p1;
        end else begin
            inputBuf_0_V_address1 = 'bx;
        end
    end else begin
        inputBuf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_0_V_ce0 = 1'b1;
    end else begin
        inputBuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_0_V_ce1 = 1'b1;
    end else begin
        inputBuf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_0_V_we1 = 1'b1;
    end else begin
        inputBuf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_55)) begin
        if (((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd1))) begin
            inputBuf_1_V_address1 = zext_ln110_fu_855_p1;
        end else if ((1'b1 == ap_condition_427)) begin
            inputBuf_1_V_address1 = zext_ln156_fu_808_p1;
        end else begin
            inputBuf_1_V_address1 = 'bx;
        end
    end else begin
        inputBuf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_1_V_ce0 = 1'b1;
    end else begin
        inputBuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_1_V_ce1 = 1'b1;
    end else begin
        inputBuf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_1_V_we1 = 1'b1;
    end else begin
        inputBuf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_55)) begin
        if (((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd2))) begin
            inputBuf_2_V_address1 = zext_ln110_fu_855_p1;
        end else if ((1'b1 == ap_condition_438)) begin
            inputBuf_2_V_address1 = zext_ln156_fu_808_p1;
        end else begin
            inputBuf_2_V_address1 = 'bx;
        end
    end else begin
        inputBuf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_2_V_ce0 = 1'b1;
    end else begin
        inputBuf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_2_V_ce1 = 1'b1;
    end else begin
        inputBuf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_2_V_we1 = 1'b1;
    end else begin
        inputBuf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_55)) begin
        if (((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd3))) begin
            inputBuf_3_V_address1 = zext_ln110_fu_855_p1;
        end else if ((1'b1 == ap_condition_449)) begin
            inputBuf_3_V_address1 = zext_ln156_fu_808_p1;
        end else begin
            inputBuf_3_V_address1 = 'bx;
        end
    end else begin
        inputBuf_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_3_V_ce0 = 1'b1;
    end else begin
        inputBuf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_3_V_ce1 = 1'b1;
    end else begin
        inputBuf_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_3_V_we1 = 1'b1;
    end else begin
        inputBuf_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_blk_n = numReps_empty_n;
    end else begin
        numReps_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_blk_n = numReps_out_full_n;
    end else begin
        numReps_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_write = 1'b1;
    end else begin
        numReps_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read = 1'b1;
    end else begin
        numReps_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_994_pp0_iter1_reg == 1'd0) & (icmp_ln123_reg_998_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op220_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln104_fu_440_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln104_fu_440_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln104_fu_445_p2 = (indvar_flatten_reg_303 + 41'd1);

assign add_ln105_fu_754_p2 = (i_0_i_reg_314 + 9'd1);

assign add_ln128_fu_521_p2 = (trunc_ln128_2_fu_517_p1 + trunc_ln128_fu_513_p1);

assign add_ln129_2_fu_772_p2 = (2'd1 + trunc_ln124_2_fu_768_p1);

assign add_ln163_fu_663_p2 = (trunc_ln105_fu_472_p1 + 3'd1);

assign and_ln153_fu_657_p2 = (icmp_ln153_fu_645_p2 & icmp_ln153_2_fu_651_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op220_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op171_read_state4 == 1'b1)) | ((icmp_ln107_reg_994 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op220_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op171_read_state4 == 1'b1)) | ((icmp_ln107_reg_994 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (ap_predicate_op220_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op171_read_state4 == 1'b1)) | ((icmp_ln107_reg_994 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((in_V_V_empty_n == 1'b0) & (ap_predicate_op171_read_state4 == 1'b1)) | ((icmp_ln107_reg_994 == 1'd1) & (in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op220_write_state5 == 1'b1));
end

always @ (*) begin
    ap_condition_415 = ((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd0));
end

always @ (*) begin
    ap_condition_427 = ((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd1));
end

always @ (*) begin
    ap_condition_438 = ((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd2));
end

always @ (*) begin
    ap_condition_449 = ((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd3));
end

always @ (*) begin
    ap_condition_55 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_161 = (ap_predicate_op161_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_162 = (ap_predicate_op162_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_163 = (ap_predicate_op163_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_164 = (ap_predicate_op164_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_179 = (ap_predicate_op179_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_181 = (ap_predicate_op181_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_183 = (ap_predicate_op183_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_185 = (ap_predicate_op185_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_206 = (ap_predicate_op206_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_208 = (ap_predicate_op208_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_210 = (ap_predicate_op210_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_212 = (ap_predicate_op212_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_73 = (ap_predicate_op73_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_75 = (ap_predicate_op75_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_77 = (ap_predicate_op77_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_79 = (ap_predicate_op79_load_state3 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op161_load_state4 = ((icmp_ln123_reg_998 == 1'd1) & (icmp_ln107_reg_994 == 1'd0));
end

always @ (*) begin
    ap_predicate_op162_load_state4 = ((icmp_ln123_reg_998 == 1'd1) & (icmp_ln107_reg_994 == 1'd0));
end

always @ (*) begin
    ap_predicate_op163_load_state4 = ((icmp_ln123_reg_998 == 1'd1) & (icmp_ln107_reg_994 == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_load_state4 = ((icmp_ln123_reg_998 == 1'd1) & (icmp_ln107_reg_994 == 1'd0));
end

always @ (*) begin
    ap_predicate_op171_read_state4 = ((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0));
end

always @ (*) begin
    ap_predicate_op179_store_state4 = ((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op181_store_state4 = ((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op183_store_state4 = ((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op185_store_state4 = ((1'd1 == and_ln153_reg_1053) & (icmp_ln107_reg_994 == 1'd0) & (trunc_ln321_16_fu_816_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op206_store_state4 = ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op208_store_state4 = ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op210_store_state4 = ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op212_store_state4 = ((icmp_ln107_reg_994 == 1'd1) & (trunc_ln321_fu_863_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op220_write_state5 = ((icmp_ln107_reg_994_pp0_iter1_reg == 1'd0) & (icmp_ln123_reg_998_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op73_load_state3 = ((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln123_fu_485_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op75_load_state3 = ((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln123_fu_485_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op77_load_state3 = ((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln123_fu_485_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op79_load_state3 = ((icmp_ln107_fu_476_p2 == 1'd0) & (icmp_ln104_fu_440_p2 == 1'd0) & (icmp_ln123_fu_485_p2 == 1'd1));
end

assign bound_fu_434_p2 = (p_shl_fu_416_p3 - p_shl70_fu_430_p1);

assign count_simd_fu_549_p2 = (32'd1 + count_simd_2_fu_120);

assign counter_internal_blo_8_fu_702_p2 = (counter_internal_blo_fu_132 + 32'd1);

assign current_block_write_11_fu_879_p3 = ((icmp_ln116_fu_873_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_fu_867_p2);

assign current_block_write_12_fu_823_p2 = (current_block_write_10_fu_124 + 32'd1);

assign current_block_write_13_fu_835_p3 = ((icmp_ln165_fu_829_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_12_fu_823_p2);

assign current_block_write_14_fu_843_p3 = ((icmp_ln160_reg_1057[0:0] === 1'b1) ? current_block_write_13_fu_835_p3 : current_block_write_10_fu_124);

assign current_block_write_fu_867_p2 = (current_block_write_10_fu_124 + 32'd1);

assign current_line_in_bloc_fu_535_p2 = (shl_ln_fu_527_p3 + count_simd_2_fu_120);

assign grp_fu_368_p2 = (current_line_4_fu_128 + 32'd1);

assign i_fu_760_p3 = ((icmp_ln105_fu_457_p2[0:0] === 1'b1) ? 9'd1 : add_ln105_fu_754_p2);

assign icmp_ln104_fu_440_p2 = ((indvar_flatten_reg_303 == bound_reg_980) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_457_p2 = ((i_0_i_reg_314 == 9'd384) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_476_p2 = ((inp_2_fu_112 < 32'd60) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_380_p2 = ((grp_fu_368_p2 == 32'd20) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_873_p2 = ((current_block_write_fu_867_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_485_p2 = ((counter_internal_blo_fu_132 < 32'd107) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_555_p2 = ((count_simd_fu_549_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_572_p2 = ((k_x_fu_566_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_583_p2 = ((k_y_fu_507_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_603_p2 = ((ofm_x_fu_597_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_623_p2 = ((ofm_y_fu_617_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln153_2_fu_651_p2 = ((select_ln105_fu_463_p3 < 32'd5) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_645_p2 = ((counter_internal_blo_fu_132 < 32'd19) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_374_p2 = ((grp_fu_368_p2 == 32'd20) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_829_p2 = ((current_block_write_12_fu_823_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_708_p2 = ((counter_internal_blo_8_fu_702_p2 == 32'd107) ? 1'b1 : 1'b0);

assign inp_fu_727_p2 = (inp_2_fu_112 + 32'd1);

assign inputBuf_0_V_address0 = zext_ln129_fu_541_p1;

assign inputBuf_1_V_address0 = zext_ln129_fu_541_p1;

assign inputBuf_2_V_address0 = zext_ln129_fu_541_p1;

assign inputBuf_3_V_address0 = zext_ln129_fu_541_p1;

assign k_x_fu_566_p2 = (k_x_2_fu_116 + 32'd1);

assign k_y_fu_507_p2 = (32'd1 + k_y_2_fu_108);

assign numReps_out_din = numReps_dout;

assign ofm_x_fu_597_p2 = (ofm_x_2_fu_104 + 32'd1);

assign ofm_y_fu_617_p2 = (ap_sig_allocacmp_ofm_y_1_i_load + 32'd1);

assign outElem_V_fu_783_p5 = (add_ln129_2_fu_772_p2 + trunc_ln124_reg_1002);

assign out_V_V_din = outElem_V_reg_1071;

assign p_shl70_fu_430_p1 = tmp_fu_423_p3;

assign p_shl_fu_416_p3 = {{numReps_read_reg_974}, {9'd0}};

assign read_block_5_fu_677_p3 = ((icmp_ln160_fu_374_p2[0:0] === 1'b1) ? add_ln163_fu_663_p2 : trunc_ln105_fu_472_p1);

assign read_block_fu_743_p2 = (select_ln105_fu_463_p3 + 32'd1);

assign select_ln105_fu_463_p3 = ((icmp_ln105_fu_457_p2[0:0] === 1'b1) ? 32'd0 : read_block_4_fu_96);

assign select_ln144_2_fu_797_p3 = ((icmp_ln144_reg_1048[0:0] === 1'b1) ? 32'd0 : ofm_y_reg_1043);

assign select_ln144_fu_629_p3 = ((icmp_ln144_fu_623_p2[0:0] === 1'b1) ? 32'd0 : inp_2_fu_112);

assign select_ln160_fu_669_p3 = ((icmp_ln160_fu_374_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_368_p2);

assign select_ln172_fu_714_p3 = ((icmp_ln172_fu_708_p2[0:0] === 1'b1) ? 32'd0 : counter_internal_blo_8_fu_702_p2);

assign shl_ln_fu_527_p3 = {{add_ln128_fu_521_p2}, {2'd0}};

assign tmp_fu_423_p3 = {{numReps_read_reg_974}, {7'd0}};

assign trunc_ln105_fu_472_p1 = select_ln105_fu_463_p3[2:0];

assign trunc_ln124_2_fu_768_p1 = current_block_write_10_fu_124[1:0];

assign trunc_ln124_fu_503_p1 = k_y_2_fu_108[1:0];

assign trunc_ln128_2_fu_517_p1 = ofm_x_2_fu_104[29:0];

assign trunc_ln128_fu_513_p1 = k_x_2_fu_116[29:0];

assign trunc_ln321_16_fu_816_p1 = current_block_write_10_fu_124[1:0];

assign trunc_ln321_fu_863_p1 = current_block_write_10_fu_124[1:0];

assign zext_ln110_fu_855_p1 = reg_392;

assign zext_ln129_fu_541_p1 = current_line_in_bloc_fu_535_p2;

assign zext_ln156_fu_808_p1 = reg_392;

assign zext_ln160_fu_685_p1 = read_block_5_fu_677_p3;

always @ (posedge ap_clk) begin
    bound_reg_980[6:0] <= 7'b0000000;
end

endmodule //ConvolutionInputGene_4
