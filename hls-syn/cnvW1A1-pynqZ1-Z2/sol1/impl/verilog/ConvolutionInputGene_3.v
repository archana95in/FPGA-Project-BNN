// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ConvolutionInputGene_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        numReps_dout,
        numReps_empty_n,
        numReps_read,
        numReps_out_din,
        numReps_out_full_n,
        numReps_out_write
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state6 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] numReps_dout;
input   numReps_empty_n;
output   numReps_read;
output  [31:0] numReps_out_din;
input   numReps_out_full_n;
output   numReps_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_read;
reg out_V_V_write;
reg numReps_read;
reg numReps_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln107_reg_1001;
reg   [0:0] and_ln153_reg_1055;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
reg   [0:0] icmp_ln107_reg_1001_pp0_iter1_reg;
reg   [0:0] icmp_ln123_reg_1005;
reg   [0:0] icmp_ln123_reg_1005_pp0_iter1_reg;
reg    numReps_blk_n;
reg    numReps_out_blk_n;
reg   [39:0] indvar_flatten_reg_305;
reg   [7:0] i_0_i_reg_316;
reg   [31:0] reg_394;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op172_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
reg    ap_predicate_op221_write_state5;
reg    ap_block_state5_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln104_fu_446_p2;
wire   [0:0] icmp_ln107_fu_482_p2;
wire   [0:0] and_ln153_fu_671_p2;
reg   [31:0] numReps_read_reg_981;
reg    ap_block_state1;
wire   [39:0] bound_fu_440_p2;
reg   [39:0] bound_reg_987;
wire    ap_CS_fsm_state2;
wire   [39:0] add_ln104_fu_451_p2;
wire   [0:0] icmp_ln123_fu_491_p2;
wire   [1:0] trunc_ln124_fu_509_p1;
reg   [1:0] trunc_ln124_reg_1009;
wire   [0:0] icmp_ln132_fu_561_p2;
reg   [0:0] icmp_ln132_reg_1034;
wire   [0:0] icmp_ln135_fu_578_p2;
reg   [0:0] icmp_ln135_reg_1038;
wire   [0:0] icmp_ln138_fu_589_p2;
reg   [0:0] icmp_ln138_reg_1042;
wire   [0:0] icmp_ln141_fu_609_p2;
reg   [0:0] icmp_ln141_reg_1046;
wire   [31:0] select_ln144_3_fu_643_p3;
reg   [31:0] select_ln144_3_reg_1050;
wire   [0:0] icmp_ln160_fu_376_p2;
reg   [0:0] icmp_ln160_reg_1059;
wire   [0:0] icmp_ln113_fu_382_p2;
reg   [0:0] icmp_ln113_reg_1064;
wire   [7:0] i_fu_774_p3;
wire   [31:0] outElem_V_fu_797_p6;
reg   [31:0] outElem_V_reg_1073;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
wire   [4:0] inputBuf_0_V_address0;
reg    inputBuf_0_V_ce0;
wire   [31:0] inputBuf_0_V_q0;
reg   [4:0] inputBuf_0_V_address1;
reg    inputBuf_0_V_ce1;
reg    inputBuf_0_V_we1;
wire   [4:0] inputBuf_1_V_address0;
reg    inputBuf_1_V_ce0;
wire   [31:0] inputBuf_1_V_q0;
reg   [4:0] inputBuf_1_V_address1;
reg    inputBuf_1_V_ce1;
reg    inputBuf_1_V_we1;
wire   [4:0] inputBuf_2_V_address0;
reg    inputBuf_2_V_ce0;
wire   [31:0] inputBuf_2_V_q0;
reg   [4:0] inputBuf_2_V_address1;
reg    inputBuf_2_V_ce1;
reg    inputBuf_2_V_we1;
wire   [4:0] inputBuf_3_V_address0;
reg    inputBuf_3_V_ce0;
wire   [31:0] inputBuf_3_V_q0;
reg   [4:0] inputBuf_3_V_address1;
reg    inputBuf_3_V_ce1;
reg    inputBuf_3_V_we1;
wire   [63:0] zext_ln129_fu_547_p1;
wire   [63:0] zext_ln156_fu_815_p1;
wire   [63:0] zext_ln110_fu_862_p1;
reg   [31:0] read_block_6_fu_98;
wire   [31:0] select_ln105_fu_469_p3;
wire   [31:0] zext_ln160_fu_699_p1;
wire   [31:0] read_block_fu_757_p2;
reg   [31:0] ofm_y_1_i_fu_102;
reg   [31:0] ap_sig_allocacmp_ofm_y_1_i_load;
reg   [31:0] ofm_x_3_fu_106;
wire   [31:0] ofm_x_fu_603_p2;
reg   [31:0] k_y_3_fu_110;
wire   [31:0] k_y_fu_513_p2;
reg   [31:0] inp_3_fu_114;
wire   [31:0] select_ln144_fu_635_p3;
wire   [31:0] inp_fu_741_p2;
reg   [31:0] k_x_3_fu_118;
wire   [31:0] k_x_fu_572_p2;
reg   [31:0] count_simd_3_fu_122;
wire   [31:0] count_simd_fu_555_p2;
reg   [31:0] current_block_write_15_fu_126;
wire   [31:0] current_block_write_19_fu_850_p3;
wire   [31:0] current_block_write_16_fu_886_p3;
reg   [31:0] current_line_6_fu_130;
wire   [31:0] select_ln160_fu_683_p3;
wire   [31:0] grp_fu_370_p2;
reg   [31:0] counter_internal_blo_fu_134;
wire   [31:0] select_ln172_fu_728_p3;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] trunc_ln321_17_fu_823_p1;
wire   [1:0] trunc_ln321_fu_870_p1;
wire   [38:0] tmp_fu_418_p3;
wire   [35:0] tmp_s_fu_429_p3;
wire   [39:0] p_shl_fu_425_p1;
wire   [39:0] p_shl70_fu_436_p1;
wire   [0:0] icmp_ln105_fu_463_p2;
wire   [28:0] trunc_ln128_3_fu_523_p1;
wire   [28:0] trunc_ln128_fu_519_p1;
wire   [28:0] add_ln128_fu_527_p2;
wire   [31:0] shl_ln_fu_533_p3;
wire   [31:0] current_line_in_bloc_fu_541_p2;
wire   [0:0] icmp_ln144_fu_629_p2;
wire   [31:0] ofm_y_fu_623_p2;
wire   [0:0] icmp_ln153_fu_659_p2;
wire   [0:0] icmp_ln153_3_fu_665_p2;
wire   [1:0] trunc_ln105_fu_478_p1;
wire   [1:0] add_ln163_fu_677_p2;
wire   [1:0] read_block_7_fu_691_p3;
wire   [31:0] counter_internal_blo_12_fu_716_p2;
wire   [0:0] icmp_ln172_fu_722_p2;
wire   [7:0] add_ln105_fu_768_p2;
wire   [1:0] trunc_ln124_3_fu_782_p1;
wire   [1:0] add_ln129_3_fu_786_p2;
wire   [1:0] outElem_V_fu_797_p5;
wire   [31:0] current_block_write_17_fu_830_p2;
wire   [0:0] icmp_ln165_fu_836_p2;
wire   [31:0] current_block_write_18_fu_842_p3;
wire   [31:0] current_block_write_fu_874_p2;
wire   [0:0] icmp_ln116_fu_880_p2;
wire    ap_CS_fsm_state6;
reg   [3:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op74_load_state3;
reg    ap_enable_operation_74;
reg    ap_enable_state3_pp0_iter0_stage0;
reg    ap_predicate_op163_load_state4;
reg    ap_enable_operation_163;
reg    ap_enable_state4_pp0_iter1_stage0;
reg    ap_predicate_op184_store_state4;
reg    ap_enable_operation_184;
reg    ap_predicate_op211_store_state4;
reg    ap_enable_operation_211;
reg    ap_predicate_op76_load_state3;
reg    ap_enable_operation_76;
reg    ap_predicate_op164_load_state4;
reg    ap_enable_operation_164;
reg    ap_predicate_op182_store_state4;
reg    ap_enable_operation_182;
reg    ap_predicate_op209_store_state4;
reg    ap_enable_operation_209;
reg    ap_predicate_op78_load_state3;
reg    ap_enable_operation_78;
reg    ap_predicate_op165_load_state4;
reg    ap_enable_operation_165;
reg    ap_predicate_op180_store_state4;
reg    ap_enable_operation_180;
reg    ap_predicate_op207_store_state4;
reg    ap_enable_operation_207;
reg    ap_predicate_op80_load_state3;
reg    ap_enable_operation_80;
reg    ap_predicate_op166_load_state4;
reg    ap_enable_operation_166;
reg    ap_predicate_op186_store_state4;
reg    ap_enable_operation_186;
reg    ap_predicate_op213_store_state4;
reg    ap_enable_operation_213;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_412;
reg    ap_condition_55;
reg    ap_condition_424;
reg    ap_condition_435;
reg    ap_condition_446;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

ConvolutionInputGJfO #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
inputBuf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_0_V_address0),
    .ce0(inputBuf_0_V_ce0),
    .q0(inputBuf_0_V_q0),
    .address1(inputBuf_0_V_address1),
    .ce1(inputBuf_0_V_ce1),
    .we1(inputBuf_0_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGJfO #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
inputBuf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_1_V_address0),
    .ce0(inputBuf_1_V_ce0),
    .q0(inputBuf_1_V_q0),
    .address1(inputBuf_1_V_address1),
    .ce1(inputBuf_1_V_ce1),
    .we1(inputBuf_1_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGJfO #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
inputBuf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_2_V_address0),
    .ce0(inputBuf_2_V_ce0),
    .q0(inputBuf_2_V_q0),
    .address1(inputBuf_2_V_address1),
    .ce1(inputBuf_2_V_ce1),
    .we1(inputBuf_2_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGJfO #(
    .DataWidth( 32 ),
    .AddressRange( 24 ),
    .AddressWidth( 5 ))
inputBuf_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_3_V_address0),
    .ce0(inputBuf_3_V_ce0),
    .q0(inputBuf_3_V_q0),
    .address1(inputBuf_3_V_address1),
    .ce1(inputBuf_3_V_ce1),
    .we1(inputBuf_3_V_we1),
    .d1(in_V_V_dout)
);

BlackBoxJam_mux_4pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
BlackBoxJam_mux_4pcA_U339(
    .din0(inputBuf_0_V_q0),
    .din1(inputBuf_1_V_q0),
    .din2(inputBuf_2_V_q0),
    .din3(inputBuf_3_V_q0),
    .din4(outElem_V_fu_797_p5),
    .dout(outElem_V_fu_797_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_561_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        count_simd_3_fu_122 <= count_simd_fu_555_p2;
    end else if ((((icmp_ln135_fu_578_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln138_fu_589_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln141_fu_609_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln138_fu_589_p2 == 1'd1) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln141_fu_609_p2 == 1'd1) & (icmp_ln138_fu_589_p2 == 1'd1) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        count_simd_3_fu_122 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        counter_internal_blo_fu_134 <= select_ln172_fu_728_p3;
    end else if ((((icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln113_fu_382_p2 == 1'd1) & (icmp_ln107_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        counter_internal_blo_fu_134 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_reg_1064 == 1'd1) & (icmp_ln107_reg_1001 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_block_write_15_fu_126 <= current_block_write_16_fu_886_p3;
    end else if (((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_block_write_15_fu_126 <= current_block_write_19_fu_850_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        current_block_write_15_fu_126 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_382_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_6_fu_130 <= grp_fu_370_p2;
    end else if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (1'd1 == and_ln153_fu_671_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_6_fu_130 <= select_ln160_fu_683_p3;
    end else if ((((icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln113_fu_382_p2 == 1'd1) & (icmp_ln107_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        current_line_6_fu_130 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_446_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_i_reg_316 <= i_fu_774_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_0_i_reg_316 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_446_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_305 <= add_ln104_fu_451_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        indvar_flatten_reg_305 <= 40'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_3_fu_114 <= inp_fu_741_p2;
    end else if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln141_fu_609_p2 == 1'd1) & (icmp_ln138_fu_589_p2 == 1'd1) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_3_fu_114 <= select_ln144_fu_635_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inp_3_fu_114 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_fu_578_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_x_3_fu_118 <= k_x_fu_572_p2;
    end else if ((((icmp_ln138_fu_589_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln141_fu_609_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln138_fu_589_p2 == 1'd1) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln141_fu_609_p2 == 1'd1) & (icmp_ln138_fu_589_p2 == 1'd1) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_x_3_fu_118 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln138_fu_589_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_y_3_fu_110 <= k_y_fu_513_p2;
    end else if ((((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln138_fu_589_p2 == 1'd1) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_y_3_fu_110 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln141_fu_609_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln138_fu_589_p2 == 1'd1) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ofm_x_3_fu_106 <= ofm_x_fu_603_p2;
    end else if ((((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln141_fu_609_p2 == 1'd1) & (icmp_ln138_fu_589_p2 == 1'd1) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        ofm_x_3_fu_106 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_1005 == 1'd1) & (icmp_ln141_reg_1046 == 1'd1) & (icmp_ln138_reg_1042 == 1'd1) & (icmp_ln135_reg_1038 == 1'd1) & (icmp_ln132_reg_1034 == 1'd1) & (icmp_ln107_reg_1001 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ofm_y_1_i_fu_102 <= select_ln144_3_reg_1050;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ofm_y_1_i_fu_102 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln113_fu_382_p2 == 1'd1) & (icmp_ln107_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        read_block_6_fu_98 <= read_block_fu_757_p2;
    end else if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (1'd1 == and_ln153_fu_671_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        read_block_6_fu_98 <= zext_ln160_fu_699_p1;
    end else if ((((icmp_ln113_fu_382_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'd0 == and_ln153_fu_671_p2) & (icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        read_block_6_fu_98 <= select_ln105_fu_469_p3;
    end else if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        read_block_6_fu_98 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln153_reg_1055 <= and_ln153_fu_671_p2;
        icmp_ln123_reg_1005 <= icmp_ln123_fu_491_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        bound_reg_987[39 : 4] <= bound_fu_440_p2[39 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_446_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln107_reg_1001 <= icmp_ln107_fu_482_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln107_reg_1001_pp0_iter1_reg <= icmp_ln107_reg_1001;
        icmp_ln123_reg_1005_pp0_iter1_reg <= icmp_ln123_reg_1005;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln113_reg_1064 <= icmp_ln113_fu_382_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln123_fu_491_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln132_reg_1034 <= icmp_ln132_fu_561_p2;
        trunc_ln124_reg_1009 <= trunc_ln124_fu_509_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln135_reg_1038 <= icmp_ln135_fu_578_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln138_reg_1042 <= icmp_ln138_fu_589_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln138_fu_589_p2 == 1'd1) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln141_reg_1046 <= icmp_ln141_fu_609_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (1'd1 == and_ln153_fu_671_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln160_reg_1059 <= icmp_ln160_fu_376_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read_reg_981 <= numReps_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_1005 == 1'd1) & (icmp_ln107_reg_1001 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outElem_V_reg_1073 <= outElem_V_fu_797_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln107_fu_482_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (1'd1 == and_ln153_fu_671_p2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_394 <= current_line_6_fu_130;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln141_fu_609_p2 == 1'd1) & (icmp_ln138_fu_589_p2 == 1'd1) & (icmp_ln135_fu_578_p2 == 1'd1) & (icmp_ln132_fu_561_p2 == 1'd1) & (icmp_ln123_fu_491_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln144_3_reg_1050 <= select_ln144_3_fu_643_p3;
    end
end

always @ (*) begin
    if ((icmp_ln104_fu_446_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln123_reg_1005 == 1'd1) & (icmp_ln141_reg_1046 == 1'd1) & (icmp_ln138_reg_1042 == 1'd1) & (icmp_ln135_reg_1038 == 1'd1) & (icmp_ln132_reg_1034 == 1'd1) & (icmp_ln107_reg_1001 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_ofm_y_1_i_load = select_ln144_3_reg_1050;
    end else begin
        ap_sig_allocacmp_ofm_y_1_i_load = ofm_y_1_i_fu_102;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln107_reg_1001 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_predicate_op172_read_state4 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1001 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_55)) begin
        if (((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd0))) begin
            inputBuf_0_V_address1 = zext_ln110_fu_862_p1;
        end else if ((1'b1 == ap_condition_412)) begin
            inputBuf_0_V_address1 = zext_ln156_fu_815_p1;
        end else begin
            inputBuf_0_V_address1 = 'bx;
        end
    end else begin
        inputBuf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_0_V_ce0 = 1'b1;
    end else begin
        inputBuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_0_V_ce1 = 1'b1;
    end else begin
        inputBuf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_0_V_we1 = 1'b1;
    end else begin
        inputBuf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_55)) begin
        if (((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd1))) begin
            inputBuf_1_V_address1 = zext_ln110_fu_862_p1;
        end else if ((1'b1 == ap_condition_424)) begin
            inputBuf_1_V_address1 = zext_ln156_fu_815_p1;
        end else begin
            inputBuf_1_V_address1 = 'bx;
        end
    end else begin
        inputBuf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_1_V_ce0 = 1'b1;
    end else begin
        inputBuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_1_V_ce1 = 1'b1;
    end else begin
        inputBuf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_1_V_we1 = 1'b1;
    end else begin
        inputBuf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_55)) begin
        if (((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd2))) begin
            inputBuf_2_V_address1 = zext_ln110_fu_862_p1;
        end else if ((1'b1 == ap_condition_435)) begin
            inputBuf_2_V_address1 = zext_ln156_fu_815_p1;
        end else begin
            inputBuf_2_V_address1 = 'bx;
        end
    end else begin
        inputBuf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_2_V_ce0 = 1'b1;
    end else begin
        inputBuf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_2_V_ce1 = 1'b1;
    end else begin
        inputBuf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_2_V_we1 = 1'b1;
    end else begin
        inputBuf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_55)) begin
        if (((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd3))) begin
            inputBuf_3_V_address1 = zext_ln110_fu_862_p1;
        end else if ((1'b1 == ap_condition_446)) begin
            inputBuf_3_V_address1 = zext_ln156_fu_815_p1;
        end else begin
            inputBuf_3_V_address1 = 'bx;
        end
    end else begin
        inputBuf_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_3_V_ce0 = 1'b1;
    end else begin
        inputBuf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_3_V_ce1 = 1'b1;
    end else begin
        inputBuf_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_3_V_we1 = 1'b1;
    end else begin
        inputBuf_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_blk_n = numReps_empty_n;
    end else begin
        numReps_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_blk_n = numReps_out_full_n;
    end else begin
        numReps_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_write = 1'b1;
    end else begin
        numReps_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read = 1'b1;
    end else begin
        numReps_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_1001_pp0_iter1_reg == 1'd0) & (icmp_ln123_reg_1005_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op221_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln104_fu_446_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln104_fu_446_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln104_fu_451_p2 = (indvar_flatten_reg_305 + 40'd1);

assign add_ln105_fu_768_p2 = (i_0_i_reg_316 + 8'd1);

assign add_ln128_fu_527_p2 = (trunc_ln128_3_fu_523_p1 + trunc_ln128_fu_519_p1);

assign add_ln129_3_fu_786_p2 = (2'd1 + trunc_ln124_3_fu_782_p1);

assign add_ln163_fu_677_p2 = (trunc_ln105_fu_478_p1 + 2'd1);

assign and_ln153_fu_671_p2 = (icmp_ln153_fu_659_p2 & icmp_ln153_3_fu_665_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op221_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op172_read_state4 == 1'b1)) | ((icmp_ln107_reg_1001 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op221_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op172_read_state4 == 1'b1)) | ((icmp_ln107_reg_1001 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (ap_predicate_op221_write_state5 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op172_read_state4 == 1'b1)) | ((icmp_ln107_reg_1001 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = (((in_V_V_empty_n == 1'b0) & (ap_predicate_op172_read_state4 == 1'b1)) | ((icmp_ln107_reg_1001 == 1'd1) & (in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter2 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op221_write_state5 == 1'b1));
end

always @ (*) begin
    ap_condition_412 = ((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd0));
end

always @ (*) begin
    ap_condition_424 = ((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd1));
end

always @ (*) begin
    ap_condition_435 = ((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd2));
end

always @ (*) begin
    ap_condition_446 = ((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd3));
end

always @ (*) begin
    ap_condition_55 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_operation_163 = (ap_predicate_op163_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_164 = (ap_predicate_op164_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_165 = (ap_predicate_op165_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_166 = (ap_predicate_op166_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_180 = (ap_predicate_op180_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_182 = (ap_predicate_op182_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_184 = (ap_predicate_op184_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_186 = (ap_predicate_op186_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_207 = (ap_predicate_op207_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_209 = (ap_predicate_op209_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_211 = (ap_predicate_op211_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_213 = (ap_predicate_op213_store_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_74 = (ap_predicate_op74_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_76 = (ap_predicate_op76_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_78 = (ap_predicate_op78_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_80 = (ap_predicate_op80_load_state3 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state3_pp0_iter0_stage0 = ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_predicate_op163_load_state4 = ((icmp_ln123_reg_1005 == 1'd1) & (icmp_ln107_reg_1001 == 1'd0));
end

always @ (*) begin
    ap_predicate_op164_load_state4 = ((icmp_ln123_reg_1005 == 1'd1) & (icmp_ln107_reg_1001 == 1'd0));
end

always @ (*) begin
    ap_predicate_op165_load_state4 = ((icmp_ln123_reg_1005 == 1'd1) & (icmp_ln107_reg_1001 == 1'd0));
end

always @ (*) begin
    ap_predicate_op166_load_state4 = ((icmp_ln123_reg_1005 == 1'd1) & (icmp_ln107_reg_1001 == 1'd0));
end

always @ (*) begin
    ap_predicate_op172_read_state4 = ((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0));
end

always @ (*) begin
    ap_predicate_op180_store_state4 = ((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op182_store_state4 = ((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op184_store_state4 = ((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op186_store_state4 = ((1'd1 == and_ln153_reg_1055) & (icmp_ln107_reg_1001 == 1'd0) & (trunc_ln321_17_fu_823_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op207_store_state4 = ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op209_store_state4 = ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op211_store_state4 = ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op213_store_state4 = ((icmp_ln107_reg_1001 == 1'd1) & (trunc_ln321_fu_870_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op221_write_state5 = ((icmp_ln107_reg_1001_pp0_iter1_reg == 1'd0) & (icmp_ln123_reg_1005_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op74_load_state3 = ((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln123_fu_491_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op76_load_state3 = ((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln123_fu_491_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op78_load_state3 = ((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln123_fu_491_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op80_load_state3 = ((icmp_ln107_fu_482_p2 == 1'd0) & (icmp_ln104_fu_446_p2 == 1'd0) & (icmp_ln123_fu_491_p2 == 1'd1));
end

assign bound_fu_440_p2 = (p_shl_fu_425_p1 + p_shl70_fu_436_p1);

assign count_simd_fu_555_p2 = (32'd1 + count_simd_3_fu_122);

assign counter_internal_blo_12_fu_716_p2 = (counter_internal_blo_fu_134 + 32'd1);

assign current_block_write_16_fu_886_p3 = ((icmp_ln116_fu_880_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_fu_874_p2);

assign current_block_write_17_fu_830_p2 = (current_block_write_15_fu_126 + 32'd1);

assign current_block_write_18_fu_842_p3 = ((icmp_ln165_fu_836_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_17_fu_830_p2);

assign current_block_write_19_fu_850_p3 = ((icmp_ln160_reg_1059[0:0] === 1'b1) ? current_block_write_18_fu_842_p3 : current_block_write_15_fu_126);

assign current_block_write_fu_874_p2 = (current_block_write_15_fu_126 + 32'd1);

assign current_line_in_bloc_fu_541_p2 = (shl_ln_fu_533_p3 + count_simd_3_fu_122);

assign grp_fu_370_p2 = (current_line_6_fu_130 + 32'd1);

assign i_fu_774_p3 = ((icmp_ln105_fu_463_p2[0:0] === 1'b1) ? 8'd1 : add_ln105_fu_768_p2);

assign icmp_ln104_fu_446_p2 = ((indvar_flatten_reg_305 == bound_reg_987) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_463_p2 = ((i_0_i_reg_316 == 8'd144) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_482_p2 = ((inp_3_fu_114 < 32'd72) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_382_p2 = ((grp_fu_370_p2 == 32'd24) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_880_p2 = ((current_block_write_fu_874_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_491_p2 = ((counter_internal_blo_fu_134 < 32'd71) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_561_p2 = ((count_simd_fu_555_p2 == 32'd8) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_578_p2 = ((k_x_fu_572_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_589_p2 = ((k_y_fu_513_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_609_p2 = ((ofm_x_3_fu_106 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_629_p2 = ((ap_sig_allocacmp_ofm_y_1_i_load == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln153_3_fu_665_p2 = ((select_ln105_fu_469_p3 < 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_659_p2 = ((counter_internal_blo_fu_134 < 32'd23) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_376_p2 = ((grp_fu_370_p2 == 32'd24) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_836_p2 = ((current_block_write_17_fu_830_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_722_p2 = ((counter_internal_blo_12_fu_716_p2 == 32'd71) ? 1'b1 : 1'b0);

assign inp_fu_741_p2 = (inp_3_fu_114 + 32'd1);

assign inputBuf_0_V_address0 = zext_ln129_fu_547_p1;

assign inputBuf_1_V_address0 = zext_ln129_fu_547_p1;

assign inputBuf_2_V_address0 = zext_ln129_fu_547_p1;

assign inputBuf_3_V_address0 = zext_ln129_fu_547_p1;

assign k_x_fu_572_p2 = (k_x_3_fu_118 + 32'd1);

assign k_y_fu_513_p2 = (32'd1 + k_y_3_fu_110);

assign numReps_out_din = numReps_dout;

assign ofm_x_fu_603_p2 = (ofm_x_3_fu_106 + 32'd1);

assign ofm_y_fu_623_p2 = (ap_sig_allocacmp_ofm_y_1_i_load + 32'd1);

assign outElem_V_fu_797_p5 = (add_ln129_3_fu_786_p2 + trunc_ln124_reg_1009);

assign out_V_V_din = outElem_V_reg_1073;

assign p_shl70_fu_436_p1 = tmp_s_fu_429_p3;

assign p_shl_fu_425_p1 = tmp_fu_418_p3;

assign read_block_7_fu_691_p3 = ((icmp_ln160_fu_376_p2[0:0] === 1'b1) ? add_ln163_fu_677_p2 : trunc_ln105_fu_478_p1);

assign read_block_fu_757_p2 = (select_ln105_fu_469_p3 + 32'd1);

assign select_ln105_fu_469_p3 = ((icmp_ln105_fu_463_p2[0:0] === 1'b1) ? 32'd0 : read_block_6_fu_98);

assign select_ln144_3_fu_643_p3 = ((icmp_ln144_fu_629_p2[0:0] === 1'b1) ? 32'd0 : ofm_y_fu_623_p2);

assign select_ln144_fu_635_p3 = ((icmp_ln144_fu_629_p2[0:0] === 1'b1) ? 32'd0 : inp_3_fu_114);

assign select_ln160_fu_683_p3 = ((icmp_ln160_fu_376_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_370_p2);

assign select_ln172_fu_728_p3 = ((icmp_ln172_fu_722_p2[0:0] === 1'b1) ? 32'd0 : counter_internal_blo_12_fu_716_p2);

assign shl_ln_fu_533_p3 = {{add_ln128_fu_527_p2}, {3'd0}};

assign tmp_fu_418_p3 = {{numReps_read_reg_981}, {7'd0}};

assign tmp_s_fu_429_p3 = {{numReps_read_reg_981}, {4'd0}};

assign trunc_ln105_fu_478_p1 = select_ln105_fu_469_p3[1:0];

assign trunc_ln124_3_fu_782_p1 = current_block_write_15_fu_126[1:0];

assign trunc_ln124_fu_509_p1 = k_y_3_fu_110[1:0];

assign trunc_ln128_3_fu_523_p1 = ofm_x_3_fu_106[28:0];

assign trunc_ln128_fu_519_p1 = k_x_3_fu_118[28:0];

assign trunc_ln321_17_fu_823_p1 = current_block_write_15_fu_126[1:0];

assign trunc_ln321_fu_870_p1 = current_block_write_15_fu_126[1:0];

assign zext_ln110_fu_862_p1 = reg_394;

assign zext_ln129_fu_547_p1 = current_line_in_bloc_fu_541_p2;

assign zext_ln156_fu_815_p1 = reg_394;

assign zext_ln160_fu_699_p1 = read_block_7_fu_691_p3;

always @ (posedge ap_clk) begin
    bound_reg_987[3:0] <= 4'b0000;
end

endmodule //ConvolutionInputGene_3
