// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ConvolutionInputGene (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        numReps_dout,
        numReps_empty_n,
        numReps_read,
        numReps_out_din,
        numReps_out_full_n,
        numReps_out_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_pp0_stage0 = 8'd64;
parameter    ap_ST_fsm_state11 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [31:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] numReps_dout;
input   numReps_empty_n;
output   numReps_read;
output  [31:0] numReps_out_din;
input   numReps_out_full_n;
output   numReps_out_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg in_V_V_read;
reg out_V_V_write;
reg numReps_read;
reg numReps_out_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    in_V_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln107_reg_992;
reg   [0:0] and_ln153_reg_1051;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter3;
reg   [0:0] icmp_ln107_reg_992_pp0_iter2_reg;
reg   [0:0] icmp_ln123_reg_996;
reg   [0:0] icmp_ln123_reg_996_pp0_iter2_reg;
reg    numReps_blk_n;
reg    numReps_out_blk_n;
reg   [45:0] indvar_flatten_reg_303;
reg   [13:0] i_0_i_reg_314;
reg   [31:0] reg_392;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state7_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
reg    ap_predicate_op178_read_state9;
reg    ap_block_state9_pp0_stage0_iter2;
reg    ap_predicate_op227_write_state10;
reg    ap_block_state10_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln107_fu_474_p2;
wire   [0:0] and_ln153_fu_655_p2;
reg   [31:0] numReps_read_reg_958;
reg    ap_block_state1;
wire    ap_CS_fsm_state2;
wire   [45:0] grp_fu_419_p2;
reg   [45:0] bound_reg_968;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln104_fu_425_p2;
reg   [0:0] icmp_ln104_reg_973;
wire   [45:0] add_ln104_fu_430_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln105_fu_436_p2;
reg   [0:0] icmp_ln105_reg_982;
wire   [13:0] i_fu_448_p3;
wire   [0:0] icmp_ln123_fu_483_p2;
wire   [1:0] trunc_ln124_fu_501_p1;
reg   [1:0] trunc_ln124_reg_1000;
wire   [0:0] icmp_ln132_fu_553_p2;
reg   [0:0] icmp_ln132_reg_1025;
wire   [0:0] icmp_ln135_fu_570_p2;
reg   [0:0] icmp_ln135_reg_1029;
wire   [0:0] icmp_ln138_fu_581_p2;
reg   [0:0] icmp_ln138_reg_1033;
wire   [0:0] icmp_ln141_fu_601_p2;
reg   [0:0] icmp_ln141_reg_1037;
wire   [31:0] ofm_y_fu_615_p2;
reg   [31:0] ofm_y_reg_1041;
wire   [0:0] icmp_ln144_fu_621_p2;
reg   [0:0] icmp_ln144_reg_1046;
wire   [0:0] icmp_ln160_fu_374_p2;
reg   [0:0] icmp_ln160_reg_1055;
wire   [0:0] icmp_ln113_fu_380_p2;
reg   [0:0] icmp_ln113_reg_1060;
wire   [31:0] outElem_V_fu_767_p6;
reg   [31:0] outElem_V_reg_1064;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state7;
wire   [5:0] inputBuf_0_V_address0;
reg    inputBuf_0_V_ce0;
wire   [31:0] inputBuf_0_V_q0;
reg   [5:0] inputBuf_0_V_address1;
reg    inputBuf_0_V_ce1;
reg    inputBuf_0_V_we1;
wire   [5:0] inputBuf_1_V_address0;
reg    inputBuf_1_V_ce0;
wire   [31:0] inputBuf_1_V_q0;
reg   [5:0] inputBuf_1_V_address1;
reg    inputBuf_1_V_ce1;
reg    inputBuf_1_V_we1;
wire   [5:0] inputBuf_2_V_address0;
reg    inputBuf_2_V_ce0;
wire   [31:0] inputBuf_2_V_q0;
reg   [5:0] inputBuf_2_V_address1;
reg    inputBuf_2_V_ce1;
reg    inputBuf_2_V_we1;
wire   [5:0] inputBuf_3_V_address0;
reg    inputBuf_3_V_ce0;
wire   [31:0] inputBuf_3_V_q0;
reg   [5:0] inputBuf_3_V_address1;
reg    inputBuf_3_V_ce1;
reg    inputBuf_3_V_we1;
wire   [63:0] zext_ln129_fu_539_p1;
wire   [63:0] zext_ln156_fu_792_p1;
wire   [63:0] zext_ln110_fu_839_p1;
reg   [31:0] read_block_12_fu_96;
wire   [31:0] select_ln105_fu_462_p3;
wire   [31:0] zext_ln160_fu_683_p1;
wire   [31:0] read_block_fu_741_p2;
reg   [31:0] ofm_y_1_i_fu_100;
wire   [31:0] select_ln144_1_fu_781_p3;
reg   [31:0] ap_sig_allocacmp_ofm_y_1_i_load;
reg   [31:0] ofm_x_6_fu_104;
wire   [31:0] ofm_x_fu_595_p2;
reg   [31:0] k_y_6_fu_108;
wire   [31:0] k_y_fu_505_p2;
reg   [31:0] inp_6_fu_112;
wire   [31:0] select_ln144_fu_627_p3;
wire   [31:0] inp_fu_725_p2;
reg   [31:0] k_x_6_fu_116;
wire   [31:0] k_x_fu_564_p2;
reg   [31:0] count_simd_6_fu_120;
wire   [31:0] count_simd_fu_547_p2;
reg   [31:0] current_block_write_30_fu_124;
wire   [31:0] current_block_write_34_fu_827_p3;
wire   [31:0] current_block_write_31_fu_863_p3;
reg   [31:0] current_line_12_fu_128;
wire   [31:0] select_ln160_fu_667_p3;
wire   [31:0] grp_fu_368_p2;
reg   [31:0] counter_internal_blo_fu_132;
wire   [31:0] select_ln172_fu_712_p3;
reg    ap_block_pp0_stage0_01001;
wire   [1:0] trunc_ln321_20_fu_800_p1;
wire   [1:0] trunc_ln321_fu_847_p1;
wire   [31:0] grp_fu_419_p0;
wire   [14:0] grp_fu_419_p1;
wire   [13:0] add_ln105_fu_442_p2;
wire   [30:0] trunc_ln128_5_fu_515_p1;
wire   [30:0] trunc_ln128_fu_511_p1;
wire   [30:0] add_ln128_fu_519_p2;
wire   [31:0] shl_ln_fu_525_p3;
wire   [31:0] current_line_in_bloc_fu_533_p2;
wire   [0:0] icmp_ln153_fu_643_p2;
wire   [0:0] icmp_ln153_1_fu_649_p2;
wire   [4:0] trunc_ln105_fu_470_p1;
wire   [4:0] add_ln163_fu_661_p2;
wire   [4:0] read_block_13_fu_675_p3;
wire   [31:0] counter_internal_blo_24_fu_700_p2;
wire   [0:0] icmp_ln172_fu_706_p2;
wire   [1:0] trunc_ln124_6_fu_752_p1;
wire   [1:0] add_ln129_1_fu_756_p2;
wire   [1:0] outElem_V_fu_767_p5;
wire   [31:0] current_block_write_32_fu_807_p2;
wire   [0:0] icmp_ln165_fu_813_p2;
wire   [31:0] current_block_write_33_fu_819_p3;
wire   [31:0] current_block_write_fu_851_p2;
wire   [0:0] icmp_ln116_fu_857_p2;
wire    ap_CS_fsm_state11;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op84_load_state8;
reg    ap_enable_operation_84;
reg    ap_enable_state8_pp0_iter1_stage0;
reg    ap_predicate_op168_load_state9;
reg    ap_enable_operation_168;
reg    ap_enable_state9_pp0_iter2_stage0;
reg    ap_predicate_op190_store_state9;
reg    ap_enable_operation_190;
reg    ap_predicate_op217_store_state9;
reg    ap_enable_operation_217;
reg    ap_predicate_op86_load_state8;
reg    ap_enable_operation_86;
reg    ap_predicate_op169_load_state9;
reg    ap_enable_operation_169;
reg    ap_predicate_op188_store_state9;
reg    ap_enable_operation_188;
reg    ap_predicate_op215_store_state9;
reg    ap_enable_operation_215;
reg    ap_predicate_op88_load_state8;
reg    ap_enable_operation_88;
reg    ap_predicate_op170_load_state9;
reg    ap_enable_operation_170;
reg    ap_predicate_op186_store_state9;
reg    ap_enable_operation_186;
reg    ap_predicate_op213_store_state9;
reg    ap_enable_operation_213;
reg    ap_predicate_op90_load_state8;
reg    ap_enable_operation_90;
reg    ap_predicate_op171_load_state9;
reg    ap_enable_operation_171;
reg    ap_predicate_op192_store_state9;
reg    ap_enable_operation_192;
reg    ap_predicate_op219_store_state9;
reg    ap_enable_operation_219;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [45:0] grp_fu_419_p00;
reg    ap_condition_436;
reg    ap_condition_448;
reg    ap_condition_459;
reg    ap_condition_470;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

ConvolutionInputGkbM #(
    .DataWidth( 32 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
inputBuf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_0_V_address0),
    .ce0(inputBuf_0_V_ce0),
    .q0(inputBuf_0_V_q0),
    .address1(inputBuf_0_V_address1),
    .ce1(inputBuf_0_V_ce1),
    .we1(inputBuf_0_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGkbM #(
    .DataWidth( 32 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
inputBuf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_1_V_address0),
    .ce0(inputBuf_1_V_ce0),
    .q0(inputBuf_1_V_q0),
    .address1(inputBuf_1_V_address1),
    .ce1(inputBuf_1_V_ce1),
    .we1(inputBuf_1_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGkbM #(
    .DataWidth( 32 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
inputBuf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_2_V_address0),
    .ce0(inputBuf_2_V_ce0),
    .q0(inputBuf_2_V_q0),
    .address1(inputBuf_2_V_address1),
    .ce1(inputBuf_2_V_ce1),
    .we1(inputBuf_2_V_we1),
    .d1(in_V_V_dout)
);

ConvolutionInputGkbM #(
    .DataWidth( 32 ),
    .AddressRange( 60 ),
    .AddressWidth( 6 ))
inputBuf_3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(inputBuf_3_V_address0),
    .ce0(inputBuf_3_V_ce0),
    .q0(inputBuf_3_V_q0),
    .address1(inputBuf_3_V_address1),
    .ce1(inputBuf_3_V_ce1),
    .we1(inputBuf_3_V_we1),
    .d1(in_V_V_dout)
);

BlackBoxJam_mul_3ocq #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 46 ))
BlackBoxJam_mul_3ocq_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_419_p0),
    .din1(grp_fu_419_p1),
    .ce(1'b1),
    .dout(grp_fu_419_p2)
);

BlackBoxJam_mux_4pcA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
BlackBoxJam_mux_4pcA_U94(
    .din0(inputBuf_0_V_q0),
    .din1(inputBuf_1_V_q0),
    .din2(inputBuf_2_V_q0),
    .din3(inputBuf_3_V_q0),
    .din4(outElem_V_fu_767_p5),
    .dout(outElem_V_fu_767_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state11)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state7))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state7)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_553_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        count_simd_6_fu_120 <= count_simd_fu_547_p2;
    end else if ((((icmp_ln135_fu_570_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln138_fu_581_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln141_fu_601_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln138_fu_581_p2 == 1'd1) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln141_fu_601_p2 == 1'd1) & (icmp_ln138_fu_581_p2 == 1'd1) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        count_simd_6_fu_120 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_474_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        counter_internal_blo_fu_132 <= select_ln172_fu_712_p3;
    end else if ((((icmp_ln113_fu_380_p2 == 1'd1) & (icmp_ln107_fu_474_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        counter_internal_blo_fu_132 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_reg_1060 == 1'd1) & (icmp_ln107_reg_992 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_block_write_30_fu_124 <= current_block_write_31_fu_863_p3;
    end else if (((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_block_write_30_fu_124 <= current_block_write_34_fu_827_p3;
    end else if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        current_block_write_30_fu_124 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_380_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_12_fu_128 <= grp_fu_368_p2;
    end else if (((icmp_ln107_fu_474_p2 == 1'd0) & (1'd1 == and_ln153_fu_655_p2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        current_line_12_fu_128 <= select_ln160_fu_667_p3;
    end else if ((((icmp_ln113_fu_380_p2 == 1'd1) & (icmp_ln107_fu_474_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        current_line_12_fu_128 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_425_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_i_reg_314 <= i_fu_448_p3;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_i_reg_314 <= 14'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_425_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_303 <= add_ln104_fu_430_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten_reg_303 <= 46'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_474_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_6_fu_112 <= inp_fu_725_p2;
    end else if (((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln141_fu_601_p2 == 1'd1) & (icmp_ln138_fu_581_p2 == 1'd1) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_6_fu_112 <= select_ln144_fu_627_p3;
    end else if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        inp_6_fu_112 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln135_fu_570_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_x_6_fu_116 <= k_x_fu_564_p2;
    end else if ((((icmp_ln138_fu_581_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln141_fu_601_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln138_fu_581_p2 == 1'd1) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln141_fu_601_p2 == 1'd1) & (icmp_ln138_fu_581_p2 == 1'd1) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_x_6_fu_116 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln138_fu_581_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_y_6_fu_108 <= k_y_fu_505_p2;
    end else if ((((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln138_fu_581_p2 == 1'd1) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_y_6_fu_108 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln141_fu_601_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln138_fu_581_p2 == 1'd1) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ofm_x_6_fu_104 <= ofm_x_fu_595_p2;
    end else if ((((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln141_fu_601_p2 == 1'd1) & (icmp_ln138_fu_581_p2 == 1'd1) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | (~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        ofm_x_6_fu_104 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_996 == 1'd1) & (icmp_ln141_reg_1037 == 1'd1) & (icmp_ln138_reg_1033 == 1'd1) & (icmp_ln135_reg_1029 == 1'd1) & (icmp_ln132_reg_1025 == 1'd1) & (icmp_ln107_reg_992 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ofm_y_1_i_fu_100 <= select_ln144_1_fu_781_p3;
    end else if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ofm_y_1_i_fu_100 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_380_p2 == 1'd1) & (icmp_ln107_fu_474_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        read_block_12_fu_96 <= read_block_fu_741_p2;
    end else if (((icmp_ln107_fu_474_p2 == 1'd0) & (1'd1 == and_ln153_fu_655_p2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        read_block_12_fu_96 <= zext_ln160_fu_683_p1;
    end else if ((((icmp_ln113_fu_380_p2 == 1'd0) & (icmp_ln107_fu_474_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'd0 == and_ln153_fu_655_p2) & (icmp_ln107_fu_474_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        read_block_12_fu_96 <= select_ln105_fu_462_p3;
    end else if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        read_block_12_fu_96 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_474_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln153_reg_1051 <= and_ln153_fu_655_p2;
        icmp_ln123_reg_996 <= icmp_ln123_fu_483_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        bound_reg_968 <= grp_fu_419_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln104_reg_973 <= icmp_ln104_fu_425_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_fu_425_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln105_reg_982 <= icmp_ln105_fu_436_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln104_reg_973 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln107_reg_992 <= icmp_ln107_fu_474_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln107_reg_992_pp0_iter2_reg <= icmp_ln107_reg_992;
        icmp_ln123_reg_996_pp0_iter2_reg <= icmp_ln123_reg_996;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_474_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln113_reg_1060 <= icmp_ln113_fu_380_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln123_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln132_reg_1025 <= icmp_ln132_fu_553_p2;
        trunc_ln124_reg_1000 <= trunc_ln124_fu_501_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln135_reg_1029 <= icmp_ln135_fu_570_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln138_reg_1033 <= icmp_ln138_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln138_fu_581_p2 == 1'd1) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln141_reg_1037 <= icmp_ln141_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln141_fu_601_p2 == 1'd1) & (icmp_ln138_fu_581_p2 == 1'd1) & (icmp_ln135_fu_570_p2 == 1'd1) & (icmp_ln132_fu_553_p2 == 1'd1) & (icmp_ln123_fu_483_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln144_reg_1046 <= icmp_ln144_fu_621_p2;
        ofm_y_reg_1041 <= ofm_y_fu_615_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln107_fu_474_p2 == 1'd0) & (1'd1 == and_ln153_fu_655_p2) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln160_reg_1055 <= icmp_ln160_fu_374_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read_reg_958 <= numReps_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln123_reg_996 == 1'd1) & (icmp_ln107_reg_992 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        outElem_V_reg_1064 <= outElem_V_fu_767_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln107_fu_474_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_fu_474_p2 == 1'd0) & (1'd1 == and_ln153_fu_655_p2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_392 <= current_line_12_fu_128;
    end
end

always @ (*) begin
    if ((icmp_ln104_fu_425_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln123_reg_996 == 1'd1) & (icmp_ln141_reg_1037 == 1'd1) & (icmp_ln138_reg_1033 == 1'd1) & (icmp_ln135_reg_1029 == 1'd1) & (icmp_ln132_reg_1025 == 1'd1) & (icmp_ln107_reg_992 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_sig_allocacmp_ofm_y_1_i_load = select_ln144_1_fu_781_p3;
    end else begin
        ap_sig_allocacmp_ofm_y_1_i_load = ofm_y_1_i_fu_100;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln107_reg_992 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln107_reg_992 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op178_read_state9 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd0))) begin
            inputBuf_0_V_address1 = zext_ln110_fu_839_p1;
        end else if ((1'b1 == ap_condition_436)) begin
            inputBuf_0_V_address1 = zext_ln156_fu_792_p1;
        end else begin
            inputBuf_0_V_address1 = 'bx;
        end
    end else begin
        inputBuf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_0_V_ce0 = 1'b1;
    end else begin
        inputBuf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_0_V_ce1 = 1'b1;
    end else begin
        inputBuf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_0_V_we1 = 1'b1;
    end else begin
        inputBuf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd1))) begin
            inputBuf_1_V_address1 = zext_ln110_fu_839_p1;
        end else if ((1'b1 == ap_condition_448)) begin
            inputBuf_1_V_address1 = zext_ln156_fu_792_p1;
        end else begin
            inputBuf_1_V_address1 = 'bx;
        end
    end else begin
        inputBuf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_1_V_ce0 = 1'b1;
    end else begin
        inputBuf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_1_V_ce1 = 1'b1;
    end else begin
        inputBuf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_1_V_we1 = 1'b1;
    end else begin
        inputBuf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd2))) begin
            inputBuf_2_V_address1 = zext_ln110_fu_839_p1;
        end else if ((1'b1 == ap_condition_459)) begin
            inputBuf_2_V_address1 = zext_ln156_fu_792_p1;
        end else begin
            inputBuf_2_V_address1 = 'bx;
        end
    end else begin
        inputBuf_2_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_2_V_ce0 = 1'b1;
    end else begin
        inputBuf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_2_V_ce1 = 1'b1;
    end else begin
        inputBuf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_2_V_we1 = 1'b1;
    end else begin
        inputBuf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd3))) begin
            inputBuf_3_V_address1 = zext_ln110_fu_839_p1;
        end else if ((1'b1 == ap_condition_470)) begin
            inputBuf_3_V_address1 = zext_ln156_fu_792_p1;
        end else begin
            inputBuf_3_V_address1 = 'bx;
        end
    end else begin
        inputBuf_3_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inputBuf_3_V_ce0 = 1'b1;
    end else begin
        inputBuf_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_3_V_ce1 = 1'b1;
    end else begin
        inputBuf_3_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        inputBuf_3_V_we1 = 1'b1;
    end else begin
        inputBuf_3_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_blk_n = numReps_empty_n;
    end else begin
        numReps_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_blk_n = numReps_out_full_n;
    end else begin
        numReps_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_out_write = 1'b1;
    end else begin
        numReps_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        numReps_read = 1'b1;
    end else begin
        numReps_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln107_reg_992_pp0_iter2_reg == 1'd0) & (icmp_ln123_reg_996_pp0_iter2_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op227_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln104_fu_425_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln104_fu_425_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln104_fu_430_p2 = (indvar_flatten_reg_303 + 46'd1);

assign add_ln105_fu_442_p2 = (i_0_i_reg_314 + 14'd1);

assign add_ln128_fu_519_p2 = (trunc_ln128_5_fu_515_p1 + trunc_ln128_fu_511_p1);

assign add_ln129_1_fu_756_p2 = (2'd1 + trunc_ln124_6_fu_752_p1);

assign add_ln163_fu_661_p2 = (trunc_ln105_fu_470_p1 + 5'd1);

assign and_ln153_fu_655_p2 = (icmp_ln153_fu_643_p2 & icmp_ln153_1_fu_649_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op227_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op178_read_state9 == 1'b1)) | ((icmp_ln107_reg_992 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (ap_predicate_op227_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op178_read_state9 == 1'b1)) | ((icmp_ln107_reg_992 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (ap_predicate_op227_write_state10 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((in_V_V_empty_n == 1'b0) & (ap_predicate_op178_read_state9 == 1'b1)) | ((icmp_ln107_reg_992 == 1'd1) & (in_V_V_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((numReps_out_full_n == 1'b0) | (numReps_empty_n == 1'b0) | (ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter3 = ((out_V_V_full_n == 1'b0) & (ap_predicate_op227_write_state10 == 1'b1));
end

assign ap_block_state7_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_pp0_stage0_iter2 = (((in_V_V_empty_n == 1'b0) & (ap_predicate_op178_read_state9 == 1'b1)) | ((icmp_ln107_reg_992 == 1'd1) & (in_V_V_empty_n == 1'b0)));
end

always @ (*) begin
    ap_condition_436 = ((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd0));
end

always @ (*) begin
    ap_condition_448 = ((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd1));
end

always @ (*) begin
    ap_condition_459 = ((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd2));
end

always @ (*) begin
    ap_condition_470 = ((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd3));
end

always @ (*) begin
    ap_enable_operation_168 = (ap_predicate_op168_load_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_169 = (ap_predicate_op169_load_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_170 = (ap_predicate_op170_load_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_171 = (ap_predicate_op171_load_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_186 = (ap_predicate_op186_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_188 = (ap_predicate_op188_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_190 = (ap_predicate_op190_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_192 = (ap_predicate_op192_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_213 = (ap_predicate_op213_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_215 = (ap_predicate_op215_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_217 = (ap_predicate_op217_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_219 = (ap_predicate_op219_store_state9 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_84 = (ap_predicate_op84_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_86 = (ap_predicate_op86_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_88 = (ap_predicate_op88_load_state8 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_90 = (ap_predicate_op90_load_state8 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_enable_state8_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state9_pp0_iter2_stage0 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_predicate_op168_load_state9 = ((icmp_ln123_reg_996 == 1'd1) & (icmp_ln107_reg_992 == 1'd0));
end

always @ (*) begin
    ap_predicate_op169_load_state9 = ((icmp_ln123_reg_996 == 1'd1) & (icmp_ln107_reg_992 == 1'd0));
end

always @ (*) begin
    ap_predicate_op170_load_state9 = ((icmp_ln123_reg_996 == 1'd1) & (icmp_ln107_reg_992 == 1'd0));
end

always @ (*) begin
    ap_predicate_op171_load_state9 = ((icmp_ln123_reg_996 == 1'd1) & (icmp_ln107_reg_992 == 1'd0));
end

always @ (*) begin
    ap_predicate_op178_read_state9 = ((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0));
end

always @ (*) begin
    ap_predicate_op186_store_state9 = ((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op188_store_state9 = ((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op190_store_state9 = ((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op192_store_state9 = ((1'd1 == and_ln153_reg_1051) & (icmp_ln107_reg_992 == 1'd0) & (trunc_ln321_20_fu_800_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op213_store_state9 = ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd2));
end

always @ (*) begin
    ap_predicate_op215_store_state9 = ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd1));
end

always @ (*) begin
    ap_predicate_op217_store_state9 = ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd0));
end

always @ (*) begin
    ap_predicate_op219_store_state9 = ((icmp_ln107_reg_992 == 1'd1) & (trunc_ln321_fu_847_p1 == 2'd3));
end

always @ (*) begin
    ap_predicate_op227_write_state10 = ((icmp_ln107_reg_992_pp0_iter2_reg == 1'd0) & (icmp_ln123_reg_996_pp0_iter2_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op84_load_state8 = ((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln123_fu_483_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op86_load_state8 = ((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln123_fu_483_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op88_load_state8 = ((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln123_fu_483_p2 == 1'd1));
end

always @ (*) begin
    ap_predicate_op90_load_state8 = ((icmp_ln107_fu_474_p2 == 1'd0) & (icmp_ln123_fu_483_p2 == 1'd1));
end

assign count_simd_fu_547_p2 = (32'd1 + count_simd_6_fu_120);

assign counter_internal_blo_24_fu_700_p2 = (counter_internal_blo_fu_132 + 32'd1);

assign current_block_write_31_fu_863_p3 = ((icmp_ln116_fu_857_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_fu_851_p2);

assign current_block_write_32_fu_807_p2 = (current_block_write_30_fu_124 + 32'd1);

assign current_block_write_33_fu_819_p3 = ((icmp_ln165_fu_813_p2[0:0] === 1'b1) ? 32'd0 : current_block_write_32_fu_807_p2);

assign current_block_write_34_fu_827_p3 = ((icmp_ln160_reg_1055[0:0] === 1'b1) ? current_block_write_33_fu_819_p3 : current_block_write_30_fu_124);

assign current_block_write_fu_851_p2 = (current_block_write_30_fu_124 + 32'd1);

assign current_line_in_bloc_fu_533_p2 = (shl_ln_fu_525_p3 + count_simd_6_fu_120);

assign grp_fu_368_p2 = (current_line_12_fu_128 + 32'd1);

assign grp_fu_419_p0 = grp_fu_419_p00;

assign grp_fu_419_p00 = numReps_read_reg_958;

assign grp_fu_419_p1 = 46'd14292;

assign i_fu_448_p3 = ((icmp_ln105_fu_436_p2[0:0] === 1'b1) ? 14'd1 : add_ln105_fu_442_p2);

assign icmp_ln104_fu_425_p2 = ((indvar_flatten_reg_303 == bound_reg_968) ? 1'b1 : 1'b0);

assign icmp_ln105_fu_436_p2 = ((i_0_i_reg_314 == 14'd14292) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_474_p2 = ((inp_6_fu_112 < 32'd180) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_380_p2 = ((grp_fu_368_p2 == 32'd60) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_857_p2 = ((current_block_write_fu_851_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln123_fu_483_p2 = ((counter_internal_blo_fu_132 < 32'd503) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_553_p2 = ((count_simd_fu_547_p2 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln135_fu_570_p2 = ((k_x_fu_564_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_581_p2 = ((k_y_fu_505_p2 == 32'd3) ? 1'b1 : 1'b0);

assign icmp_ln141_fu_601_p2 = ((ofm_x_fu_595_p2 == 32'd28) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_621_p2 = ((ofm_y_fu_615_p2 == 32'd28) ? 1'b1 : 1'b0);

assign icmp_ln153_1_fu_649_p2 = ((select_ln105_fu_462_p3 < 32'd30) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_643_p2 = ((counter_internal_blo_fu_132 < 32'd59) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_374_p2 = ((grp_fu_368_p2 == 32'd60) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_813_p2 = ((current_block_write_32_fu_807_p2 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln172_fu_706_p2 = ((counter_internal_blo_24_fu_700_p2 == 32'd503) ? 1'b1 : 1'b0);

assign inp_fu_725_p2 = (inp_6_fu_112 + 32'd1);

assign inputBuf_0_V_address0 = zext_ln129_fu_539_p1;

assign inputBuf_1_V_address0 = zext_ln129_fu_539_p1;

assign inputBuf_2_V_address0 = zext_ln129_fu_539_p1;

assign inputBuf_3_V_address0 = zext_ln129_fu_539_p1;

assign k_x_fu_564_p2 = (k_x_6_fu_116 + 32'd1);

assign k_y_fu_505_p2 = (32'd1 + k_y_6_fu_108);

assign numReps_out_din = numReps_dout;

assign ofm_x_fu_595_p2 = (ofm_x_6_fu_104 + 32'd1);

assign ofm_y_fu_615_p2 = (ap_sig_allocacmp_ofm_y_1_i_load + 32'd1);

assign outElem_V_fu_767_p5 = (add_ln129_1_fu_756_p2 + trunc_ln124_reg_1000);

assign out_V_V_din = outElem_V_reg_1064;

assign read_block_13_fu_675_p3 = ((icmp_ln160_fu_374_p2[0:0] === 1'b1) ? add_ln163_fu_661_p2 : trunc_ln105_fu_470_p1);

assign read_block_fu_741_p2 = (select_ln105_fu_462_p3 + 32'd1);

assign select_ln105_fu_462_p3 = ((icmp_ln105_reg_982[0:0] === 1'b1) ? 32'd0 : read_block_12_fu_96);

assign select_ln144_1_fu_781_p3 = ((icmp_ln144_reg_1046[0:0] === 1'b1) ? 32'd0 : ofm_y_reg_1041);

assign select_ln144_fu_627_p3 = ((icmp_ln144_fu_621_p2[0:0] === 1'b1) ? 32'd0 : inp_6_fu_112);

assign select_ln160_fu_667_p3 = ((icmp_ln160_fu_374_p2[0:0] === 1'b1) ? 32'd0 : grp_fu_368_p2);

assign select_ln172_fu_712_p3 = ((icmp_ln172_fu_706_p2[0:0] === 1'b1) ? 32'd0 : counter_internal_blo_24_fu_700_p2);

assign shl_ln_fu_525_p3 = {{add_ln128_fu_519_p2}, {1'd0}};

assign trunc_ln105_fu_470_p1 = select_ln105_fu_462_p3[4:0];

assign trunc_ln124_6_fu_752_p1 = current_block_write_30_fu_124[1:0];

assign trunc_ln124_fu_501_p1 = k_y_6_fu_108[1:0];

assign trunc_ln128_5_fu_515_p1 = ofm_x_6_fu_104[30:0];

assign trunc_ln128_fu_511_p1 = k_x_6_fu_116[30:0];

assign trunc_ln321_20_fu_800_p1 = current_block_write_30_fu_124[1:0];

assign trunc_ln321_fu_847_p1 = current_block_write_30_fu_124[1:0];

assign zext_ln110_fu_839_p1 = reg_392;

assign zext_ln129_fu_539_p1 = current_line_in_bloc_fu_533_p2;

assign zext_ln156_fu_792_p1 = reg_392;

assign zext_ln160_fu_683_p1 = read_block_13_fu_675_p3;

endmodule //ConvolutionInputGene
