// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Matrix_Vector_Activa_4 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        in_V_V_dout,
        in_V_V_empty_n,
        in_V_V_read,
        out_V_V_din,
        out_V_V_full_n,
        out_V_V_write,
        mul_ln120_loc_dout,
        mul_ln120_loc_empty_n,
        mul_ln120_loc_read,
        weights0_m_weights_V_address0,
        weights0_m_weights_V_ce0,
        weights0_m_weights_V_q0,
        weights0_m_weights_V_1_address0,
        weights0_m_weights_V_1_ce0,
        weights0_m_weights_V_1_q0,
        weights0_m_weights_V_2_address0,
        weights0_m_weights_V_2_ce0,
        weights0_m_weights_V_2_q0,
        weights0_m_weights_V_3_address0,
        weights0_m_weights_V_3_ce0,
        weights0_m_weights_V_3_q0,
        weights0_m_weights_V_4_address0,
        weights0_m_weights_V_4_ce0,
        weights0_m_weights_V_4_q0,
        weights0_m_weights_V_5_address0,
        weights0_m_weights_V_5_ce0,
        weights0_m_weights_V_5_q0,
        weights0_m_weights_V_6_address0,
        weights0_m_weights_V_6_ce0,
        weights0_m_weights_V_6_q0,
        weights0_m_weights_V_7_address0,
        weights0_m_weights_V_7_ce0,
        weights0_m_weights_V_7_q0,
        weights0_m_weights_V_8_address0,
        weights0_m_weights_V_8_ce0,
        weights0_m_weights_V_8_q0,
        weights0_m_weights_V_9_address0,
        weights0_m_weights_V_9_ce0,
        weights0_m_weights_V_9_q0,
        weights0_m_weights_V_10_address0,
        weights0_m_weights_V_10_ce0,
        weights0_m_weights_V_10_q0,
        weights0_m_weights_V_11_address0,
        weights0_m_weights_V_11_ce0,
        weights0_m_weights_V_11_q0,
        weights0_m_weights_V_12_address0,
        weights0_m_weights_V_12_ce0,
        weights0_m_weights_V_12_q0,
        weights0_m_weights_V_13_address0,
        weights0_m_weights_V_13_ce0,
        weights0_m_weights_V_13_q0,
        weights0_m_weights_V_14_address0,
        weights0_m_weights_V_14_ce0,
        weights0_m_weights_V_14_q0,
        weights0_m_weights_V_15_address0,
        weights0_m_weights_V_15_ce0,
        weights0_m_weights_V_15_q0,
        threshs0_m_threshold_15_address0,
        threshs0_m_threshold_15_ce0,
        threshs0_m_threshold_15_q0,
        threshs0_m_threshold_14_address0,
        threshs0_m_threshold_14_ce0,
        threshs0_m_threshold_14_q0,
        threshs0_m_threshold_7_address0,
        threshs0_m_threshold_7_ce0,
        threshs0_m_threshold_7_q0,
        threshs0_m_threshold_6_address0,
        threshs0_m_threshold_6_ce0,
        threshs0_m_threshold_6_q0,
        threshs0_m_threshold_5_address0,
        threshs0_m_threshold_5_ce0,
        threshs0_m_threshold_5_q0,
        threshs0_m_threshold_4_address0,
        threshs0_m_threshold_4_ce0,
        threshs0_m_threshold_4_q0,
        threshs0_m_threshold_3_address0,
        threshs0_m_threshold_3_ce0,
        threshs0_m_threshold_3_q0,
        threshs0_m_threshold_2_address0,
        threshs0_m_threshold_2_ce0,
        threshs0_m_threshold_2_q0,
        threshs0_m_threshold_1_address0,
        threshs0_m_threshold_1_ce0,
        threshs0_m_threshold_1_q0,
        threshs0_m_threshold_address0,
        threshs0_m_threshold_ce0,
        threshs0_m_threshold_q0,
        threshs0_m_threshold_13_address0,
        threshs0_m_threshold_13_ce0,
        threshs0_m_threshold_13_q0,
        threshs0_m_threshold_12_address0,
        threshs0_m_threshold_12_ce0,
        threshs0_m_threshold_12_q0,
        threshs0_m_threshold_11_address0,
        threshs0_m_threshold_11_ce0,
        threshs0_m_threshold_11_q0,
        threshs0_m_threshold_10_address0,
        threshs0_m_threshold_10_ce0,
        threshs0_m_threshold_10_q0,
        threshs0_m_threshold_9_address0,
        threshs0_m_threshold_9_ce0,
        threshs0_m_threshold_9_q0,
        threshs0_m_threshold_8_address0,
        threshs0_m_threshold_8_ce0,
        threshs0_m_threshold_8_q0
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_pp0_stage0 = 4'd4;
parameter    ap_ST_fsm_state8 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [23:0] in_V_V_dout;
input   in_V_V_empty_n;
output   in_V_V_read;
output  [15:0] out_V_V_din;
input   out_V_V_full_n;
output   out_V_V_write;
input  [31:0] mul_ln120_loc_dout;
input   mul_ln120_loc_empty_n;
output   mul_ln120_loc_read;
output  [5:0] weights0_m_weights_V_address0;
output   weights0_m_weights_V_ce0;
input  [2:0] weights0_m_weights_V_q0;
output  [5:0] weights0_m_weights_V_1_address0;
output   weights0_m_weights_V_1_ce0;
input  [2:0] weights0_m_weights_V_1_q0;
output  [5:0] weights0_m_weights_V_2_address0;
output   weights0_m_weights_V_2_ce0;
input  [2:0] weights0_m_weights_V_2_q0;
output  [5:0] weights0_m_weights_V_3_address0;
output   weights0_m_weights_V_3_ce0;
input  [2:0] weights0_m_weights_V_3_q0;
output  [5:0] weights0_m_weights_V_4_address0;
output   weights0_m_weights_V_4_ce0;
input  [2:0] weights0_m_weights_V_4_q0;
output  [5:0] weights0_m_weights_V_5_address0;
output   weights0_m_weights_V_5_ce0;
input  [2:0] weights0_m_weights_V_5_q0;
output  [5:0] weights0_m_weights_V_6_address0;
output   weights0_m_weights_V_6_ce0;
input  [2:0] weights0_m_weights_V_6_q0;
output  [5:0] weights0_m_weights_V_7_address0;
output   weights0_m_weights_V_7_ce0;
input  [2:0] weights0_m_weights_V_7_q0;
output  [5:0] weights0_m_weights_V_8_address0;
output   weights0_m_weights_V_8_ce0;
input  [2:0] weights0_m_weights_V_8_q0;
output  [5:0] weights0_m_weights_V_9_address0;
output   weights0_m_weights_V_9_ce0;
input  [2:0] weights0_m_weights_V_9_q0;
output  [5:0] weights0_m_weights_V_10_address0;
output   weights0_m_weights_V_10_ce0;
input  [2:0] weights0_m_weights_V_10_q0;
output  [5:0] weights0_m_weights_V_11_address0;
output   weights0_m_weights_V_11_ce0;
input  [2:0] weights0_m_weights_V_11_q0;
output  [5:0] weights0_m_weights_V_12_address0;
output   weights0_m_weights_V_12_ce0;
input  [2:0] weights0_m_weights_V_12_q0;
output  [5:0] weights0_m_weights_V_13_address0;
output   weights0_m_weights_V_13_ce0;
input  [2:0] weights0_m_weights_V_13_q0;
output  [5:0] weights0_m_weights_V_14_address0;
output   weights0_m_weights_V_14_ce0;
input  [2:0] weights0_m_weights_V_14_q0;
output  [5:0] weights0_m_weights_V_15_address0;
output   weights0_m_weights_V_15_ce0;
input  [2:0] weights0_m_weights_V_15_q0;
output  [1:0] threshs0_m_threshold_15_address0;
output   threshs0_m_threshold_15_ce0;
input  [23:0] threshs0_m_threshold_15_q0;
output  [1:0] threshs0_m_threshold_14_address0;
output   threshs0_m_threshold_14_ce0;
input  [23:0] threshs0_m_threshold_14_q0;
output  [1:0] threshs0_m_threshold_7_address0;
output   threshs0_m_threshold_7_ce0;
input  [23:0] threshs0_m_threshold_7_q0;
output  [1:0] threshs0_m_threshold_6_address0;
output   threshs0_m_threshold_6_ce0;
input  [23:0] threshs0_m_threshold_6_q0;
output  [1:0] threshs0_m_threshold_5_address0;
output   threshs0_m_threshold_5_ce0;
input  [23:0] threshs0_m_threshold_5_q0;
output  [1:0] threshs0_m_threshold_4_address0;
output   threshs0_m_threshold_4_ce0;
input  [23:0] threshs0_m_threshold_4_q0;
output  [1:0] threshs0_m_threshold_3_address0;
output   threshs0_m_threshold_3_ce0;
input  [23:0] threshs0_m_threshold_3_q0;
output  [1:0] threshs0_m_threshold_2_address0;
output   threshs0_m_threshold_2_ce0;
input  [23:0] threshs0_m_threshold_2_q0;
output  [1:0] threshs0_m_threshold_1_address0;
output   threshs0_m_threshold_1_ce0;
input  [23:0] threshs0_m_threshold_1_q0;
output  [1:0] threshs0_m_threshold_address0;
output   threshs0_m_threshold_ce0;
input  [23:0] threshs0_m_threshold_q0;
output  [1:0] threshs0_m_threshold_13_address0;
output   threshs0_m_threshold_13_ce0;
input  [23:0] threshs0_m_threshold_13_q0;
output  [1:0] threshs0_m_threshold_12_address0;
output   threshs0_m_threshold_12_ce0;
input  [23:0] threshs0_m_threshold_12_q0;
output  [1:0] threshs0_m_threshold_11_address0;
output   threshs0_m_threshold_11_ce0;
input  [23:0] threshs0_m_threshold_11_q0;
output  [1:0] threshs0_m_threshold_10_address0;
output   threshs0_m_threshold_10_ce0;
input  [23:0] threshs0_m_threshold_10_q0;
output  [1:0] threshs0_m_threshold_9_address0;
output   threshs0_m_threshold_9_ce0;
input  [23:0] threshs0_m_threshold_9_q0;
output  [1:0] threshs0_m_threshold_8_address0;
output   threshs0_m_threshold_8_ce0;
input  [23:0] threshs0_m_threshold_8_q0;

reg ap_done;
reg ap_idle;
reg start_write;
reg in_V_V_read;
reg out_V_V_write;
reg mul_ln120_loc_read;
reg weights0_m_weights_V_ce0;
reg weights0_m_weights_V_1_ce0;
reg weights0_m_weights_V_2_ce0;
reg weights0_m_weights_V_3_ce0;
reg weights0_m_weights_V_4_ce0;
reg weights0_m_weights_V_5_ce0;
reg weights0_m_weights_V_6_ce0;
reg weights0_m_weights_V_7_ce0;
reg weights0_m_weights_V_8_ce0;
reg weights0_m_weights_V_9_ce0;
reg weights0_m_weights_V_10_ce0;
reg weights0_m_weights_V_11_ce0;
reg weights0_m_weights_V_12_ce0;
reg weights0_m_weights_V_13_ce0;
reg weights0_m_weights_V_14_ce0;
reg weights0_m_weights_V_15_ce0;
reg threshs0_m_threshold_15_ce0;
reg threshs0_m_threshold_14_ce0;
reg threshs0_m_threshold_7_ce0;
reg threshs0_m_threshold_6_ce0;
reg threshs0_m_threshold_5_ce0;
reg threshs0_m_threshold_4_ce0;
reg threshs0_m_threshold_3_ce0;
reg threshs0_m_threshold_2_ce0;
reg threshs0_m_threshold_1_ce0;
reg threshs0_m_threshold_ce0;
reg threshs0_m_threshold_13_ce0;
reg threshs0_m_threshold_12_ce0;
reg threshs0_m_threshold_11_ce0;
reg threshs0_m_threshold_10_ce0;
reg threshs0_m_threshold_9_ce0;
reg threshs0_m_threshold_8_ce0;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    in_V_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln122_reg_3477;
reg   [0:0] icmp_ln125_reg_3486;
reg    out_V_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] icmp_ln159_reg_3538;
reg   [0:0] icmp_ln159_reg_3538_pp0_iter3_reg;
reg    mul_ln120_loc_blk_n;
reg   [31:0] i_0_i_i_reg_707;
reg   [31:0] mul_ln120_loc_read_reg_3466;
reg    ap_block_state1;
wire   [31:0] add_ln122_fu_752_p2;
reg   [31:0] add_ln122_reg_3472;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln122_fu_758_p2;
wire    ap_block_state3_pp0_stage0_iter0;
reg    ap_predicate_op84_read_state4;
reg    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
reg    ap_block_state7_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [31:0] i_fu_763_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln125_fu_772_p2;
wire   [3:0] trunc_ln321_5_fu_781_p1;
reg   [3:0] trunc_ln321_5_reg_3490;
wire   [3:0] trunc_ln321_fu_785_p1;
reg   [3:0] trunc_ln321_reg_3495;
wire   [0:0] icmp_ln321_6_fu_789_p2;
reg   [0:0] icmp_ln321_6_reg_3505;
wire   [0:0] icmp_ln321_7_fu_795_p2;
reg   [0:0] icmp_ln321_7_reg_3511;
wire   [0:0] icmp_ln137_fu_804_p2;
reg   [0:0] icmp_ln137_reg_3518;
reg   [0:0] icmp_ln137_reg_3518_pp0_iter1_reg;
wire   [0:0] icmp_ln159_fu_816_p2;
reg   [0:0] icmp_ln159_reg_3538_pp0_iter1_reg;
reg   [0:0] icmp_ln159_reg_3538_pp0_iter2_reg;
reg   [31:0] nf_assign_load_reg_3542;
reg   [31:0] nf_assign_load_reg_3542_pp0_iter1_reg;
wire   [31:0] nf_fu_830_p2;
reg   [31:0] nf_reg_3547;
wire   [23:0] inElem_V_fu_863_p11;
wire   [23:0] select_ln137_fu_1278_p3;
reg   [23:0] select_ln137_reg_3643;
wire   [23:0] select_ln137_19_fu_1285_p3;
reg   [23:0] select_ln137_19_reg_3648;
wire   [23:0] select_ln137_20_fu_1292_p3;
reg   [23:0] select_ln137_20_reg_3653;
wire   [23:0] select_ln137_21_fu_1299_p3;
reg   [23:0] select_ln137_21_reg_3658;
wire   [23:0] select_ln137_22_fu_1306_p3;
reg   [23:0] select_ln137_22_reg_3663;
wire   [23:0] select_ln137_23_fu_1313_p3;
reg   [23:0] select_ln137_23_reg_3668;
wire   [23:0] select_ln137_24_fu_1320_p3;
reg   [23:0] select_ln137_24_reg_3673;
wire   [23:0] select_ln137_25_fu_1327_p3;
reg   [23:0] select_ln137_25_reg_3678;
wire   [23:0] select_ln137_26_fu_1334_p3;
reg   [23:0] select_ln137_26_reg_3683;
wire   [23:0] select_ln137_27_fu_1341_p3;
reg   [23:0] select_ln137_27_reg_3688;
wire   [23:0] select_ln137_28_fu_1348_p3;
reg   [23:0] select_ln137_28_reg_3693;
wire   [23:0] select_ln137_29_fu_1355_p3;
reg   [23:0] select_ln137_29_reg_3698;
wire   [23:0] select_ln137_30_fu_1362_p3;
reg   [23:0] select_ln137_30_reg_3703;
wire   [23:0] select_ln137_31_fu_1369_p3;
reg   [23:0] select_ln137_31_reg_3708;
wire   [23:0] select_ln137_32_fu_1376_p3;
reg   [23:0] select_ln137_32_reg_3713;
wire   [23:0] select_ln137_33_fu_1383_p3;
reg   [23:0] select_ln137_33_reg_3718;
wire   [8:0] select_ln89_fu_1412_p3;
reg   [8:0] select_ln89_reg_3723;
wire   [10:0] add_ln703_1_fu_1516_p2;
reg   [10:0] add_ln703_1_reg_3728;
wire   [8:0] select_ln89_3_fu_1530_p3;
reg   [8:0] select_ln89_3_reg_3733;
wire   [10:0] add_ln703_4_fu_1594_p2;
reg   [10:0] add_ln703_4_reg_3738;
wire   [8:0] select_ln89_6_fu_1608_p3;
reg   [8:0] select_ln89_6_reg_3743;
wire   [10:0] add_ln703_7_fu_1672_p2;
reg   [10:0] add_ln703_7_reg_3748;
wire   [8:0] select_ln89_9_fu_1686_p3;
reg   [8:0] select_ln89_9_reg_3753;
wire   [10:0] add_ln703_10_fu_1750_p2;
reg   [10:0] add_ln703_10_reg_3758;
wire   [8:0] select_ln89_12_fu_1764_p3;
reg   [8:0] select_ln89_12_reg_3763;
wire   [10:0] add_ln703_13_fu_1828_p2;
reg   [10:0] add_ln703_13_reg_3768;
wire   [8:0] select_ln89_15_fu_1842_p3;
reg   [8:0] select_ln89_15_reg_3773;
wire   [10:0] add_ln703_16_fu_1906_p2;
reg   [10:0] add_ln703_16_reg_3778;
wire   [8:0] select_ln89_18_fu_1920_p3;
reg   [8:0] select_ln89_18_reg_3783;
wire   [10:0] add_ln703_19_fu_1984_p2;
reg   [10:0] add_ln703_19_reg_3788;
wire   [8:0] select_ln89_21_fu_1998_p3;
reg   [8:0] select_ln89_21_reg_3793;
wire   [10:0] add_ln703_22_fu_2062_p2;
reg   [10:0] add_ln703_22_reg_3798;
wire   [8:0] select_ln89_24_fu_2076_p3;
reg   [8:0] select_ln89_24_reg_3803;
wire   [10:0] add_ln703_25_fu_2140_p2;
reg   [10:0] add_ln703_25_reg_3808;
wire   [8:0] select_ln89_27_fu_2154_p3;
reg   [8:0] select_ln89_27_reg_3813;
wire   [10:0] add_ln703_28_fu_2218_p2;
reg   [10:0] add_ln703_28_reg_3818;
wire   [8:0] select_ln89_30_fu_2232_p3;
reg   [8:0] select_ln89_30_reg_3823;
wire   [10:0] add_ln703_31_fu_2296_p2;
reg   [10:0] add_ln703_31_reg_3828;
wire   [8:0] select_ln89_33_fu_2310_p3;
reg   [8:0] select_ln89_33_reg_3833;
wire   [10:0] add_ln703_34_fu_2374_p2;
reg   [10:0] add_ln703_34_reg_3838;
wire   [8:0] select_ln89_36_fu_2388_p3;
reg   [8:0] select_ln89_36_reg_3843;
wire   [10:0] add_ln703_37_fu_2452_p2;
reg   [10:0] add_ln703_37_reg_3848;
wire   [8:0] select_ln89_39_fu_2466_p3;
reg   [8:0] select_ln89_39_reg_3853;
wire   [10:0] add_ln703_40_fu_2530_p2;
reg   [10:0] add_ln703_40_reg_3858;
wire   [8:0] select_ln89_42_fu_2544_p3;
reg   [8:0] select_ln89_42_reg_3863;
wire   [10:0] add_ln703_43_fu_2608_p2;
reg   [10:0] add_ln703_43_reg_3868;
wire   [8:0] select_ln89_45_fu_2622_p3;
reg   [8:0] select_ln89_45_reg_3873;
wire   [10:0] add_ln703_46_fu_2686_p2;
reg   [10:0] add_ln703_46_reg_3878;
wire   [23:0] accu_0_0_V_fu_2730_p2;
reg   [23:0] accu_0_0_V_reg_3963;
wire   [23:0] accu_0_1_V_fu_2755_p2;
reg   [23:0] accu_0_1_V_reg_3968;
wire   [23:0] accu_0_2_V_fu_2780_p2;
reg   [23:0] accu_0_2_V_reg_3973;
wire   [23:0] accu_0_3_V_fu_2805_p2;
reg   [23:0] accu_0_3_V_reg_3978;
wire   [23:0] accu_0_4_V_fu_2830_p2;
reg   [23:0] accu_0_4_V_reg_3983;
wire   [23:0] accu_0_5_V_fu_2855_p2;
reg   [23:0] accu_0_5_V_reg_3988;
wire   [23:0] accu_0_6_V_fu_2880_p2;
reg   [23:0] accu_0_6_V_reg_3993;
wire   [23:0] accu_0_7_V_fu_2905_p2;
reg   [23:0] accu_0_7_V_reg_3998;
wire   [23:0] accu_0_8_V_fu_2930_p2;
reg   [23:0] accu_0_8_V_reg_4003;
wire   [23:0] accu_0_9_V_fu_2955_p2;
reg   [23:0] accu_0_9_V_reg_4008;
wire   [23:0] accu_0_10_V_fu_2980_p2;
reg   [23:0] accu_0_10_V_reg_4013;
wire   [23:0] accu_0_11_V_fu_3005_p2;
reg   [23:0] accu_0_11_V_reg_4018;
wire   [23:0] accu_0_12_V_fu_3030_p2;
reg   [23:0] accu_0_12_V_reg_4023;
wire   [23:0] accu_0_13_V_fu_3055_p2;
reg   [23:0] accu_0_13_V_reg_4028;
wire   [23:0] accu_0_14_V_fu_3080_p2;
reg   [23:0] accu_0_14_V_reg_4033;
wire   [23:0] accu_0_15_V_fu_3105_p2;
reg   [23:0] accu_0_15_V_reg_4038;
reg   [23:0] threshs0_m_threshold_17_reg_4043;
reg   [23:0] threshs0_m_threshold_19_reg_4048;
reg   [23:0] threshs0_m_threshold_21_reg_4053;
reg   [23:0] threshs0_m_threshold_23_reg_4058;
reg   [23:0] threshs0_m_threshold_25_reg_4063;
reg   [23:0] threshs0_m_threshold_27_reg_4068;
reg   [23:0] threshs0_m_threshold_29_reg_4073;
reg   [23:0] threshs0_m_threshold_31_reg_4078;
reg   [23:0] threshs0_m_threshold_33_reg_4083;
reg   [23:0] threshs0_m_threshold_35_reg_4088;
reg   [23:0] threshs0_m_threshold_37_reg_4093;
reg   [23:0] threshs0_m_threshold_39_reg_4098;
reg   [23:0] threshs0_m_threshold_41_reg_4103;
reg   [23:0] threshs0_m_threshold_43_reg_4108;
reg   [23:0] threshs0_m_threshold_45_reg_4113;
reg   [23:0] threshs0_m_threshold_47_reg_4118;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire   [23:0] ap_phi_reg_pp0_iter0_act_m_val_V_reg_718;
reg   [23:0] ap_phi_reg_pp0_iter1_act_m_val_V_reg_718;
reg   [23:0] ap_phi_reg_pp0_iter2_act_m_val_V_reg_718;
wire   [63:0] zext_ln89_fu_1169_p1;
wire   [63:0] zext_ln142_fu_2692_p1;
reg   [23:0] accu_V_0_0_0_i_i_fu_160;
reg   [23:0] ap_sig_allocacmp_accu_V_0_0_0_i_i_loa;
reg   [23:0] accu_V_0_1_0_i_i_fu_164;
reg   [23:0] ap_sig_allocacmp_accu_V_0_1_0_i_i_loa;
reg   [23:0] accu_V_0_2_0_i_i_fu_168;
reg   [23:0] ap_sig_allocacmp_accu_V_0_2_0_i_i_loa;
reg   [23:0] accu_V_0_3_0_i_i_fu_172;
reg   [23:0] ap_sig_allocacmp_accu_V_0_3_0_i_i_loa;
reg   [23:0] accu_V_0_4_0_i_i_fu_176;
reg   [23:0] ap_sig_allocacmp_accu_V_0_4_0_i_i_loa;
reg   [23:0] accu_V_0_5_0_i_i_fu_180;
reg   [23:0] ap_sig_allocacmp_accu_V_0_5_0_i_i_loa;
reg   [23:0] accu_V_0_6_0_i_i_fu_184;
reg   [23:0] ap_sig_allocacmp_accu_V_0_6_0_i_i_loa;
reg   [23:0] accu_V_0_7_0_i_i_fu_188;
reg   [23:0] ap_sig_allocacmp_accu_V_0_7_0_i_i_loa;
reg   [23:0] accu_V_0_8_0_i_i_fu_192;
reg   [23:0] ap_sig_allocacmp_accu_V_0_8_0_i_i_loa;
reg   [23:0] accu_V_0_9_0_i_i_fu_196;
reg   [23:0] ap_sig_allocacmp_accu_V_0_9_0_i_i_loa;
reg   [23:0] accu_V_0_10_0_i_i_fu_200;
reg   [23:0] ap_sig_allocacmp_accu_V_0_10_0_i_i_lo;
reg   [23:0] accu_V_0_11_0_i_i_fu_204;
reg   [23:0] ap_sig_allocacmp_accu_V_0_11_0_i_i_lo;
reg   [23:0] accu_V_0_12_0_i_i_fu_208;
reg   [23:0] ap_sig_allocacmp_accu_V_0_12_0_i_i_lo;
reg   [23:0] accu_V_0_13_0_i_i_fu_212;
reg   [23:0] ap_sig_allocacmp_accu_V_0_13_0_i_i_lo;
reg   [23:0] accu_V_0_14_0_i_i_fu_216;
reg   [23:0] ap_sig_allocacmp_accu_V_0_14_0_i_i_lo;
reg   [23:0] accu_V_0_15_0_i_i_fu_220;
reg   [23:0] ap_sig_allocacmp_accu_V_0_15_0_i_i_lo;
reg   [31:0] tile_assign_fu_224;
wire   [31:0] tile_fu_1189_p2;
wire   [31:0] select_ln173_3_fu_1212_p3;
reg   [31:0] sf_5_fu_228;
wire   [31:0] sf_fu_810_p2;
reg   [31:0] nf_assign_fu_232;
wire   [31:0] select_ln173_fu_1205_p3;
reg   [31:0] ap_sig_allocacmp_nf_assign_load_5;
reg   [31:0] ap_sig_allocacmp_nf_assign_load;
reg   [23:0] inputBuf_8_V_1_fu_236;
wire   [23:0] inputBuf_8_V_19_fu_1114_p3;
reg   [23:0] inputBuf_8_V_2_fu_240;
wire   [23:0] inputBuf_8_V_18_fu_1107_p3;
reg   [23:0] inputBuf_8_V_4_fu_244;
wire   [23:0] inputBuf_8_V_16_fu_1092_p3;
reg   [23:0] inputBuf_8_V_6_fu_248;
wire   [23:0] inputBuf_8_V_15_fu_1076_p3;
reg   [23:0] inputBuf_8_V_7_fu_252;
wire   [23:0] inputBuf_8_V_14_fu_1052_p3;
reg   [23:0] inputBuf_8_V_5_fu_256;
wire   [23:0] inputBuf_8_V_13_fu_1036_p3;
reg   [23:0] inputBuf_8_V_3_fu_260;
wire   [23:0] inputBuf_8_V_12_fu_1012_p3;
reg   [23:0] inputBuf_8_V_8_fu_264;
wire   [23:0] inputBuf_8_V_11_fu_988_p3;
reg   [23:0] inputBuf_8_V_9_fu_268;
wire   [23:0] inputBuf_8_V_fu_956_p3;
reg    ap_block_pp0_stage0_01001;
wire   [31:0] shl_ln122_fu_742_p2;
wire   [31:0] shl_ln122_4_fu_747_p2;
wire   [0:0] icmp_ln321_5_fu_911_p2;
wire   [0:0] icmp_ln321_4_fu_906_p2;
wire   [0:0] icmp_ln321_3_fu_901_p2;
wire   [0:0] icmp_ln321_2_fu_896_p2;
wire   [0:0] icmp_ln321_1_fu_891_p2;
wire   [0:0] icmp_ln321_fu_886_p2;
wire   [0:0] or_ln321_fu_916_p2;
wire   [0:0] or_ln321_1_fu_920_p2;
wire   [0:0] or_ln321_2_fu_926_p2;
wire   [0:0] or_ln321_3_fu_932_p2;
wire   [0:0] or_ln321_4_fu_938_p2;
wire   [0:0] or_ln321_5_fu_944_p2;
wire   [0:0] or_ln321_6_fu_950_p2;
wire   [23:0] select_ln321_fu_964_p3;
wire   [23:0] select_ln321_1_fu_972_p3;
wire   [23:0] select_ln321_2_fu_980_p3;
wire   [23:0] select_ln321_4_fu_996_p3;
wire   [23:0] select_ln321_5_fu_1004_p3;
wire   [23:0] select_ln321_7_fu_1020_p3;
wire   [23:0] select_ln321_8_fu_1028_p3;
wire   [23:0] select_ln321_10_fu_1044_p3;
wire   [23:0] select_ln321_12_fu_1060_p3;
wire   [23:0] select_ln321_13_fu_1068_p3;
wire   [23:0] select_ln321_15_fu_1084_p3;
wire   [23:0] inputBuf_8_V_17_fu_1100_p3;
wire   [0:0] icmp_ln173_fu_1200_p2;
wire   [7:0] trunc_ln647_fu_1398_p1;
wire  signed [8:0] sext_ln703_fu_1402_p1;
wire   [0:0] p_Result_0_i_i_fu_1390_p3;
wire   [8:0] sub_ln1253_fu_1406_p2;
wire   [7:0] arg_V_read_assign_1_fu_1428_p4;
wire  signed [8:0] sext_ln703_2_fu_1438_p1;
wire   [0:0] p_Result_0_1_i_i_fu_1420_p3;
wire   [8:0] sub_ln1253_1_fu_1442_p2;
wire   [8:0] select_ln89_1_fu_1448_p3;
wire   [9:0] shl_ln703_1_fu_1456_p3;
wire   [7:0] arg_V_read_assign_2_fu_1476_p4;
wire  signed [8:0] sext_ln703_3_fu_1486_p1;
wire   [0:0] p_Result_0_2_i_i_fu_1468_p3;
wire   [8:0] sub_ln1253_2_fu_1490_p2;
wire   [8:0] select_ln89_2_fu_1496_p3;
wire   [9:0] shl_ln703_2_fu_1504_p3;
wire  signed [10:0] sext_ln170_fu_1464_p1;
wire  signed [10:0] sext_ln703_4_fu_1512_p1;
wire   [0:0] p_Result_1_i_i_fu_1522_p3;
wire   [0:0] p_Result_1_1_i_i_fu_1538_p3;
wire   [8:0] select_ln89_4_fu_1546_p3;
wire   [9:0] shl_ln703_4_fu_1554_p3;
wire   [0:0] p_Result_1_2_i_i_fu_1566_p3;
wire   [8:0] select_ln89_5_fu_1574_p3;
wire   [9:0] shl_ln703_5_fu_1582_p3;
wire  signed [10:0] sext_ln170_1_fu_1562_p1;
wire  signed [10:0] sext_ln703_7_fu_1590_p1;
wire   [0:0] p_Result_2_i_i_fu_1600_p3;
wire   [0:0] p_Result_2_1_i_i_fu_1616_p3;
wire   [8:0] select_ln89_7_fu_1624_p3;
wire   [9:0] shl_ln703_7_fu_1632_p3;
wire   [0:0] p_Result_2_2_i_i_fu_1644_p3;
wire   [8:0] select_ln89_8_fu_1652_p3;
wire   [9:0] shl_ln703_8_fu_1660_p3;
wire  signed [10:0] sext_ln170_2_fu_1640_p1;
wire  signed [10:0] sext_ln703_10_fu_1668_p1;
wire   [0:0] p_Result_3_i_i_fu_1678_p3;
wire   [0:0] p_Result_3_1_i_i_fu_1694_p3;
wire   [8:0] select_ln89_10_fu_1702_p3;
wire   [9:0] shl_ln703_s_fu_1710_p3;
wire   [0:0] p_Result_3_2_i_i_fu_1722_p3;
wire   [8:0] select_ln89_11_fu_1730_p3;
wire   [9:0] shl_ln703_10_fu_1738_p3;
wire  signed [10:0] sext_ln170_3_fu_1718_p1;
wire  signed [10:0] sext_ln703_13_fu_1746_p1;
wire   [0:0] p_Result_4_i_i_fu_1756_p3;
wire   [0:0] p_Result_4_1_i_i_fu_1772_p3;
wire   [8:0] select_ln89_13_fu_1780_p3;
wire   [9:0] shl_ln703_12_fu_1788_p3;
wire   [0:0] p_Result_4_2_i_i_fu_1800_p3;
wire   [8:0] select_ln89_14_fu_1808_p3;
wire   [9:0] shl_ln703_13_fu_1816_p3;
wire  signed [10:0] sext_ln170_4_fu_1796_p1;
wire  signed [10:0] sext_ln703_16_fu_1824_p1;
wire   [0:0] p_Result_5_i_i_fu_1834_p3;
wire   [0:0] p_Result_5_1_i_i_fu_1850_p3;
wire   [8:0] select_ln89_16_fu_1858_p3;
wire   [9:0] shl_ln703_15_fu_1866_p3;
wire   [0:0] p_Result_5_2_i_i_fu_1878_p3;
wire   [8:0] select_ln89_17_fu_1886_p3;
wire   [9:0] shl_ln703_16_fu_1894_p3;
wire  signed [10:0] sext_ln170_5_fu_1874_p1;
wire  signed [10:0] sext_ln703_19_fu_1902_p1;
wire   [0:0] p_Result_6_i_i_fu_1912_p3;
wire   [0:0] p_Result_6_1_i_i_fu_1928_p3;
wire   [8:0] select_ln89_19_fu_1936_p3;
wire   [9:0] shl_ln703_18_fu_1944_p3;
wire   [0:0] p_Result_6_2_i_i_fu_1956_p3;
wire   [8:0] select_ln89_20_fu_1964_p3;
wire   [9:0] shl_ln703_19_fu_1972_p3;
wire  signed [10:0] sext_ln170_6_fu_1952_p1;
wire  signed [10:0] sext_ln703_22_fu_1980_p1;
wire   [0:0] p_Result_714_i_i_fu_1990_p3;
wire   [0:0] p_Result_714_1_i_i_fu_2006_p3;
wire   [8:0] select_ln89_22_fu_2014_p3;
wire   [9:0] shl_ln703_21_fu_2022_p3;
wire   [0:0] p_Result_714_2_i_i_fu_2034_p3;
wire   [8:0] select_ln89_23_fu_2042_p3;
wire   [9:0] shl_ln703_22_fu_2050_p3;
wire  signed [10:0] sext_ln170_7_fu_2030_p1;
wire  signed [10:0] sext_ln703_25_fu_2058_p1;
wire   [0:0] p_Result_8_i_i_fu_2068_p3;
wire   [0:0] p_Result_8_1_i_i_fu_2084_p3;
wire   [8:0] select_ln89_25_fu_2092_p3;
wire   [9:0] shl_ln703_24_fu_2100_p3;
wire   [0:0] p_Result_8_2_i_i_fu_2112_p3;
wire   [8:0] select_ln89_26_fu_2120_p3;
wire   [9:0] shl_ln703_25_fu_2128_p3;
wire  signed [10:0] sext_ln170_8_fu_2108_p1;
wire  signed [10:0] sext_ln703_28_fu_2136_p1;
wire   [0:0] p_Result_9_i_i_fu_2146_p3;
wire   [0:0] p_Result_9_1_i_i_fu_2162_p3;
wire   [8:0] select_ln89_28_fu_2170_p3;
wire   [9:0] shl_ln703_27_fu_2178_p3;
wire   [0:0] p_Result_9_2_i_i_fu_2190_p3;
wire   [8:0] select_ln89_29_fu_2198_p3;
wire   [9:0] shl_ln703_28_fu_2206_p3;
wire  signed [10:0] sext_ln170_9_fu_2186_p1;
wire  signed [10:0] sext_ln703_31_fu_2214_p1;
wire   [0:0] p_Result_10_i_i_fu_2224_p3;
wire   [0:0] p_Result_10_1_i_i_fu_2240_p3;
wire   [8:0] select_ln89_31_fu_2248_p3;
wire   [9:0] shl_ln703_30_fu_2256_p3;
wire   [0:0] p_Result_10_2_i_i_fu_2268_p3;
wire   [8:0] select_ln89_32_fu_2276_p3;
wire   [9:0] shl_ln703_31_fu_2284_p3;
wire  signed [10:0] sext_ln170_10_fu_2264_p1;
wire  signed [10:0] sext_ln703_34_fu_2292_p1;
wire   [0:0] p_Result_11_i_i_fu_2302_p3;
wire   [0:0] p_Result_11_1_i_i_fu_2318_p3;
wire   [8:0] select_ln89_34_fu_2326_p3;
wire   [9:0] shl_ln703_33_fu_2334_p3;
wire   [0:0] p_Result_11_2_i_i_fu_2346_p3;
wire   [8:0] select_ln89_35_fu_2354_p3;
wire   [9:0] shl_ln703_34_fu_2362_p3;
wire  signed [10:0] sext_ln170_11_fu_2342_p1;
wire  signed [10:0] sext_ln703_37_fu_2370_p1;
wire   [0:0] p_Result_12_i_i_fu_2380_p3;
wire   [0:0] p_Result_12_1_i_i_fu_2396_p3;
wire   [8:0] select_ln89_37_fu_2404_p3;
wire   [9:0] shl_ln703_36_fu_2412_p3;
wire   [0:0] p_Result_12_2_i_i_fu_2424_p3;
wire   [8:0] select_ln89_38_fu_2432_p3;
wire   [9:0] shl_ln703_37_fu_2440_p3;
wire  signed [10:0] sext_ln170_12_fu_2420_p1;
wire  signed [10:0] sext_ln703_40_fu_2448_p1;
wire   [0:0] p_Result_13_i_i_fu_2458_p3;
wire   [0:0] p_Result_13_1_i_i_fu_2474_p3;
wire   [8:0] select_ln89_40_fu_2482_p3;
wire   [9:0] shl_ln703_39_fu_2490_p3;
wire   [0:0] p_Result_13_2_i_i_fu_2502_p3;
wire   [8:0] select_ln89_41_fu_2510_p3;
wire   [9:0] shl_ln703_40_fu_2518_p3;
wire  signed [10:0] sext_ln170_13_fu_2498_p1;
wire  signed [10:0] sext_ln703_43_fu_2526_p1;
wire   [0:0] p_Result_14_i_i_fu_2536_p3;
wire   [0:0] p_Result_14_1_i_i_fu_2552_p3;
wire   [8:0] select_ln89_43_fu_2560_p3;
wire   [9:0] shl_ln703_42_fu_2568_p3;
wire   [0:0] p_Result_14_2_i_i_fu_2580_p3;
wire   [8:0] select_ln89_44_fu_2588_p3;
wire   [9:0] shl_ln703_43_fu_2596_p3;
wire  signed [10:0] sext_ln170_14_fu_2576_p1;
wire  signed [10:0] sext_ln703_46_fu_2604_p1;
wire   [0:0] p_Result_15_i_i_fu_2614_p3;
wire   [0:0] p_Result_15_1_i_i_fu_2630_p3;
wire   [8:0] select_ln89_46_fu_2638_p3;
wire   [9:0] shl_ln703_45_fu_2646_p3;
wire   [0:0] p_Result_15_2_i_i_fu_2658_p3;
wire   [8:0] select_ln89_47_fu_2666_p3;
wire   [9:0] shl_ln703_46_fu_2674_p3;
wire  signed [10:0] sext_ln170_15_fu_2654_p1;
wire  signed [10:0] sext_ln703_49_fu_2682_p1;
wire   [9:0] shl_ln1_fu_2711_p3;
wire  signed [23:0] sext_ln703_1_fu_2718_p1;
wire  signed [23:0] sext_ln703_5_fu_2727_p1;
wire   [23:0] add_ln703_fu_2722_p2;
wire   [9:0] shl_ln703_3_fu_2736_p3;
wire  signed [23:0] sext_ln703_6_fu_2743_p1;
wire  signed [23:0] sext_ln703_8_fu_2752_p1;
wire   [23:0] add_ln703_3_fu_2747_p2;
wire   [9:0] shl_ln703_6_fu_2761_p3;
wire  signed [23:0] sext_ln703_9_fu_2768_p1;
wire  signed [23:0] sext_ln703_11_fu_2777_p1;
wire   [23:0] add_ln703_6_fu_2772_p2;
wire   [9:0] shl_ln703_9_fu_2786_p3;
wire  signed [23:0] sext_ln703_12_fu_2793_p1;
wire  signed [23:0] sext_ln703_14_fu_2802_p1;
wire   [23:0] add_ln703_9_fu_2797_p2;
wire   [9:0] shl_ln703_11_fu_2811_p3;
wire  signed [23:0] sext_ln703_15_fu_2818_p1;
wire  signed [23:0] sext_ln703_17_fu_2827_p1;
wire   [23:0] add_ln703_12_fu_2822_p2;
wire   [9:0] shl_ln703_14_fu_2836_p3;
wire  signed [23:0] sext_ln703_18_fu_2843_p1;
wire  signed [23:0] sext_ln703_20_fu_2852_p1;
wire   [23:0] add_ln703_15_fu_2847_p2;
wire   [9:0] shl_ln703_17_fu_2861_p3;
wire  signed [23:0] sext_ln703_21_fu_2868_p1;
wire  signed [23:0] sext_ln703_23_fu_2877_p1;
wire   [23:0] add_ln703_18_fu_2872_p2;
wire   [9:0] shl_ln703_20_fu_2886_p3;
wire  signed [23:0] sext_ln703_24_fu_2893_p1;
wire  signed [23:0] sext_ln703_26_fu_2902_p1;
wire   [23:0] add_ln703_21_fu_2897_p2;
wire   [9:0] shl_ln703_23_fu_2911_p3;
wire  signed [23:0] sext_ln703_27_fu_2918_p1;
wire  signed [23:0] sext_ln703_29_fu_2927_p1;
wire   [23:0] add_ln703_24_fu_2922_p2;
wire   [9:0] shl_ln703_26_fu_2936_p3;
wire  signed [23:0] sext_ln703_30_fu_2943_p1;
wire  signed [23:0] sext_ln703_32_fu_2952_p1;
wire   [23:0] add_ln703_27_fu_2947_p2;
wire   [9:0] shl_ln703_29_fu_2961_p3;
wire  signed [23:0] sext_ln703_33_fu_2968_p1;
wire  signed [23:0] sext_ln703_35_fu_2977_p1;
wire   [23:0] add_ln703_30_fu_2972_p2;
wire   [9:0] shl_ln703_32_fu_2986_p3;
wire  signed [23:0] sext_ln703_36_fu_2993_p1;
wire  signed [23:0] sext_ln703_38_fu_3002_p1;
wire   [23:0] add_ln703_33_fu_2997_p2;
wire   [9:0] shl_ln703_35_fu_3011_p3;
wire  signed [23:0] sext_ln703_39_fu_3018_p1;
wire  signed [23:0] sext_ln703_41_fu_3027_p1;
wire   [23:0] add_ln703_36_fu_3022_p2;
wire   [9:0] shl_ln703_38_fu_3036_p3;
wire  signed [23:0] sext_ln703_42_fu_3043_p1;
wire  signed [23:0] sext_ln703_44_fu_3052_p1;
wire   [23:0] add_ln703_39_fu_3047_p2;
wire   [9:0] shl_ln703_41_fu_3061_p3;
wire  signed [23:0] sext_ln703_45_fu_3068_p1;
wire  signed [23:0] sext_ln703_47_fu_3077_p1;
wire   [23:0] add_ln703_42_fu_3072_p2;
wire   [9:0] shl_ln703_44_fu_3086_p3;
wire  signed [23:0] sext_ln703_48_fu_3093_p1;
wire  signed [23:0] sext_ln703_50_fu_3102_p1;
wire   [23:0] add_ln703_45_fu_3097_p2;
wire   [0:0] icmp_ln1495_15_fu_3251_p2;
wire   [0:0] icmp_ln1495_14_fu_3247_p2;
wire   [0:0] icmp_ln1495_13_fu_3243_p2;
wire   [0:0] icmp_ln1495_12_fu_3239_p2;
wire   [0:0] icmp_ln1495_11_fu_3235_p2;
wire   [0:0] icmp_ln1495_10_fu_3231_p2;
wire   [0:0] icmp_ln1495_9_fu_3227_p2;
wire   [0:0] icmp_ln1495_8_fu_3223_p2;
wire   [0:0] icmp_ln1495_7_fu_3219_p2;
wire   [0:0] icmp_ln1495_6_fu_3215_p2;
wire   [0:0] icmp_ln1495_5_fu_3211_p2;
wire   [0:0] icmp_ln1495_4_fu_3207_p2;
wire   [0:0] icmp_ln1495_3_fu_3203_p2;
wire   [0:0] icmp_ln1495_2_fu_3199_p2;
wire   [0:0] icmp_ln1495_1_fu_3195_p2;
wire   [0:0] icmp_ln1495_fu_3191_p2;
wire    ap_CS_fsm_state8;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_602;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

BlackBoxJam_mux_9hbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 24 ),
    .din6_WIDTH( 24 ),
    .din7_WIDTH( 24 ),
    .din8_WIDTH( 24 ),
    .din9_WIDTH( 4 ),
    .dout_WIDTH( 24 ))
BlackBoxJam_mux_9hbi_U44(
    .din0(inputBuf_8_V_1_fu_236),
    .din1(inputBuf_8_V_2_fu_240),
    .din2(inputBuf_8_V_4_fu_244),
    .din3(inputBuf_8_V_6_fu_248),
    .din4(inputBuf_8_V_7_fu_252),
    .din5(inputBuf_8_V_5_fu_256),
    .din6(inputBuf_8_V_3_fu_260),
    .din7(inputBuf_8_V_8_fu_264),
    .din8(inputBuf_8_V_9_fu_268),
    .din9(trunc_ln321_5_reg_3490),
    .dout(inElem_V_fu_863_p11)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_602)) begin
        if (((icmp_ln125_reg_3486 == 1'd0) & (icmp_ln122_reg_3477 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_718 <= inElem_V_fu_863_p11;
        end else if (((icmp_ln125_reg_3486 == 1'd1) & (icmp_ln122_reg_3477 == 1'd0))) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_718 <= in_V_V_dout;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_act_m_val_V_reg_718 <= ap_phi_reg_pp0_iter1_act_m_val_V_reg_718;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln122_fu_758_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_i_i_reg_707 <= i_fu_763_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_0_i_i_reg_707 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln159_reg_3538 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nf_assign_fu_232 <= select_ln173_fu_1205_p3;
    end else if ((~((mul_ln120_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        nf_assign_fu_232 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln159_fu_816_p2 == 1'd0) & (icmp_ln122_fu_758_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sf_5_fu_228 <= sf_fu_810_p2;
    end else if (((~((mul_ln120_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln159_fu_816_p2 == 1'd1) & (icmp_ln122_fu_758_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        sf_5_fu_228 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln159_reg_3538 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tile_assign_fu_224 <= select_ln173_3_fu_1212_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln159_reg_3538 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tile_assign_fu_224 <= tile_fu_1189_p2;
    end else if ((~((mul_ln120_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tile_assign_fu_224 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        accu_0_0_V_reg_3963 <= accu_0_0_V_fu_2730_p2;
        accu_0_10_V_reg_4013 <= accu_0_10_V_fu_2980_p2;
        accu_0_11_V_reg_4018 <= accu_0_11_V_fu_3005_p2;
        accu_0_12_V_reg_4023 <= accu_0_12_V_fu_3030_p2;
        accu_0_13_V_reg_4028 <= accu_0_13_V_fu_3055_p2;
        accu_0_14_V_reg_4033 <= accu_0_14_V_fu_3080_p2;
        accu_0_15_V_reg_4038 <= accu_0_15_V_fu_3105_p2;
        accu_0_1_V_reg_3968 <= accu_0_1_V_fu_2755_p2;
        accu_0_2_V_reg_3973 <= accu_0_2_V_fu_2780_p2;
        accu_0_3_V_reg_3978 <= accu_0_3_V_fu_2805_p2;
        accu_0_4_V_reg_3983 <= accu_0_4_V_fu_2830_p2;
        accu_0_5_V_reg_3988 <= accu_0_5_V_fu_2855_p2;
        accu_0_6_V_reg_3993 <= accu_0_6_V_fu_2880_p2;
        accu_0_7_V_reg_3998 <= accu_0_7_V_fu_2905_p2;
        accu_0_8_V_reg_4003 <= accu_0_8_V_fu_2930_p2;
        accu_0_9_V_reg_4008 <= accu_0_9_V_fu_2955_p2;
        add_ln703_10_reg_3758[10 : 1] <= add_ln703_10_fu_1750_p2[10 : 1];
        add_ln703_13_reg_3768[10 : 1] <= add_ln703_13_fu_1828_p2[10 : 1];
        add_ln703_16_reg_3778[10 : 1] <= add_ln703_16_fu_1906_p2[10 : 1];
        add_ln703_19_reg_3788[10 : 1] <= add_ln703_19_fu_1984_p2[10 : 1];
        add_ln703_1_reg_3728[10 : 1] <= add_ln703_1_fu_1516_p2[10 : 1];
        add_ln703_22_reg_3798[10 : 1] <= add_ln703_22_fu_2062_p2[10 : 1];
        add_ln703_25_reg_3808[10 : 1] <= add_ln703_25_fu_2140_p2[10 : 1];
        add_ln703_28_reg_3818[10 : 1] <= add_ln703_28_fu_2218_p2[10 : 1];
        add_ln703_31_reg_3828[10 : 1] <= add_ln703_31_fu_2296_p2[10 : 1];
        add_ln703_34_reg_3838[10 : 1] <= add_ln703_34_fu_2374_p2[10 : 1];
        add_ln703_37_reg_3848[10 : 1] <= add_ln703_37_fu_2452_p2[10 : 1];
        add_ln703_40_reg_3858[10 : 1] <= add_ln703_40_fu_2530_p2[10 : 1];
        add_ln703_43_reg_3868[10 : 1] <= add_ln703_43_fu_2608_p2[10 : 1];
        add_ln703_46_reg_3878[10 : 1] <= add_ln703_46_fu_2686_p2[10 : 1];
        add_ln703_4_reg_3738[10 : 1] <= add_ln703_4_fu_1594_p2[10 : 1];
        add_ln703_7_reg_3748[10 : 1] <= add_ln703_7_fu_1672_p2[10 : 1];
        icmp_ln159_reg_3538_pp0_iter2_reg <= icmp_ln159_reg_3538_pp0_iter1_reg;
        icmp_ln159_reg_3538_pp0_iter3_reg <= icmp_ln159_reg_3538_pp0_iter2_reg;
        select_ln137_19_reg_3648 <= select_ln137_19_fu_1285_p3;
        select_ln137_20_reg_3653 <= select_ln137_20_fu_1292_p3;
        select_ln137_21_reg_3658 <= select_ln137_21_fu_1299_p3;
        select_ln137_22_reg_3663 <= select_ln137_22_fu_1306_p3;
        select_ln137_23_reg_3668 <= select_ln137_23_fu_1313_p3;
        select_ln137_24_reg_3673 <= select_ln137_24_fu_1320_p3;
        select_ln137_25_reg_3678 <= select_ln137_25_fu_1327_p3;
        select_ln137_26_reg_3683 <= select_ln137_26_fu_1334_p3;
        select_ln137_27_reg_3688 <= select_ln137_27_fu_1341_p3;
        select_ln137_28_reg_3693 <= select_ln137_28_fu_1348_p3;
        select_ln137_29_reg_3698 <= select_ln137_29_fu_1355_p3;
        select_ln137_30_reg_3703 <= select_ln137_30_fu_1362_p3;
        select_ln137_31_reg_3708 <= select_ln137_31_fu_1369_p3;
        select_ln137_32_reg_3713 <= select_ln137_32_fu_1376_p3;
        select_ln137_33_reg_3718 <= select_ln137_33_fu_1383_p3;
        select_ln137_reg_3643 <= select_ln137_fu_1278_p3;
        select_ln89_12_reg_3763 <= select_ln89_12_fu_1764_p3;
        select_ln89_15_reg_3773 <= select_ln89_15_fu_1842_p3;
        select_ln89_18_reg_3783 <= select_ln89_18_fu_1920_p3;
        select_ln89_21_reg_3793 <= select_ln89_21_fu_1998_p3;
        select_ln89_24_reg_3803 <= select_ln89_24_fu_2076_p3;
        select_ln89_27_reg_3813 <= select_ln89_27_fu_2154_p3;
        select_ln89_30_reg_3823 <= select_ln89_30_fu_2232_p3;
        select_ln89_33_reg_3833 <= select_ln89_33_fu_2310_p3;
        select_ln89_36_reg_3843 <= select_ln89_36_fu_2388_p3;
        select_ln89_39_reg_3853 <= select_ln89_39_fu_2466_p3;
        select_ln89_3_reg_3733 <= select_ln89_3_fu_1530_p3;
        select_ln89_42_reg_3863 <= select_ln89_42_fu_2544_p3;
        select_ln89_45_reg_3873 <= select_ln89_45_fu_2622_p3;
        select_ln89_6_reg_3743 <= select_ln89_6_fu_1608_p3;
        select_ln89_9_reg_3753 <= select_ln89_9_fu_1686_p3;
        select_ln89_reg_3723 <= select_ln89_fu_1412_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        accu_V_0_0_0_i_i_fu_160 <= accu_0_0_V_fu_2730_p2;
        accu_V_0_10_0_i_i_fu_200 <= accu_0_10_V_fu_2980_p2;
        accu_V_0_11_0_i_i_fu_204 <= accu_0_11_V_fu_3005_p2;
        accu_V_0_12_0_i_i_fu_208 <= accu_0_12_V_fu_3030_p2;
        accu_V_0_13_0_i_i_fu_212 <= accu_0_13_V_fu_3055_p2;
        accu_V_0_14_0_i_i_fu_216 <= accu_0_14_V_fu_3080_p2;
        accu_V_0_15_0_i_i_fu_220 <= accu_0_15_V_fu_3105_p2;
        accu_V_0_1_0_i_i_fu_164 <= accu_0_1_V_fu_2755_p2;
        accu_V_0_2_0_i_i_fu_168 <= accu_0_2_V_fu_2780_p2;
        accu_V_0_3_0_i_i_fu_172 <= accu_0_3_V_fu_2805_p2;
        accu_V_0_4_0_i_i_fu_176 <= accu_0_4_V_fu_2830_p2;
        accu_V_0_5_0_i_i_fu_180 <= accu_0_5_V_fu_2855_p2;
        accu_V_0_6_0_i_i_fu_184 <= accu_0_6_V_fu_2880_p2;
        accu_V_0_7_0_i_i_fu_188 <= accu_0_7_V_fu_2905_p2;
        accu_V_0_8_0_i_i_fu_192 <= accu_0_8_V_fu_2930_p2;
        accu_V_0_9_0_i_i_fu_196 <= accu_0_9_V_fu_2955_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln122_reg_3472[31 : 2] <= add_ln122_fu_752_p2[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_act_m_val_V_reg_718 <= ap_phi_reg_pp0_iter0_act_m_val_V_reg_718;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln122_reg_3477 <= icmp_ln122_fu_758_p2;
        icmp_ln137_reg_3518_pp0_iter1_reg <= icmp_ln137_reg_3518;
        icmp_ln159_reg_3538_pp0_iter1_reg <= icmp_ln159_reg_3538;
        nf_assign_load_reg_3542_pp0_iter1_reg <= nf_assign_load_reg_3542;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln122_fu_758_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln125_reg_3486 <= icmp_ln125_fu_772_p2;
        icmp_ln137_reg_3518 <= icmp_ln137_fu_804_p2;
        icmp_ln159_reg_3538 <= icmp_ln159_fu_816_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln125_fu_772_p2 == 1'd1) & (icmp_ln122_fu_758_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln321_6_reg_3505 <= icmp_ln321_6_fu_789_p2;
        icmp_ln321_7_reg_3511 <= icmp_ln321_7_fu_795_p2;
        trunc_ln321_reg_3495 <= trunc_ln321_fu_785_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln125_reg_3486 == 1'd1) & (icmp_ln122_reg_3477 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inputBuf_8_V_1_fu_236 <= inputBuf_8_V_19_fu_1114_p3;
        inputBuf_8_V_2_fu_240 <= inputBuf_8_V_18_fu_1107_p3;
        inputBuf_8_V_3_fu_260 <= inputBuf_8_V_12_fu_1012_p3;
        inputBuf_8_V_4_fu_244 <= inputBuf_8_V_16_fu_1092_p3;
        inputBuf_8_V_5_fu_256 <= inputBuf_8_V_13_fu_1036_p3;
        inputBuf_8_V_6_fu_248 <= inputBuf_8_V_15_fu_1076_p3;
        inputBuf_8_V_7_fu_252 <= inputBuf_8_V_14_fu_1052_p3;
        inputBuf_8_V_8_fu_264 <= inputBuf_8_V_11_fu_988_p3;
        inputBuf_8_V_9_fu_268 <= inputBuf_8_V_fu_956_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((mul_ln120_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln120_loc_read_reg_3466 <= mul_ln120_loc_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln159_fu_816_p2 == 1'd1) & (icmp_ln122_fu_758_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nf_assign_load_reg_3542 <= ap_sig_allocacmp_nf_assign_load;
        nf_reg_3547 <= nf_fu_830_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln159_reg_3538_pp0_iter2_reg == 1'd1))) begin
        threshs0_m_threshold_17_reg_4043 <= threshs0_m_threshold_15_q0;
        threshs0_m_threshold_19_reg_4048 <= threshs0_m_threshold_14_q0;
        threshs0_m_threshold_21_reg_4053 <= threshs0_m_threshold_7_q0;
        threshs0_m_threshold_23_reg_4058 <= threshs0_m_threshold_6_q0;
        threshs0_m_threshold_25_reg_4063 <= threshs0_m_threshold_5_q0;
        threshs0_m_threshold_27_reg_4068 <= threshs0_m_threshold_4_q0;
        threshs0_m_threshold_29_reg_4073 <= threshs0_m_threshold_3_q0;
        threshs0_m_threshold_31_reg_4078 <= threshs0_m_threshold_2_q0;
        threshs0_m_threshold_33_reg_4083 <= threshs0_m_threshold_1_q0;
        threshs0_m_threshold_35_reg_4088 <= threshs0_m_threshold_q0;
        threshs0_m_threshold_37_reg_4093 <= threshs0_m_threshold_13_q0;
        threshs0_m_threshold_39_reg_4098 <= threshs0_m_threshold_12_q0;
        threshs0_m_threshold_41_reg_4103 <= threshs0_m_threshold_11_q0;
        threshs0_m_threshold_43_reg_4108 <= threshs0_m_threshold_10_q0;
        threshs0_m_threshold_45_reg_4113 <= threshs0_m_threshold_9_q0;
        threshs0_m_threshold_47_reg_4118 <= threshs0_m_threshold_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln125_fu_772_p2 == 1'd0) & (icmp_ln122_fu_758_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln321_5_reg_3490 <= trunc_ln321_5_fu_781_p1;
    end
end

always @ (*) begin
    if ((icmp_ln122_fu_758_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_0_0_i_i_loa = accu_0_0_V_fu_2730_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_0_0_i_i_loa = accu_V_0_0_0_i_i_fu_160;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_10_0_i_i_lo = accu_0_10_V_fu_2980_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_10_0_i_i_lo = accu_V_0_10_0_i_i_fu_200;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_11_0_i_i_lo = accu_0_11_V_fu_3005_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_11_0_i_i_lo = accu_V_0_11_0_i_i_fu_204;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_12_0_i_i_lo = accu_0_12_V_fu_3030_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_12_0_i_i_lo = accu_V_0_12_0_i_i_fu_208;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_13_0_i_i_lo = accu_0_13_V_fu_3055_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_13_0_i_i_lo = accu_V_0_13_0_i_i_fu_212;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_14_0_i_i_lo = accu_0_14_V_fu_3080_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_14_0_i_i_lo = accu_V_0_14_0_i_i_fu_216;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_15_0_i_i_lo = accu_0_15_V_fu_3105_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_15_0_i_i_lo = accu_V_0_15_0_i_i_fu_220;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_1_0_i_i_loa = accu_0_1_V_fu_2755_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_1_0_i_i_loa = accu_V_0_1_0_i_i_fu_164;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_2_0_i_i_loa = accu_0_2_V_fu_2780_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_2_0_i_i_loa = accu_V_0_2_0_i_i_fu_168;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_3_0_i_i_loa = accu_0_3_V_fu_2805_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_3_0_i_i_loa = accu_V_0_3_0_i_i_fu_172;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_4_0_i_i_loa = accu_0_4_V_fu_2830_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_4_0_i_i_loa = accu_V_0_4_0_i_i_fu_176;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_5_0_i_i_loa = accu_0_5_V_fu_2855_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_5_0_i_i_loa = accu_V_0_5_0_i_i_fu_180;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_6_0_i_i_loa = accu_0_6_V_fu_2880_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_6_0_i_i_loa = accu_V_0_6_0_i_i_fu_184;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_7_0_i_i_loa = accu_0_7_V_fu_2905_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_7_0_i_i_loa = accu_V_0_7_0_i_i_fu_188;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_8_0_i_i_loa = accu_0_8_V_fu_2930_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_8_0_i_i_loa = accu_V_0_8_0_i_i_fu_192;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_sig_allocacmp_accu_V_0_9_0_i_i_loa = accu_0_9_V_fu_2955_p2;
    end else begin
        ap_sig_allocacmp_accu_V_0_9_0_i_i_loa = accu_V_0_9_0_i_i_fu_196;
    end
end

always @ (*) begin
    if (((icmp_ln159_reg_3538 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_nf_assign_load = select_ln173_fu_1205_p3;
    end else begin
        ap_sig_allocacmp_nf_assign_load = nf_assign_fu_232;
    end
end

always @ (*) begin
    if (((icmp_ln159_reg_3538 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_nf_assign_load_5 = select_ln173_fu_1205_p3;
    end else begin
        ap_sig_allocacmp_nf_assign_load_5 = nf_assign_fu_232;
    end
end

always @ (*) begin
    if (((icmp_ln125_reg_3486 == 1'd1) & (icmp_ln122_reg_3477 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_V_V_blk_n = in_V_V_empty_n;
    end else begin
        in_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_predicate_op84_read_state4 == 1'b1))) begin
        in_V_V_read = 1'b1;
    end else begin
        in_V_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln120_loc_blk_n = mul_ln120_loc_empty_n;
    end else begin
        mul_ln120_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((mul_ln120_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        mul_ln120_loc_read = 1'b1;
    end else begin
        mul_ln120_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln159_reg_3538_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_blk_n = out_V_V_full_n;
    end else begin
        out_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln159_reg_3538_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        out_V_V_write = 1'b1;
    end else begin
        out_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_10_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_11_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_12_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_13_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_14_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_15_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_1_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_2_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_3_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_4_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_5_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_6_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_7_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_8_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_9_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        threshs0_m_threshold_ce0 = 1'b1;
    end else begin
        threshs0_m_threshold_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_10_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_11_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_12_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_13_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_14_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_15_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_1_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_2_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_3_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_4_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_5_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_6_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_7_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_8_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_9_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        weights0_m_weights_V_ce0 = 1'b1;
    end else begin
        weights0_m_weights_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((mul_ln120_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln122_fu_758_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln122_fu_758_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign accu_0_0_V_fu_2730_p2 = ($signed(sext_ln703_5_fu_2727_p1) + $signed(add_ln703_fu_2722_p2));

assign accu_0_10_V_fu_2980_p2 = ($signed(sext_ln703_35_fu_2977_p1) + $signed(add_ln703_30_fu_2972_p2));

assign accu_0_11_V_fu_3005_p2 = ($signed(sext_ln703_38_fu_3002_p1) + $signed(add_ln703_33_fu_2997_p2));

assign accu_0_12_V_fu_3030_p2 = ($signed(sext_ln703_41_fu_3027_p1) + $signed(add_ln703_36_fu_3022_p2));

assign accu_0_13_V_fu_3055_p2 = ($signed(sext_ln703_44_fu_3052_p1) + $signed(add_ln703_39_fu_3047_p2));

assign accu_0_14_V_fu_3080_p2 = ($signed(sext_ln703_47_fu_3077_p1) + $signed(add_ln703_42_fu_3072_p2));

assign accu_0_15_V_fu_3105_p2 = ($signed(sext_ln703_50_fu_3102_p1) + $signed(add_ln703_45_fu_3097_p2));

assign accu_0_1_V_fu_2755_p2 = ($signed(sext_ln703_8_fu_2752_p1) + $signed(add_ln703_3_fu_2747_p2));

assign accu_0_2_V_fu_2780_p2 = ($signed(sext_ln703_11_fu_2777_p1) + $signed(add_ln703_6_fu_2772_p2));

assign accu_0_3_V_fu_2805_p2 = ($signed(sext_ln703_14_fu_2802_p1) + $signed(add_ln703_9_fu_2797_p2));

assign accu_0_4_V_fu_2830_p2 = ($signed(sext_ln703_17_fu_2827_p1) + $signed(add_ln703_12_fu_2822_p2));

assign accu_0_5_V_fu_2855_p2 = ($signed(sext_ln703_20_fu_2852_p1) + $signed(add_ln703_15_fu_2847_p2));

assign accu_0_6_V_fu_2880_p2 = ($signed(sext_ln703_23_fu_2877_p1) + $signed(add_ln703_18_fu_2872_p2));

assign accu_0_7_V_fu_2905_p2 = ($signed(sext_ln703_26_fu_2902_p1) + $signed(add_ln703_21_fu_2897_p2));

assign accu_0_8_V_fu_2930_p2 = ($signed(sext_ln703_29_fu_2927_p1) + $signed(add_ln703_24_fu_2922_p2));

assign accu_0_9_V_fu_2955_p2 = ($signed(sext_ln703_32_fu_2952_p1) + $signed(add_ln703_27_fu_2947_p2));

assign add_ln122_fu_752_p2 = (shl_ln122_fu_742_p2 + shl_ln122_4_fu_747_p2);

assign add_ln703_10_fu_1750_p2 = ($signed(sext_ln170_3_fu_1718_p1) + $signed(sext_ln703_13_fu_1746_p1));

assign add_ln703_12_fu_2822_p2 = ($signed(select_ln137_29_reg_3698) + $signed(sext_ln703_15_fu_2818_p1));

assign add_ln703_13_fu_1828_p2 = ($signed(sext_ln170_4_fu_1796_p1) + $signed(sext_ln703_16_fu_1824_p1));

assign add_ln703_15_fu_2847_p2 = ($signed(select_ln137_28_reg_3693) + $signed(sext_ln703_18_fu_2843_p1));

assign add_ln703_16_fu_1906_p2 = ($signed(sext_ln170_5_fu_1874_p1) + $signed(sext_ln703_19_fu_1902_p1));

assign add_ln703_18_fu_2872_p2 = ($signed(select_ln137_27_reg_3688) + $signed(sext_ln703_21_fu_2868_p1));

assign add_ln703_19_fu_1984_p2 = ($signed(sext_ln170_6_fu_1952_p1) + $signed(sext_ln703_22_fu_1980_p1));

assign add_ln703_1_fu_1516_p2 = ($signed(sext_ln170_fu_1464_p1) + $signed(sext_ln703_4_fu_1512_p1));

assign add_ln703_21_fu_2897_p2 = ($signed(select_ln137_26_reg_3683) + $signed(sext_ln703_24_fu_2893_p1));

assign add_ln703_22_fu_2062_p2 = ($signed(sext_ln170_7_fu_2030_p1) + $signed(sext_ln703_25_fu_2058_p1));

assign add_ln703_24_fu_2922_p2 = ($signed(select_ln137_25_reg_3678) + $signed(sext_ln703_27_fu_2918_p1));

assign add_ln703_25_fu_2140_p2 = ($signed(sext_ln170_8_fu_2108_p1) + $signed(sext_ln703_28_fu_2136_p1));

assign add_ln703_27_fu_2947_p2 = ($signed(select_ln137_24_reg_3673) + $signed(sext_ln703_30_fu_2943_p1));

assign add_ln703_28_fu_2218_p2 = ($signed(sext_ln170_9_fu_2186_p1) + $signed(sext_ln703_31_fu_2214_p1));

assign add_ln703_30_fu_2972_p2 = ($signed(select_ln137_23_reg_3668) + $signed(sext_ln703_33_fu_2968_p1));

assign add_ln703_31_fu_2296_p2 = ($signed(sext_ln170_10_fu_2264_p1) + $signed(sext_ln703_34_fu_2292_p1));

assign add_ln703_33_fu_2997_p2 = ($signed(select_ln137_22_reg_3663) + $signed(sext_ln703_36_fu_2993_p1));

assign add_ln703_34_fu_2374_p2 = ($signed(sext_ln170_11_fu_2342_p1) + $signed(sext_ln703_37_fu_2370_p1));

assign add_ln703_36_fu_3022_p2 = ($signed(select_ln137_21_reg_3658) + $signed(sext_ln703_39_fu_3018_p1));

assign add_ln703_37_fu_2452_p2 = ($signed(sext_ln170_12_fu_2420_p1) + $signed(sext_ln703_40_fu_2448_p1));

assign add_ln703_39_fu_3047_p2 = ($signed(select_ln137_20_reg_3653) + $signed(sext_ln703_42_fu_3043_p1));

assign add_ln703_3_fu_2747_p2 = ($signed(select_ln137_32_reg_3713) + $signed(sext_ln703_6_fu_2743_p1));

assign add_ln703_40_fu_2530_p2 = ($signed(sext_ln170_13_fu_2498_p1) + $signed(sext_ln703_43_fu_2526_p1));

assign add_ln703_42_fu_3072_p2 = ($signed(select_ln137_19_reg_3648) + $signed(sext_ln703_45_fu_3068_p1));

assign add_ln703_43_fu_2608_p2 = ($signed(sext_ln170_14_fu_2576_p1) + $signed(sext_ln703_46_fu_2604_p1));

assign add_ln703_45_fu_3097_p2 = ($signed(select_ln137_reg_3643) + $signed(sext_ln703_48_fu_3093_p1));

assign add_ln703_46_fu_2686_p2 = ($signed(sext_ln170_15_fu_2654_p1) + $signed(sext_ln703_49_fu_2682_p1));

assign add_ln703_4_fu_1594_p2 = ($signed(sext_ln170_1_fu_1562_p1) + $signed(sext_ln703_7_fu_1590_p1));

assign add_ln703_6_fu_2772_p2 = ($signed(select_ln137_31_reg_3708) + $signed(sext_ln703_9_fu_2768_p1));

assign add_ln703_7_fu_1672_p2 = ($signed(sext_ln170_2_fu_1640_p1) + $signed(sext_ln703_10_fu_1668_p1));

assign add_ln703_9_fu_2797_p2 = ($signed(select_ln137_30_reg_3703) + $signed(sext_ln703_12_fu_2793_p1));

assign add_ln703_fu_2722_p2 = ($signed(select_ln137_33_reg_3718) + $signed(sext_ln703_1_fu_2718_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((out_V_V_full_n == 1'b0) & (icmp_ln159_reg_3538_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op84_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((out_V_V_full_n == 1'b0) & (icmp_ln159_reg_3538_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op84_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((out_V_V_full_n == 1'b0) & (icmp_ln159_reg_3538_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((in_V_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op84_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((mul_ln120_loc_empty_n == 1'b0) | (real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state4_pp0_stage0_iter1 = ((in_V_V_empty_n == 1'b0) & (ap_predicate_op84_read_state4 == 1'b1));
end

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter4 = ((out_V_V_full_n == 1'b0) & (icmp_ln159_reg_3538_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_condition_602 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_act_m_val_V_reg_718 = 'bx;

always @ (*) begin
    ap_predicate_op84_read_state4 = ((icmp_ln125_reg_3486 == 1'd1) & (icmp_ln122_reg_3477 == 1'd0));
end

assign ap_ready = internal_ap_ready;

assign arg_V_read_assign_1_fu_1428_p4 = {{ap_phi_reg_pp0_iter2_act_m_val_V_reg_718[15:8]}};

assign arg_V_read_assign_2_fu_1476_p4 = {{ap_phi_reg_pp0_iter2_act_m_val_V_reg_718[23:16]}};

assign i_fu_763_p2 = (i_0_i_i_reg_707 + 32'd1);

assign icmp_ln122_fu_758_p2 = ((i_0_i_i_reg_707 == add_ln122_reg_3472) ? 1'b1 : 1'b0);

assign icmp_ln125_fu_772_p2 = ((ap_sig_allocacmp_nf_assign_load_5 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln137_fu_804_p2 = ((sf_5_fu_228 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln1495_10_fu_3231_p2 = (($signed(threshs0_m_threshold_37_reg_4093) < $signed(accu_0_10_V_reg_4013)) ? 1'b1 : 1'b0);

assign icmp_ln1495_11_fu_3235_p2 = (($signed(threshs0_m_threshold_39_reg_4098) < $signed(accu_0_11_V_reg_4018)) ? 1'b1 : 1'b0);

assign icmp_ln1495_12_fu_3239_p2 = (($signed(threshs0_m_threshold_41_reg_4103) < $signed(accu_0_12_V_reg_4023)) ? 1'b1 : 1'b0);

assign icmp_ln1495_13_fu_3243_p2 = (($signed(threshs0_m_threshold_43_reg_4108) < $signed(accu_0_13_V_reg_4028)) ? 1'b1 : 1'b0);

assign icmp_ln1495_14_fu_3247_p2 = (($signed(threshs0_m_threshold_45_reg_4113) < $signed(accu_0_14_V_reg_4033)) ? 1'b1 : 1'b0);

assign icmp_ln1495_15_fu_3251_p2 = (($signed(threshs0_m_threshold_47_reg_4118) < $signed(accu_0_15_V_reg_4038)) ? 1'b1 : 1'b0);

assign icmp_ln1495_1_fu_3195_p2 = (($signed(threshs0_m_threshold_19_reg_4048) < $signed(accu_0_1_V_reg_3968)) ? 1'b1 : 1'b0);

assign icmp_ln1495_2_fu_3199_p2 = (($signed(threshs0_m_threshold_21_reg_4053) < $signed(accu_0_2_V_reg_3973)) ? 1'b1 : 1'b0);

assign icmp_ln1495_3_fu_3203_p2 = (($signed(threshs0_m_threshold_23_reg_4058) < $signed(accu_0_3_V_reg_3978)) ? 1'b1 : 1'b0);

assign icmp_ln1495_4_fu_3207_p2 = (($signed(threshs0_m_threshold_25_reg_4063) < $signed(accu_0_4_V_reg_3983)) ? 1'b1 : 1'b0);

assign icmp_ln1495_5_fu_3211_p2 = (($signed(threshs0_m_threshold_27_reg_4068) < $signed(accu_0_5_V_reg_3988)) ? 1'b1 : 1'b0);

assign icmp_ln1495_6_fu_3215_p2 = (($signed(threshs0_m_threshold_29_reg_4073) < $signed(accu_0_6_V_reg_3993)) ? 1'b1 : 1'b0);

assign icmp_ln1495_7_fu_3219_p2 = (($signed(threshs0_m_threshold_31_reg_4078) < $signed(accu_0_7_V_reg_3998)) ? 1'b1 : 1'b0);

assign icmp_ln1495_8_fu_3223_p2 = (($signed(threshs0_m_threshold_33_reg_4083) < $signed(accu_0_8_V_reg_4003)) ? 1'b1 : 1'b0);

assign icmp_ln1495_9_fu_3227_p2 = (($signed(threshs0_m_threshold_35_reg_4088) < $signed(accu_0_9_V_reg_4008)) ? 1'b1 : 1'b0);

assign icmp_ln1495_fu_3191_p2 = (($signed(threshs0_m_threshold_17_reg_4043) < $signed(accu_0_0_V_reg_3963)) ? 1'b1 : 1'b0);

assign icmp_ln159_fu_816_p2 = ((sf_fu_810_p2 == 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln173_fu_1200_p2 = ((nf_reg_3547 == 32'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_1_fu_891_p2 = ((trunc_ln321_reg_3495 == 4'd6) ? 1'b1 : 1'b0);

assign icmp_ln321_2_fu_896_p2 = ((trunc_ln321_reg_3495 == 4'd5) ? 1'b1 : 1'b0);

assign icmp_ln321_3_fu_901_p2 = ((trunc_ln321_reg_3495 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln321_4_fu_906_p2 = ((trunc_ln321_reg_3495 == 4'd3) ? 1'b1 : 1'b0);

assign icmp_ln321_5_fu_911_p2 = ((trunc_ln321_reg_3495 == 4'd2) ? 1'b1 : 1'b0);

assign icmp_ln321_6_fu_789_p2 = ((trunc_ln321_fu_785_p1 == 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln321_7_fu_795_p2 = ((trunc_ln321_fu_785_p1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln321_fu_886_p2 = ((trunc_ln321_reg_3495 == 4'd7) ? 1'b1 : 1'b0);

assign inputBuf_8_V_11_fu_988_p3 = ((or_ln321_6_fu_950_p2[0:0] === 1'b1) ? select_ln321_2_fu_980_p3 : inputBuf_8_V_8_fu_264);

assign inputBuf_8_V_12_fu_1012_p3 = ((or_ln321_4_fu_938_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_260 : select_ln321_5_fu_1004_p3);

assign inputBuf_8_V_13_fu_1036_p3 = ((or_ln321_4_fu_938_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_256 : select_ln321_8_fu_1028_p3);

assign inputBuf_8_V_14_fu_1052_p3 = ((or_ln321_4_fu_938_p2[0:0] === 1'b1) ? inputBuf_8_V_7_fu_252 : select_ln321_10_fu_1044_p3);

assign inputBuf_8_V_15_fu_1076_p3 = ((or_ln321_4_fu_938_p2[0:0] === 1'b1) ? select_ln321_13_fu_1068_p3 : inputBuf_8_V_6_fu_248);

assign inputBuf_8_V_16_fu_1092_p3 = ((or_ln321_fu_916_p2[0:0] === 1'b1) ? inputBuf_8_V_4_fu_244 : select_ln321_15_fu_1084_p3);

assign inputBuf_8_V_17_fu_1100_p3 = ((icmp_ln321_6_reg_3505[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_2_fu_240);

assign inputBuf_8_V_18_fu_1107_p3 = ((icmp_ln321_7_reg_3511[0:0] === 1'b1) ? inputBuf_8_V_2_fu_240 : inputBuf_8_V_17_fu_1100_p3);

assign inputBuf_8_V_19_fu_1114_p3 = ((icmp_ln321_7_reg_3511[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_1_fu_236);

assign inputBuf_8_V_fu_956_p3 = ((or_ln321_6_fu_950_p2[0:0] === 1'b1) ? inputBuf_8_V_9_fu_268 : in_V_V_dout);

assign nf_fu_830_p2 = (ap_sig_allocacmp_nf_assign_load + 32'd1);

assign or_ln321_1_fu_920_p2 = (icmp_ln321_5_fu_911_p2 | icmp_ln321_4_fu_906_p2);

assign or_ln321_2_fu_926_p2 = (icmp_ln321_3_fu_901_p2 | icmp_ln321_2_fu_896_p2);

assign or_ln321_3_fu_932_p2 = (icmp_ln321_fu_886_p2 | icmp_ln321_1_fu_891_p2);

assign or_ln321_4_fu_938_p2 = (or_ln321_fu_916_p2 | or_ln321_1_fu_920_p2);

assign or_ln321_5_fu_944_p2 = (or_ln321_3_fu_932_p2 | or_ln321_2_fu_926_p2);

assign or_ln321_6_fu_950_p2 = (or_ln321_5_fu_944_p2 | or_ln321_4_fu_938_p2);

assign or_ln321_fu_916_p2 = (icmp_ln321_7_reg_3511 | icmp_ln321_6_reg_3505);

assign out_V_V_din = {{{{{{{{{{{{{{{{icmp_ln1495_15_fu_3251_p2}, {icmp_ln1495_14_fu_3247_p2}}, {icmp_ln1495_13_fu_3243_p2}}, {icmp_ln1495_12_fu_3239_p2}}, {icmp_ln1495_11_fu_3235_p2}}, {icmp_ln1495_10_fu_3231_p2}}, {icmp_ln1495_9_fu_3227_p2}}, {icmp_ln1495_8_fu_3223_p2}}, {icmp_ln1495_7_fu_3219_p2}}, {icmp_ln1495_6_fu_3215_p2}}, {icmp_ln1495_5_fu_3211_p2}}, {icmp_ln1495_4_fu_3207_p2}}, {icmp_ln1495_3_fu_3203_p2}}, {icmp_ln1495_2_fu_3199_p2}}, {icmp_ln1495_1_fu_3195_p2}}, {icmp_ln1495_fu_3191_p2}};

assign p_Result_0_1_i_i_fu_1420_p3 = weights0_m_weights_V_q0[3'd1];

assign p_Result_0_2_i_i_fu_1468_p3 = weights0_m_weights_V_q0[3'd2];

assign p_Result_0_i_i_fu_1390_p3 = weights0_m_weights_V_q0[3'd0];

assign p_Result_10_1_i_i_fu_2240_p3 = weights0_m_weights_V_10_q0[3'd1];

assign p_Result_10_2_i_i_fu_2268_p3 = weights0_m_weights_V_10_q0[3'd2];

assign p_Result_10_i_i_fu_2224_p3 = weights0_m_weights_V_10_q0[3'd0];

assign p_Result_11_1_i_i_fu_2318_p3 = weights0_m_weights_V_11_q0[3'd1];

assign p_Result_11_2_i_i_fu_2346_p3 = weights0_m_weights_V_11_q0[3'd2];

assign p_Result_11_i_i_fu_2302_p3 = weights0_m_weights_V_11_q0[3'd0];

assign p_Result_12_1_i_i_fu_2396_p3 = weights0_m_weights_V_12_q0[3'd1];

assign p_Result_12_2_i_i_fu_2424_p3 = weights0_m_weights_V_12_q0[3'd2];

assign p_Result_12_i_i_fu_2380_p3 = weights0_m_weights_V_12_q0[3'd0];

assign p_Result_13_1_i_i_fu_2474_p3 = weights0_m_weights_V_13_q0[3'd1];

assign p_Result_13_2_i_i_fu_2502_p3 = weights0_m_weights_V_13_q0[3'd2];

assign p_Result_13_i_i_fu_2458_p3 = weights0_m_weights_V_13_q0[3'd0];

assign p_Result_14_1_i_i_fu_2552_p3 = weights0_m_weights_V_14_q0[3'd1];

assign p_Result_14_2_i_i_fu_2580_p3 = weights0_m_weights_V_14_q0[3'd2];

assign p_Result_14_i_i_fu_2536_p3 = weights0_m_weights_V_14_q0[3'd0];

assign p_Result_15_1_i_i_fu_2630_p3 = weights0_m_weights_V_15_q0[3'd1];

assign p_Result_15_2_i_i_fu_2658_p3 = weights0_m_weights_V_15_q0[3'd2];

assign p_Result_15_i_i_fu_2614_p3 = weights0_m_weights_V_15_q0[3'd0];

assign p_Result_1_1_i_i_fu_1538_p3 = weights0_m_weights_V_1_q0[3'd1];

assign p_Result_1_2_i_i_fu_1566_p3 = weights0_m_weights_V_1_q0[3'd2];

assign p_Result_1_i_i_fu_1522_p3 = weights0_m_weights_V_1_q0[3'd0];

assign p_Result_2_1_i_i_fu_1616_p3 = weights0_m_weights_V_2_q0[3'd1];

assign p_Result_2_2_i_i_fu_1644_p3 = weights0_m_weights_V_2_q0[3'd2];

assign p_Result_2_i_i_fu_1600_p3 = weights0_m_weights_V_2_q0[3'd0];

assign p_Result_3_1_i_i_fu_1694_p3 = weights0_m_weights_V_3_q0[3'd1];

assign p_Result_3_2_i_i_fu_1722_p3 = weights0_m_weights_V_3_q0[3'd2];

assign p_Result_3_i_i_fu_1678_p3 = weights0_m_weights_V_3_q0[3'd0];

assign p_Result_4_1_i_i_fu_1772_p3 = weights0_m_weights_V_4_q0[3'd1];

assign p_Result_4_2_i_i_fu_1800_p3 = weights0_m_weights_V_4_q0[3'd2];

assign p_Result_4_i_i_fu_1756_p3 = weights0_m_weights_V_4_q0[3'd0];

assign p_Result_5_1_i_i_fu_1850_p3 = weights0_m_weights_V_5_q0[3'd1];

assign p_Result_5_2_i_i_fu_1878_p3 = weights0_m_weights_V_5_q0[3'd2];

assign p_Result_5_i_i_fu_1834_p3 = weights0_m_weights_V_5_q0[3'd0];

assign p_Result_6_1_i_i_fu_1928_p3 = weights0_m_weights_V_6_q0[3'd1];

assign p_Result_6_2_i_i_fu_1956_p3 = weights0_m_weights_V_6_q0[3'd2];

assign p_Result_6_i_i_fu_1912_p3 = weights0_m_weights_V_6_q0[3'd0];

assign p_Result_714_1_i_i_fu_2006_p3 = weights0_m_weights_V_7_q0[3'd1];

assign p_Result_714_2_i_i_fu_2034_p3 = weights0_m_weights_V_7_q0[3'd2];

assign p_Result_714_i_i_fu_1990_p3 = weights0_m_weights_V_7_q0[3'd0];

assign p_Result_8_1_i_i_fu_2084_p3 = weights0_m_weights_V_8_q0[3'd1];

assign p_Result_8_2_i_i_fu_2112_p3 = weights0_m_weights_V_8_q0[3'd2];

assign p_Result_8_i_i_fu_2068_p3 = weights0_m_weights_V_8_q0[3'd0];

assign p_Result_9_1_i_i_fu_2162_p3 = weights0_m_weights_V_9_q0[3'd1];

assign p_Result_9_2_i_i_fu_2190_p3 = weights0_m_weights_V_9_q0[3'd2];

assign p_Result_9_i_i_fu_2146_p3 = weights0_m_weights_V_9_q0[3'd0];

assign select_ln137_19_fu_1285_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_14_0_i_i_lo);

assign select_ln137_20_fu_1292_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_13_0_i_i_lo);

assign select_ln137_21_fu_1299_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_12_0_i_i_lo);

assign select_ln137_22_fu_1306_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_11_0_i_i_lo);

assign select_ln137_23_fu_1313_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_10_0_i_i_lo);

assign select_ln137_24_fu_1320_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_9_0_i_i_loa);

assign select_ln137_25_fu_1327_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_8_0_i_i_loa);

assign select_ln137_26_fu_1334_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_7_0_i_i_loa);

assign select_ln137_27_fu_1341_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_6_0_i_i_loa);

assign select_ln137_28_fu_1348_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_5_0_i_i_loa);

assign select_ln137_29_fu_1355_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_4_0_i_i_loa);

assign select_ln137_30_fu_1362_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_3_0_i_i_loa);

assign select_ln137_31_fu_1369_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_2_0_i_i_loa);

assign select_ln137_32_fu_1376_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_1_0_i_i_loa);

assign select_ln137_33_fu_1383_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_0_0_i_i_loa);

assign select_ln137_fu_1278_p3 = ((icmp_ln137_reg_3518_pp0_iter1_reg[0:0] === 1'b1) ? 24'd0 : ap_sig_allocacmp_accu_V_0_15_0_i_i_lo);

assign select_ln173_3_fu_1212_p3 = ((icmp_ln173_fu_1200_p2[0:0] === 1'b1) ? 32'd0 : tile_fu_1189_p2);

assign select_ln173_fu_1205_p3 = ((icmp_ln173_fu_1200_p2[0:0] === 1'b1) ? 32'd0 : nf_reg_3547);

assign select_ln321_10_fu_1044_p3 = ((icmp_ln321_3_fu_901_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_7_fu_252);

assign select_ln321_12_fu_1060_p3 = ((icmp_ln321_5_fu_911_p2[0:0] === 1'b1) ? inputBuf_8_V_6_fu_248 : in_V_V_dout);

assign select_ln321_13_fu_1068_p3 = ((or_ln321_fu_916_p2[0:0] === 1'b1) ? inputBuf_8_V_6_fu_248 : select_ln321_12_fu_1060_p3);

assign select_ln321_15_fu_1084_p3 = ((icmp_ln321_5_fu_911_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_4_fu_244);

assign select_ln321_1_fu_972_p3 = ((or_ln321_2_fu_926_p2[0:0] === 1'b1) ? inputBuf_8_V_8_fu_264 : select_ln321_fu_964_p3);

assign select_ln321_2_fu_980_p3 = ((or_ln321_4_fu_938_p2[0:0] === 1'b1) ? inputBuf_8_V_8_fu_264 : select_ln321_1_fu_972_p3);

assign select_ln321_4_fu_996_p3 = ((icmp_ln321_1_fu_891_p2[0:0] === 1'b1) ? in_V_V_dout : inputBuf_8_V_3_fu_260);

assign select_ln321_5_fu_1004_p3 = ((or_ln321_2_fu_926_p2[0:0] === 1'b1) ? inputBuf_8_V_3_fu_260 : select_ln321_4_fu_996_p3);

assign select_ln321_7_fu_1020_p3 = ((icmp_ln321_3_fu_901_p2[0:0] === 1'b1) ? inputBuf_8_V_5_fu_256 : in_V_V_dout);

assign select_ln321_8_fu_1028_p3 = ((or_ln321_2_fu_926_p2[0:0] === 1'b1) ? select_ln321_7_fu_1020_p3 : inputBuf_8_V_5_fu_256);

assign select_ln321_fu_964_p3 = ((icmp_ln321_1_fu_891_p2[0:0] === 1'b1) ? inputBuf_8_V_8_fu_264 : in_V_V_dout);

assign select_ln89_10_fu_1702_p3 = ((p_Result_3_1_i_i_fu_1694_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_11_fu_1730_p3 = ((p_Result_3_2_i_i_fu_1722_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_12_fu_1764_p3 = ((p_Result_4_i_i_fu_1756_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_13_fu_1780_p3 = ((p_Result_4_1_i_i_fu_1772_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_14_fu_1808_p3 = ((p_Result_4_2_i_i_fu_1800_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_15_fu_1842_p3 = ((p_Result_5_i_i_fu_1834_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_16_fu_1858_p3 = ((p_Result_5_1_i_i_fu_1850_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_17_fu_1886_p3 = ((p_Result_5_2_i_i_fu_1878_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_18_fu_1920_p3 = ((p_Result_6_i_i_fu_1912_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_19_fu_1936_p3 = ((p_Result_6_1_i_i_fu_1928_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_1_fu_1448_p3 = ((p_Result_0_1_i_i_fu_1420_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_20_fu_1964_p3 = ((p_Result_6_2_i_i_fu_1956_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_21_fu_1998_p3 = ((p_Result_714_i_i_fu_1990_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_22_fu_2014_p3 = ((p_Result_714_1_i_i_fu_2006_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_23_fu_2042_p3 = ((p_Result_714_2_i_i_fu_2034_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_24_fu_2076_p3 = ((p_Result_8_i_i_fu_2068_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_25_fu_2092_p3 = ((p_Result_8_1_i_i_fu_2084_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_26_fu_2120_p3 = ((p_Result_8_2_i_i_fu_2112_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_27_fu_2154_p3 = ((p_Result_9_i_i_fu_2146_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_28_fu_2170_p3 = ((p_Result_9_1_i_i_fu_2162_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_29_fu_2198_p3 = ((p_Result_9_2_i_i_fu_2190_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_2_fu_1496_p3 = ((p_Result_0_2_i_i_fu_1468_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_30_fu_2232_p3 = ((p_Result_10_i_i_fu_2224_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_31_fu_2248_p3 = ((p_Result_10_1_i_i_fu_2240_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_32_fu_2276_p3 = ((p_Result_10_2_i_i_fu_2268_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_33_fu_2310_p3 = ((p_Result_11_i_i_fu_2302_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_34_fu_2326_p3 = ((p_Result_11_1_i_i_fu_2318_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_35_fu_2354_p3 = ((p_Result_11_2_i_i_fu_2346_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_36_fu_2388_p3 = ((p_Result_12_i_i_fu_2380_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_37_fu_2404_p3 = ((p_Result_12_1_i_i_fu_2396_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_38_fu_2432_p3 = ((p_Result_12_2_i_i_fu_2424_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_39_fu_2466_p3 = ((p_Result_13_i_i_fu_2458_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_3_fu_1530_p3 = ((p_Result_1_i_i_fu_1522_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_40_fu_2482_p3 = ((p_Result_13_1_i_i_fu_2474_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_41_fu_2510_p3 = ((p_Result_13_2_i_i_fu_2502_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_42_fu_2544_p3 = ((p_Result_14_i_i_fu_2536_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_43_fu_2560_p3 = ((p_Result_14_1_i_i_fu_2552_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_44_fu_2588_p3 = ((p_Result_14_2_i_i_fu_2580_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_45_fu_2622_p3 = ((p_Result_15_i_i_fu_2614_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_46_fu_2638_p3 = ((p_Result_15_1_i_i_fu_2630_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_47_fu_2666_p3 = ((p_Result_15_2_i_i_fu_2658_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_4_fu_1546_p3 = ((p_Result_1_1_i_i_fu_1538_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_5_fu_1574_p3 = ((p_Result_1_2_i_i_fu_1566_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_6_fu_1608_p3 = ((p_Result_2_i_i_fu_1600_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_7_fu_1624_p3 = ((p_Result_2_1_i_i_fu_1616_p3[0:0] === 1'b1) ? sext_ln703_2_fu_1438_p1 : sub_ln1253_1_fu_1442_p2);

assign select_ln89_8_fu_1652_p3 = ((p_Result_2_2_i_i_fu_1644_p3[0:0] === 1'b1) ? sext_ln703_3_fu_1486_p1 : sub_ln1253_2_fu_1490_p2);

assign select_ln89_9_fu_1686_p3 = ((p_Result_3_i_i_fu_1678_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign select_ln89_fu_1412_p3 = ((p_Result_0_i_i_fu_1390_p3[0:0] === 1'b1) ? sext_ln703_fu_1402_p1 : sub_ln1253_fu_1406_p2);

assign sext_ln170_10_fu_2264_p1 = $signed(shl_ln703_30_fu_2256_p3);

assign sext_ln170_11_fu_2342_p1 = $signed(shl_ln703_33_fu_2334_p3);

assign sext_ln170_12_fu_2420_p1 = $signed(shl_ln703_36_fu_2412_p3);

assign sext_ln170_13_fu_2498_p1 = $signed(shl_ln703_39_fu_2490_p3);

assign sext_ln170_14_fu_2576_p1 = $signed(shl_ln703_42_fu_2568_p3);

assign sext_ln170_15_fu_2654_p1 = $signed(shl_ln703_45_fu_2646_p3);

assign sext_ln170_1_fu_1562_p1 = $signed(shl_ln703_4_fu_1554_p3);

assign sext_ln170_2_fu_1640_p1 = $signed(shl_ln703_7_fu_1632_p3);

assign sext_ln170_3_fu_1718_p1 = $signed(shl_ln703_s_fu_1710_p3);

assign sext_ln170_4_fu_1796_p1 = $signed(shl_ln703_12_fu_1788_p3);

assign sext_ln170_5_fu_1874_p1 = $signed(shl_ln703_15_fu_1866_p3);

assign sext_ln170_6_fu_1952_p1 = $signed(shl_ln703_18_fu_1944_p3);

assign sext_ln170_7_fu_2030_p1 = $signed(shl_ln703_21_fu_2022_p3);

assign sext_ln170_8_fu_2108_p1 = $signed(shl_ln703_24_fu_2100_p3);

assign sext_ln170_9_fu_2186_p1 = $signed(shl_ln703_27_fu_2178_p3);

assign sext_ln170_fu_1464_p1 = $signed(shl_ln703_1_fu_1456_p3);

assign sext_ln703_10_fu_1668_p1 = $signed(shl_ln703_8_fu_1660_p3);

assign sext_ln703_11_fu_2777_p1 = $signed(add_ln703_7_reg_3748);

assign sext_ln703_12_fu_2793_p1 = $signed(shl_ln703_9_fu_2786_p3);

assign sext_ln703_13_fu_1746_p1 = $signed(shl_ln703_10_fu_1738_p3);

assign sext_ln703_14_fu_2802_p1 = $signed(add_ln703_10_reg_3758);

assign sext_ln703_15_fu_2818_p1 = $signed(shl_ln703_11_fu_2811_p3);

assign sext_ln703_16_fu_1824_p1 = $signed(shl_ln703_13_fu_1816_p3);

assign sext_ln703_17_fu_2827_p1 = $signed(add_ln703_13_reg_3768);

assign sext_ln703_18_fu_2843_p1 = $signed(shl_ln703_14_fu_2836_p3);

assign sext_ln703_19_fu_1902_p1 = $signed(shl_ln703_16_fu_1894_p3);

assign sext_ln703_1_fu_2718_p1 = $signed(shl_ln1_fu_2711_p3);

assign sext_ln703_20_fu_2852_p1 = $signed(add_ln703_16_reg_3778);

assign sext_ln703_21_fu_2868_p1 = $signed(shl_ln703_17_fu_2861_p3);

assign sext_ln703_22_fu_1980_p1 = $signed(shl_ln703_19_fu_1972_p3);

assign sext_ln703_23_fu_2877_p1 = $signed(add_ln703_19_reg_3788);

assign sext_ln703_24_fu_2893_p1 = $signed(shl_ln703_20_fu_2886_p3);

assign sext_ln703_25_fu_2058_p1 = $signed(shl_ln703_22_fu_2050_p3);

assign sext_ln703_26_fu_2902_p1 = $signed(add_ln703_22_reg_3798);

assign sext_ln703_27_fu_2918_p1 = $signed(shl_ln703_23_fu_2911_p3);

assign sext_ln703_28_fu_2136_p1 = $signed(shl_ln703_25_fu_2128_p3);

assign sext_ln703_29_fu_2927_p1 = $signed(add_ln703_25_reg_3808);

assign sext_ln703_2_fu_1438_p1 = $signed(arg_V_read_assign_1_fu_1428_p4);

assign sext_ln703_30_fu_2943_p1 = $signed(shl_ln703_26_fu_2936_p3);

assign sext_ln703_31_fu_2214_p1 = $signed(shl_ln703_28_fu_2206_p3);

assign sext_ln703_32_fu_2952_p1 = $signed(add_ln703_28_reg_3818);

assign sext_ln703_33_fu_2968_p1 = $signed(shl_ln703_29_fu_2961_p3);

assign sext_ln703_34_fu_2292_p1 = $signed(shl_ln703_31_fu_2284_p3);

assign sext_ln703_35_fu_2977_p1 = $signed(add_ln703_31_reg_3828);

assign sext_ln703_36_fu_2993_p1 = $signed(shl_ln703_32_fu_2986_p3);

assign sext_ln703_37_fu_2370_p1 = $signed(shl_ln703_34_fu_2362_p3);

assign sext_ln703_38_fu_3002_p1 = $signed(add_ln703_34_reg_3838);

assign sext_ln703_39_fu_3018_p1 = $signed(shl_ln703_35_fu_3011_p3);

assign sext_ln703_3_fu_1486_p1 = $signed(arg_V_read_assign_2_fu_1476_p4);

assign sext_ln703_40_fu_2448_p1 = $signed(shl_ln703_37_fu_2440_p3);

assign sext_ln703_41_fu_3027_p1 = $signed(add_ln703_37_reg_3848);

assign sext_ln703_42_fu_3043_p1 = $signed(shl_ln703_38_fu_3036_p3);

assign sext_ln703_43_fu_2526_p1 = $signed(shl_ln703_40_fu_2518_p3);

assign sext_ln703_44_fu_3052_p1 = $signed(add_ln703_40_reg_3858);

assign sext_ln703_45_fu_3068_p1 = $signed(shl_ln703_41_fu_3061_p3);

assign sext_ln703_46_fu_2604_p1 = $signed(shl_ln703_43_fu_2596_p3);

assign sext_ln703_47_fu_3077_p1 = $signed(add_ln703_43_reg_3868);

assign sext_ln703_48_fu_3093_p1 = $signed(shl_ln703_44_fu_3086_p3);

assign sext_ln703_49_fu_2682_p1 = $signed(shl_ln703_46_fu_2674_p3);

assign sext_ln703_4_fu_1512_p1 = $signed(shl_ln703_2_fu_1504_p3);

assign sext_ln703_50_fu_3102_p1 = $signed(add_ln703_46_reg_3878);

assign sext_ln703_5_fu_2727_p1 = $signed(add_ln703_1_reg_3728);

assign sext_ln703_6_fu_2743_p1 = $signed(shl_ln703_3_fu_2736_p3);

assign sext_ln703_7_fu_1590_p1 = $signed(shl_ln703_5_fu_1582_p3);

assign sext_ln703_8_fu_2752_p1 = $signed(add_ln703_4_reg_3738);

assign sext_ln703_9_fu_2768_p1 = $signed(shl_ln703_6_fu_2761_p3);

assign sext_ln703_fu_1402_p1 = $signed(trunc_ln647_fu_1398_p1);

assign sf_fu_810_p2 = (32'd1 + sf_5_fu_228);

assign shl_ln122_4_fu_747_p2 = mul_ln120_loc_read_reg_3466 << 32'd2;

assign shl_ln122_fu_742_p2 = mul_ln120_loc_read_reg_3466 << 32'd5;

assign shl_ln1_fu_2711_p3 = {{select_ln89_reg_3723}, {1'd0}};

assign shl_ln703_10_fu_1738_p3 = {{select_ln89_11_fu_1730_p3}, {1'd0}};

assign shl_ln703_11_fu_2811_p3 = {{select_ln89_12_reg_3763}, {1'd0}};

assign shl_ln703_12_fu_1788_p3 = {{select_ln89_13_fu_1780_p3}, {1'd0}};

assign shl_ln703_13_fu_1816_p3 = {{select_ln89_14_fu_1808_p3}, {1'd0}};

assign shl_ln703_14_fu_2836_p3 = {{select_ln89_15_reg_3773}, {1'd0}};

assign shl_ln703_15_fu_1866_p3 = {{select_ln89_16_fu_1858_p3}, {1'd0}};

assign shl_ln703_16_fu_1894_p3 = {{select_ln89_17_fu_1886_p3}, {1'd0}};

assign shl_ln703_17_fu_2861_p3 = {{select_ln89_18_reg_3783}, {1'd0}};

assign shl_ln703_18_fu_1944_p3 = {{select_ln89_19_fu_1936_p3}, {1'd0}};

assign shl_ln703_19_fu_1972_p3 = {{select_ln89_20_fu_1964_p3}, {1'd0}};

assign shl_ln703_1_fu_1456_p3 = {{select_ln89_1_fu_1448_p3}, {1'd0}};

assign shl_ln703_20_fu_2886_p3 = {{select_ln89_21_reg_3793}, {1'd0}};

assign shl_ln703_21_fu_2022_p3 = {{select_ln89_22_fu_2014_p3}, {1'd0}};

assign shl_ln703_22_fu_2050_p3 = {{select_ln89_23_fu_2042_p3}, {1'd0}};

assign shl_ln703_23_fu_2911_p3 = {{select_ln89_24_reg_3803}, {1'd0}};

assign shl_ln703_24_fu_2100_p3 = {{select_ln89_25_fu_2092_p3}, {1'd0}};

assign shl_ln703_25_fu_2128_p3 = {{select_ln89_26_fu_2120_p3}, {1'd0}};

assign shl_ln703_26_fu_2936_p3 = {{select_ln89_27_reg_3813}, {1'd0}};

assign shl_ln703_27_fu_2178_p3 = {{select_ln89_28_fu_2170_p3}, {1'd0}};

assign shl_ln703_28_fu_2206_p3 = {{select_ln89_29_fu_2198_p3}, {1'd0}};

assign shl_ln703_29_fu_2961_p3 = {{select_ln89_30_reg_3823}, {1'd0}};

assign shl_ln703_2_fu_1504_p3 = {{select_ln89_2_fu_1496_p3}, {1'd0}};

assign shl_ln703_30_fu_2256_p3 = {{select_ln89_31_fu_2248_p3}, {1'd0}};

assign shl_ln703_31_fu_2284_p3 = {{select_ln89_32_fu_2276_p3}, {1'd0}};

assign shl_ln703_32_fu_2986_p3 = {{select_ln89_33_reg_3833}, {1'd0}};

assign shl_ln703_33_fu_2334_p3 = {{select_ln89_34_fu_2326_p3}, {1'd0}};

assign shl_ln703_34_fu_2362_p3 = {{select_ln89_35_fu_2354_p3}, {1'd0}};

assign shl_ln703_35_fu_3011_p3 = {{select_ln89_36_reg_3843}, {1'd0}};

assign shl_ln703_36_fu_2412_p3 = {{select_ln89_37_fu_2404_p3}, {1'd0}};

assign shl_ln703_37_fu_2440_p3 = {{select_ln89_38_fu_2432_p3}, {1'd0}};

assign shl_ln703_38_fu_3036_p3 = {{select_ln89_39_reg_3853}, {1'd0}};

assign shl_ln703_39_fu_2490_p3 = {{select_ln89_40_fu_2482_p3}, {1'd0}};

assign shl_ln703_3_fu_2736_p3 = {{select_ln89_3_reg_3733}, {1'd0}};

assign shl_ln703_40_fu_2518_p3 = {{select_ln89_41_fu_2510_p3}, {1'd0}};

assign shl_ln703_41_fu_3061_p3 = {{select_ln89_42_reg_3863}, {1'd0}};

assign shl_ln703_42_fu_2568_p3 = {{select_ln89_43_fu_2560_p3}, {1'd0}};

assign shl_ln703_43_fu_2596_p3 = {{select_ln89_44_fu_2588_p3}, {1'd0}};

assign shl_ln703_44_fu_3086_p3 = {{select_ln89_45_reg_3873}, {1'd0}};

assign shl_ln703_45_fu_2646_p3 = {{select_ln89_46_fu_2638_p3}, {1'd0}};

assign shl_ln703_46_fu_2674_p3 = {{select_ln89_47_fu_2666_p3}, {1'd0}};

assign shl_ln703_4_fu_1554_p3 = {{select_ln89_4_fu_1546_p3}, {1'd0}};

assign shl_ln703_5_fu_1582_p3 = {{select_ln89_5_fu_1574_p3}, {1'd0}};

assign shl_ln703_6_fu_2761_p3 = {{select_ln89_6_reg_3743}, {1'd0}};

assign shl_ln703_7_fu_1632_p3 = {{select_ln89_7_fu_1624_p3}, {1'd0}};

assign shl_ln703_8_fu_1660_p3 = {{select_ln89_8_fu_1652_p3}, {1'd0}};

assign shl_ln703_9_fu_2786_p3 = {{select_ln89_9_reg_3753}, {1'd0}};

assign shl_ln703_s_fu_1710_p3 = {{select_ln89_10_fu_1702_p3}, {1'd0}};

assign start_out = real_start;

assign sub_ln1253_1_fu_1442_p2 = ($signed(9'd0) - $signed(sext_ln703_2_fu_1438_p1));

assign sub_ln1253_2_fu_1490_p2 = ($signed(9'd0) - $signed(sext_ln703_3_fu_1486_p1));

assign sub_ln1253_fu_1406_p2 = ($signed(9'd0) - $signed(sext_ln703_fu_1402_p1));

assign threshs0_m_threshold_10_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_11_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_12_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_13_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_14_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_15_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_1_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_2_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_3_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_4_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_5_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_6_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_7_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_8_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_9_address0 = zext_ln142_fu_2692_p1;

assign threshs0_m_threshold_address0 = zext_ln142_fu_2692_p1;

assign tile_fu_1189_p2 = (32'd1 + tile_assign_fu_224);

assign trunc_ln321_5_fu_781_p1 = sf_5_fu_228[3:0];

assign trunc_ln321_fu_785_p1 = sf_5_fu_228[3:0];

assign trunc_ln647_fu_1398_p1 = ap_phi_reg_pp0_iter2_act_m_val_V_reg_718[7:0];

assign weights0_m_weights_V_10_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_11_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_12_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_13_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_14_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_15_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_1_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_2_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_3_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_4_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_5_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_6_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_7_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_8_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_9_address0 = zext_ln89_fu_1169_p1;

assign weights0_m_weights_V_address0 = zext_ln89_fu_1169_p1;

assign zext_ln142_fu_2692_p1 = nf_assign_load_reg_3542_pp0_iter1_reg;

assign zext_ln89_fu_1169_p1 = tile_assign_fu_224;

always @ (posedge ap_clk) begin
    add_ln122_reg_3472[1:0] <= 2'b00;
    add_ln703_1_reg_3728[0] <= 1'b0;
    add_ln703_4_reg_3738[0] <= 1'b0;
    add_ln703_7_reg_3748[0] <= 1'b0;
    add_ln703_10_reg_3758[0] <= 1'b0;
    add_ln703_13_reg_3768[0] <= 1'b0;
    add_ln703_16_reg_3778[0] <= 1'b0;
    add_ln703_19_reg_3788[0] <= 1'b0;
    add_ln703_22_reg_3798[0] <= 1'b0;
    add_ln703_25_reg_3808[0] <= 1'b0;
    add_ln703_28_reg_3818[0] <= 1'b0;
    add_ln703_31_reg_3828[0] <= 1'b0;
    add_ln703_34_reg_3838[0] <= 1'b0;
    add_ln703_37_reg_3848[0] <= 1'b0;
    add_ln703_40_reg_3858[0] <= 1'b0;
    add_ln703_43_reg_3868[0] <= 1'b0;
    add_ln703_46_reg_3878[0] <= 1'b0;
end

endmodule //Matrix_Vector_Activa_4
